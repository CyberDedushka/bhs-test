{"version":"2","toolVersion":"1.84.0","snippets":{"93e3d76e18112bf0f1c4280e4323078ae68666d708351100886338141eb73345":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import HttpUrlIntegration, HttpLambdaIntegration\n\n# books_default_fn: lambda.Function\n\n\nget_books_integration = HttpUrlIntegration(\"GetBooksIntegration\", \"https://get-books-proxy.myproxy.internal\")\nbooks_default_integration = HttpLambdaIntegration(\"BooksIntegration\", books_default_fn)\n\nhttp_api = apigwv2.HttpApi(self, \"HttpApi\")\n\nhttp_api.add_routes(\n    path=\"/books\",\n    methods=[apigwv2.HttpMethod.GET],\n    integration=get_books_integration\n)\nhttp_api.add_routes(\n    path=\"/books\",\n    methods=[apigwv2.HttpMethod.ANY],\n    integration=books_default_integration\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction booksDefaultFn;\n\n\nvar getBooksIntegration = new HttpUrlIntegration(\"GetBooksIntegration\", \"https://get-books-proxy.myproxy.internal\");\nvar booksDefaultIntegration = new HttpLambdaIntegration(\"BooksIntegration\", booksDefaultFn);\n\nvar httpApi = new HttpApi(this, \"HttpApi\");\n\nhttpApi.AddRoutes(new AddRoutesOptions {\n    Path = \"/books\",\n    Methods = new [] { HttpMethod.GET },\n    Integration = getBooksIntegration\n});\nhttpApi.AddRoutes(new AddRoutesOptions {\n    Path = \"/books\",\n    Methods = new [] { HttpMethod.ANY },\n    Integration = booksDefaultIntegration\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.HttpUrlIntegration;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.HttpLambdaIntegration;\n\nFunction booksDefaultFn;\n\n\nHttpUrlIntegration getBooksIntegration = new HttpUrlIntegration(\"GetBooksIntegration\", \"https://get-books-proxy.myproxy.internal\");\nHttpLambdaIntegration booksDefaultIntegration = new HttpLambdaIntegration(\"BooksIntegration\", booksDefaultFn);\n\nHttpApi httpApi = new HttpApi(this, \"HttpApi\");\n\nhttpApi.addRoutes(AddRoutesOptions.builder()\n        .path(\"/books\")\n        .methods(List.of(HttpMethod.GET))\n        .integration(getBooksIntegration)\n        .build());\nhttpApi.addRoutes(AddRoutesOptions.builder()\n        .path(\"/books\")\n        .methods(List.of(HttpMethod.ANY))\n        .integration(booksDefaultIntegration)\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar booksDefaultFn function\n\n\ngetBooksIntegration := awscdkawsapigatewayv2integrations.NewHttpUrlIntegration(jsii.String(\"GetBooksIntegration\"), jsii.String(\"https://get-books-proxy.myproxy.internal\"))\nbooksDefaultIntegration := awscdkawsapigatewayv2integrations.NewHttpLambdaIntegration(jsii.String(\"BooksIntegration\"), booksDefaultFn)\n\nhttpApi := apigwv2.NewHttpApi(this, jsii.String(\"HttpApi\"))\n\nhttpApi.AddRoutes(&AddRoutesOptions{\n\tPath: jsii.String(\"/books\"),\n\tMethods: []httpMethod{\n\t\tapigwv2.*httpMethod_GET,\n\t},\n\tIntegration: getBooksIntegration,\n})\nhttpApi.AddRoutes(&AddRoutesOptions{\n\tPath: jsii.String(\"/books\"),\n\tMethods: []*httpMethod{\n\t\tapigwv2.*httpMethod_ANY,\n\t},\n\tIntegration: booksDefaultIntegration,\n})","version":"1"},"$":{"source":"import { HttpUrlIntegration, HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst getBooksIntegration = new HttpUrlIntegration('GetBooksIntegration', 'https://get-books-proxy.myproxy.internal');\n\ndeclare const booksDefaultFn: lambda.Function;\nconst booksDefaultIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: getBooksIntegration,\n});\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.ANY ],\n  integration: booksDefaultIntegration,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":90}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.HttpLambdaIntegration","@aws-cdk/aws-apigatewayv2-integrations.HttpUrlIntegration","@aws-cdk/aws-apigatewayv2.AddRoutesOptions","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApi#addRoutes","@aws-cdk/aws-apigatewayv2.HttpMethod","@aws-cdk/aws-apigatewayv2.HttpMethod#ANY","@aws-cdk/aws-apigatewayv2.HttpMethod#GET","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpUrlIntegration, HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const booksDefaultFn: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst getBooksIntegration = new HttpUrlIntegration('GetBooksIntegration', 'https://get-books-proxy.myproxy.internal');\nconst booksDefaultIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: getBooksIntegration,\n});\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.ANY ],\n  integration: booksDefaultIntegration,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":31,"104":1,"130":1,"153":1,"169":1,"192":2,"193":2,"194":7,"196":2,"197":3,"225":4,"226":2,"242":4,"243":4,"254":1,"255":1,"257":1,"258":2,"281":6,"290":1},"fqnsFingerprint":"f2a9afe521d99b96f9c734d81075f37a1ea2f1832580124480bdd8f475be4f19"},"38a6bc2c44a615e5a882fe9fae24ada8c22db0842790e80d9ddf16d7560e2b18":{"translations":{"python":{"source":"http_api = apigwv2.HttpApi(self, \"HttpApi\",\n    disable_execute_api_endpoint=True\n)","version":"2"},"csharp":{"source":"var httpApi = new HttpApi(this, \"HttpApi\", new HttpApiProps {\n    DisableExecuteApiEndpoint = true\n});","version":"1"},"java":{"source":"HttpApi httpApi = HttpApi.Builder.create(this, \"HttpApi\")\n        .disableExecuteApiEndpoint(true)\n        .build();","version":"1"},"go":{"source":"httpApi := apigwv2.NewHttpApi(this, jsii.String(\"HttpApi\"), &HttpApiProps{\n\tDisableExecuteApiEndpoint: jsii.Boolean(true),\n})","version":"1"},"$":{"source":"const httpApi = new apigwv2.HttpApi(this, 'HttpApi', {\n  disableExecuteApiEndpoint: true,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":114}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi', {\n  disableExecuteApiEndpoint: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":4,"104":1,"106":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"8df5fcb9dad20db249dc7a695bc796fbff7cf02864dd88ce9b6bb6e6244c4590"},"e39d836632e5aaf0668b45444e7f900c11d8fd0aad97c86f3aa17651a27d6550":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import HttpUrlIntegration\n\n\napigwv2.HttpApi(self, \"HttpProxyApi\",\n    default_integration=HttpUrlIntegration(\"DefaultIntegration\", \"https://example.com\")\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\n\nnew HttpApi(this, \"HttpProxyApi\", new HttpApiProps {\n    DefaultIntegration = new HttpUrlIntegration(\"DefaultIntegration\", \"https://example.com\")\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.HttpUrlIntegration;\n\n\nHttpApi.Builder.create(this, \"HttpProxyApi\")\n        .defaultIntegration(new HttpUrlIntegration(\"DefaultIntegration\", \"https://example.com\"))\n        .build();","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\n\napigwv2.NewHttpApi(this, jsii.String(\"HttpProxyApi\"), &HttpApiProps{\n\tDefaultIntegration: awscdkawsapigatewayv2integrations.NewHttpUrlIntegration(jsii.String(\"DefaultIntegration\"), jsii.String(\"https://example.com\")),\n})","version":"1"},"$":{"source":"import { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nnew apigwv2.HttpApi(this, 'HttpProxyApi', {\n  defaultIntegration: new HttpUrlIntegration('DefaultIntegration', 'https://example.com'),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":123}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.HttpUrlIntegration","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew apigwv2.HttpApi(this, 'HttpProxyApi', {\n  defaultIntegration: new HttpUrlIntegration('DefaultIntegration', 'https://example.com'),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":5,"104":1,"193":1,"194":1,"197":2,"226":1,"254":1,"255":1,"257":1,"258":1,"281":1,"290":1},"fqnsFingerprint":"2a6cb584582e33274f45eb83056689210c5266983d27efe591061c08f3c6c108"},"dd99266791af6274a58a47c5bcbbb1600a461b46da1180f9c8879885815d094a":{"translations":{"python":{"source":"apigwv2.HttpApi(self, \"HttpProxyApi\",\n    cors_preflight=apigwv2.CorsPreflightOptions(\n        allow_headers=[\"Authorization\"],\n        allow_methods=[apigwv2.CorsHttpMethod.GET, apigwv2.CorsHttpMethod.HEAD, apigwv2.CorsHttpMethod.OPTIONS, apigwv2.CorsHttpMethod.POST\n        ],\n        allow_origins=[\"*\"],\n        max_age=Duration.days(10)\n    )\n)","version":"2"},"csharp":{"source":"new HttpApi(this, \"HttpProxyApi\", new HttpApiProps {\n    CorsPreflight = new CorsPreflightOptions {\n        AllowHeaders = new [] { \"Authorization\" },\n        AllowMethods = new [] { CorsHttpMethod.GET, CorsHttpMethod.HEAD, CorsHttpMethod.OPTIONS, CorsHttpMethod.POST },\n        AllowOrigins = new [] { \"*\" },\n        MaxAge = Duration.Days(10)\n    }\n});","version":"1"},"java":{"source":"HttpApi.Builder.create(this, \"HttpProxyApi\")\n        .corsPreflight(CorsPreflightOptions.builder()\n                .allowHeaders(List.of(\"Authorization\"))\n                .allowMethods(List.of(CorsHttpMethod.GET, CorsHttpMethod.HEAD, CorsHttpMethod.OPTIONS, CorsHttpMethod.POST))\n                .allowOrigins(List.of(\"*\"))\n                .maxAge(Duration.days(10))\n                .build())\n        .build();","version":"1"},"go":{"source":"apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyApi\"), &HttpApiProps{\n\tCorsPreflight: &CorsPreflightOptions{\n\t\tAllowHeaders: []*string{\n\t\t\tjsii.String(\"Authorization\"),\n\t\t},\n\t\tAllowMethods: []corsHttpMethod{\n\t\t\tapigwv2.*corsHttpMethod_GET,\n\t\t\tapigwv2.*corsHttpMethod_HEAD,\n\t\t\tapigwv2.*corsHttpMethod_OPTIONS,\n\t\t\tapigwv2.*corsHttpMethod_POST,\n\t\t},\n\t\tAllowOrigins: []*string{\n\t\t\tjsii.String(\"*\"),\n\t\t},\n\t\tMaxAge: awscdkcore.Duration_Days(jsii.Number(10)),\n\t},\n})","version":"1"},"$":{"source":"new apigwv2.HttpApi(this, 'HttpProxyApi', {\n  corsPreflight: {\n    allowHeaders: ['Authorization'],\n    allowMethods: [\n      apigwv2.CorsHttpMethod.GET,\n      apigwv2.CorsHttpMethod.HEAD,\n      apigwv2.CorsHttpMethod.OPTIONS,\n      apigwv2.CorsHttpMethod.POST,\n    ],\n    allowOrigins: ['*'],\n    maxAge: Duration.days(10),\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":144}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CorsHttpMethod","@aws-cdk/aws-apigatewayv2.CorsHttpMethod#GET","@aws-cdk/aws-apigatewayv2.CorsHttpMethod#HEAD","@aws-cdk/aws-apigatewayv2.CorsHttpMethod#OPTIONS","@aws-cdk/aws-apigatewayv2.CorsHttpMethod#POST","@aws-cdk/aws-apigatewayv2.CorsPreflightOptions","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/core.Duration","@aws-cdk/core.Duration#days","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew apigwv2.HttpApi(this, 'HttpProxyApi', {\n  corsPreflight: {\n    allowHeaders: ['Authorization'],\n    allowMethods: [\n      apigwv2.CorsHttpMethod.GET,\n      apigwv2.CorsHttpMethod.HEAD,\n      apigwv2.CorsHttpMethod.OPTIONS,\n      apigwv2.CorsHttpMethod.POST,\n    ],\n    allowOrigins: ['*'],\n    maxAge: Duration.days(10),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":1,"10":3,"75":21,"104":1,"192":3,"193":2,"194":10,"196":1,"197":1,"226":1,"281":5},"fqnsFingerprint":"4f4488db366ea128e9fc4a0fa4b13edc2514e4534cfa17c4032efc35779ab429"},"b2b64fd276ee2b0de101b63059aa64ccac50adf03374e3ce857a5c28cdb30ea1":{"translations":{"python":{"source":"# api: apigwv2.HttpApi\n\n\napigwv2.HttpStage(self, \"Stage\",\n    http_api=api,\n    stage_name=\"beta\"\n)","version":"2"},"csharp":{"source":"HttpApi api;\n\n\nnew HttpStage(this, \"Stage\", new HttpStageProps {\n    HttpApi = api,\n    StageName = \"beta\"\n});","version":"1"},"java":{"source":"HttpApi api;\n\n\nHttpStage.Builder.create(this, \"Stage\")\n        .httpApi(api)\n        .stageName(\"beta\")\n        .build();","version":"1"},"go":{"source":"var api httpApi\n\n\napigwv2.NewHttpStage(this, jsii.String(\"Stage\"), &HttpStageProps{\n\tHttpApi: api,\n\tStageName: jsii.String(\"beta\"),\n})","version":"1"},"$":{"source":"declare const api: apigwv2.HttpApi;\n\nnew apigwv2.HttpStage(this, 'Stage', {\n  httpApi: api,\n  stageName: 'beta',\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":169}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpStage","@aws-cdk/aws-apigatewayv2.HttpStageProps","@aws-cdk/aws-apigatewayv2.IHttpApi","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const api: apigwv2.HttpApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew apigwv2.HttpStage(this, 'Stage', {\n  httpApi: api,\n  stageName: 'beta',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":8,"104":1,"130":1,"153":1,"169":1,"193":1,"194":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":2,"290":1},"fqnsFingerprint":"6b4cf318ac5f30e22fb6ec95af129012aef0f144494809096dcd1863c2408bdb"},"9e834cd8637165b05fef8f412ef154f2b0f7db60bd4f6ed7060f5444220122c3":{"translations":{"python":{"source":"import aws_cdk.aws_certificatemanager as acm\nfrom aws_cdk.aws_apigatewayv2_integrations import HttpLambdaIntegration\n\n# handler: lambda.Function\n\n\ncert_arn = \"arn:aws:acm:us-east-1:111111111111:certificate\"\ndomain_name = \"example.com\"\n\ndn = apigwv2.DomainName(self, \"DN\",\n    domain_name=domain_name,\n    certificate=acm.Certificate.from_certificate_arn(self, \"cert\", cert_arn)\n)\napi = apigwv2.HttpApi(self, \"HttpProxyProdApi\",\n    default_integration=HttpLambdaIntegration(\"DefaultIntegration\", handler),\n    # https://${dn.domainName}/foo goes to prodApi $default stage\n    default_domain_mapping=apigwv2.DomainMappingOptions(\n        domain_name=dn,\n        mapping_key=\"foo\"\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.CertificateManager;\nusing Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction handler;\n\n\nvar certArn = \"arn:aws:acm:us-east-1:111111111111:certificate\";\nvar domainName = \"example.com\";\n\nvar dn = new DomainName(this, \"DN\", new DomainNameProps {\n    DomainName = domainName,\n    Certificate = Certificate.FromCertificateArn(this, \"cert\", certArn)\n});\nvar api = new HttpApi(this, \"HttpProxyProdApi\", new HttpApiProps {\n    DefaultIntegration = new HttpLambdaIntegration(\"DefaultIntegration\", handler),\n    // https://${dn.domainName}/foo goes to prodApi $default stage\n    DefaultDomainMapping = new DomainMappingOptions {\n        DomainName = dn,\n        MappingKey = \"foo\"\n    }\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.certificatemanager.*;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.HttpLambdaIntegration;\n\nFunction handler;\n\n\nString certArn = \"arn:aws:acm:us-east-1:111111111111:certificate\";\nString domainName = \"example.com\";\n\nDomainName dn = DomainName.Builder.create(this, \"DN\")\n        .domainName(domainName)\n        .certificate(Certificate.fromCertificateArn(this, \"cert\", certArn))\n        .build();\nHttpApi api = HttpApi.Builder.create(this, \"HttpProxyProdApi\")\n        .defaultIntegration(new HttpLambdaIntegration(\"DefaultIntegration\", handler))\n        // https://${dn.domainName}/foo goes to prodApi $default stage\n        .defaultDomainMapping(DomainMappingOptions.builder()\n                .domainName(dn)\n                .mappingKey(\"foo\")\n                .build())\n        .build();","version":"1"},"go":{"source":"import acm \"github.com/aws-samples/dummy/awscdkawscertificatemanager\"\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar handler function\n\n\ncertArn := \"arn:aws:acm:us-east-1:111111111111:certificate\"\ndomainName := \"example.com\"\n\ndn := apigwv2.NewDomainName(this, jsii.String(\"DN\"), &DomainNameProps{\n\tDomainName: jsii.String(DomainName),\n\tCertificate: acm.Certificate_FromCertificateArn(this, jsii.String(\"cert\"), certArn),\n})\napi := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyProdApi\"), &HttpApiProps{\n\tDefaultIntegration: awscdkawsapigatewayv2integrations.NewHttpLambdaIntegration(jsii.String(\"DefaultIntegration\"), handler),\n\t// https://${dn.domainName}/foo goes to prodApi $default stage\n\tDefaultDomainMapping: &DomainMappingOptions{\n\t\tDomainName: dn,\n\t\tMappingKey: jsii.String(\"foo\"),\n\t},\n})","version":"1"},"$":{"source":"import * as acm from '@aws-cdk/aws-certificatemanager';\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\n\nconst dn = new apigwv2.DomainName(this, 'DN', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n});\n\ndeclare const handler: lambda.Function;\nconst api = new apigwv2.HttpApi(this, 'HttpProxyProdApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/foo goes to prodApi $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'foo',\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":190}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.HttpLambdaIntegration","@aws-cdk/aws-apigatewayv2.DomainMappingOptions","@aws-cdk/aws-apigatewayv2.DomainName","@aws-cdk/aws-apigatewayv2.DomainNameProps","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-apigatewayv2.IDomainName","@aws-cdk/aws-certificatemanager.Certificate","@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn","@aws-cdk/aws-certificatemanager.ICertificate","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as acm from '@aws-cdk/aws-certificatemanager';\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const handler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\n\nconst dn = new apigwv2.DomainName(this, 'DN', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n});\nconst api = new apigwv2.HttpApi(this, 'HttpProxyProdApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/foo goes to prodApi $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'foo',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":9,"75":26,"104":3,"130":1,"153":1,"169":1,"193":3,"194":4,"196":1,"197":3,"225":5,"242":5,"243":5,"254":2,"255":2,"256":1,"257":1,"258":1,"281":5,"282":1,"290":1},"fqnsFingerprint":"143691bd4009a6bcf45d19bfb48d560f249214ff83c9b3d277a1e9f8ab793678"},"653eb43ee87ee28533dc9272401f864191db9ab64431e616fef77fc03431cb4f":{"translations":{"python":{"source":"# api: apigwv2.HttpApi\n# dn: apigwv2.DomainName\n\n\napi.add_stage(\"beta\",\n    stage_name=\"beta\",\n    auto_deploy=True,\n    # https://${dn.domainName}/bar goes to the beta stage\n    domain_mapping=apigwv2.DomainMappingOptions(\n        domain_name=dn,\n        mapping_key=\"bar\"\n    )\n)","version":"2"},"csharp":{"source":"HttpApi api;\nDomainName dn;\n\n\napi.AddStage(\"beta\", new HttpStageOptions {\n    StageName = \"beta\",\n    AutoDeploy = true,\n    // https://${dn.domainName}/bar goes to the beta stage\n    DomainMapping = new DomainMappingOptions {\n        DomainName = dn,\n        MappingKey = \"bar\"\n    }\n});","version":"1"},"java":{"source":"HttpApi api;\nDomainName dn;\n\n\napi.addStage(\"beta\", HttpStageOptions.builder()\n        .stageName(\"beta\")\n        .autoDeploy(true)\n        // https://${dn.domainName}/bar goes to the beta stage\n        .domainMapping(DomainMappingOptions.builder()\n                .domainName(dn)\n                .mappingKey(\"bar\")\n                .build())\n        .build());","version":"1"},"go":{"source":"var api httpApi\nvar dn domainName\n\n\napi.AddStage(jsii.String(\"beta\"), &HttpStageOptions{\n\tStageName: jsii.String(\"beta\"),\n\tAutoDeploy: jsii.Boolean(true),\n\t// https://${dn.domainName}/bar goes to the beta stage\n\tDomainMapping: &DomainMappingOptions{\n\t\tDomainName: dn,\n\t\tMappingKey: jsii.String(\"bar\"),\n\t},\n})","version":"1"},"$":{"source":"declare const api: apigwv2.HttpApi;\ndeclare const dn: apigwv2.DomainName;\n\napi.addStage('beta', {\n  stageName: 'beta',\n  autoDeploy: true,\n  // https://${dn.domainName}/bar goes to the beta stage\n  domainMapping: {\n    domainName: dn,\n    mappingKey: 'bar',\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":219}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.DomainMappingOptions","@aws-cdk/aws-apigatewayv2.HttpApi#addStage","@aws-cdk/aws-apigatewayv2.HttpStageOptions","@aws-cdk/aws-apigatewayv2.IDomainName"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const api: apigwv2.HttpApi;\ndeclare const dn: apigwv2.DomainName;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\napi.addStage('beta', {\n  stageName: 'beta',\n  autoDeploy: true,\n  // https://${dn.domainName}/bar goes to the beta stage\n  domainMapping: {\n    domainName: dn,\n    mappingKey: 'bar',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":14,"106":1,"130":2,"153":2,"169":2,"193":2,"194":1,"196":1,"225":2,"226":1,"242":2,"243":2,"281":5,"290":1},"fqnsFingerprint":"ea39e3ab648ac6eb7261a4b56208b3293d3d3129cf901abd57de4a044cc38c85"},"bb0f8556cba073f7e8bd894e04cb752f04fe5d34b9ed33df48f13cc8f56a84c4":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import HttpLambdaIntegration\n\n# handler: lambda.Function\n# dn: apigwv2.DomainName\n\n\napi_demo = apigwv2.HttpApi(self, \"DemoApi\",\n    default_integration=HttpLambdaIntegration(\"DefaultIntegration\", handler),\n    # https://${dn.domainName}/demo goes to apiDemo $default stage\n    default_domain_mapping=apigwv2.DomainMappingOptions(\n        domain_name=dn,\n        mapping_key=\"demo\"\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction handler;\nDomainName dn;\n\n\nvar apiDemo = new HttpApi(this, \"DemoApi\", new HttpApiProps {\n    DefaultIntegration = new HttpLambdaIntegration(\"DefaultIntegration\", handler),\n    // https://${dn.domainName}/demo goes to apiDemo $default stage\n    DefaultDomainMapping = new DomainMappingOptions {\n        DomainName = dn,\n        MappingKey = \"demo\"\n    }\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.HttpLambdaIntegration;\n\nFunction handler;\nDomainName dn;\n\n\nHttpApi apiDemo = HttpApi.Builder.create(this, \"DemoApi\")\n        .defaultIntegration(new HttpLambdaIntegration(\"DefaultIntegration\", handler))\n        // https://${dn.domainName}/demo goes to apiDemo $default stage\n        .defaultDomainMapping(DomainMappingOptions.builder()\n                .domainName(dn)\n                .mappingKey(\"demo\")\n                .build())\n        .build();","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar handler function\nvar dn domainName\n\n\napiDemo := apigwv2.NewHttpApi(this, jsii.String(\"DemoApi\"), &HttpApiProps{\n\tDefaultIntegration: awscdkawsapigatewayv2integrations.NewHttpLambdaIntegration(jsii.String(\"DefaultIntegration\"), handler),\n\t// https://${dn.domainName}/demo goes to apiDemo $default stage\n\tDefaultDomainMapping: &DomainMappingOptions{\n\t\tDomainName: dn,\n\t\tMappingKey: jsii.String(\"demo\"),\n\t},\n})","version":"1"},"$":{"source":"import { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const handler: lambda.Function;\ndeclare const dn: apigwv2.DomainName;\n\nconst apiDemo = new apigwv2.HttpApi(this, 'DemoApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/demo goes to apiDemo $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'demo',\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":236}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.HttpLambdaIntegration","@aws-cdk/aws-apigatewayv2.DomainMappingOptions","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-apigatewayv2.IDomainName","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const handler: lambda.Function;\ndeclare const dn: apigwv2.DomainName;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst apiDemo = new apigwv2.HttpApi(this, 'DemoApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/demo goes to apiDemo $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'demo',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":17,"104":1,"130":2,"153":2,"169":2,"193":2,"194":1,"197":2,"225":3,"242":3,"243":3,"254":1,"255":1,"257":1,"258":1,"281":4,"290":1},"fqnsFingerprint":"700b95ff773c0e6ea883a0db2ef817d5a1953899da5888d4381667255122c255"},"36292acb9f037deb18b89f48f2f7e0c08653ee78b3cd9fcb63f676d681b5d56f":{"translations":{"python":{"source":"# api_demo: apigwv2.HttpApi\n\ndemo_domain_url = api_demo.default_stage.domain_url","version":"2"},"csharp":{"source":"HttpApi apiDemo;\n\nvar demoDomainUrl = apiDemo.DefaultStage.DomainUrl;","version":"1"},"java":{"source":"HttpApi apiDemo;\n\nString demoDomainUrl = apiDemo.getDefaultStage().getDomainUrl();","version":"1"},"go":{"source":"var apiDemo httpApi\n\ndemoDomainUrl := apiDemo.DefaultStage.DomainUrl","version":"1"},"$":{"source":"declare const apiDemo: apigwv2.HttpApi;\nconst demoDomainUrl = apiDemo.defaultStage?.domainUrl; // returns \"https://example.com/demo\"","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":264}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpApi#defaultStage","@aws-cdk/aws-apigatewayv2.IHttpStage#domainUrl"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const apiDemo: apigwv2.HttpApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst demoDomainUrl = apiDemo.defaultStage?.domainUrl;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"28":1,"75":7,"130":1,"153":1,"169":1,"194":2,"225":2,"242":2,"243":2,"290":1},"fqnsFingerprint":"0cd0b97ba15842223c1aeaf3df430d281061359185a3420e6f7d9772be4951b8"},"c72a7241c540048012a11ffc5bd19ad911790b9285540c142f50a2492327deb6":{"translations":{"python":{"source":"import aws_cdk.aws_s3 as s3\nimport aws_cdk.aws_certificatemanager as acm\n# bucket: s3.Bucket\n\n\ncert_arn = \"arn:aws:acm:us-east-1:111111111111:certificate\"\ndomain_name = \"example.com\"\n\napigwv2.DomainName(self, \"DomainName\",\n    domain_name=domain_name,\n    certificate=acm.Certificate.from_certificate_arn(self, \"cert\", cert_arn),\n    mtls=apigwv2.MTLSConfig(\n        bucket=bucket,\n        key=\"someca.pem\",\n        version=\"version\"\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.S3;\nusing Amazon.CDK.AWS.CertificateManager;\nBucket bucket;\n\n\nvar certArn = \"arn:aws:acm:us-east-1:111111111111:certificate\";\nvar domainName = \"example.com\";\n\nnew DomainName(this, \"DomainName\", new DomainNameProps {\n    DomainName = domainName,\n    Certificate = Certificate.FromCertificateArn(this, \"cert\", certArn),\n    Mtls = new MTLSConfig {\n        Bucket = bucket,\n        Key = \"someca.pem\",\n        Version = \"version\"\n    }\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.services.certificatemanager.*;\nBucket bucket;\n\n\nString certArn = \"arn:aws:acm:us-east-1:111111111111:certificate\";\nString domainName = \"example.com\";\n\nDomainName.Builder.create(this, \"DomainName\")\n        .domainName(domainName)\n        .certificate(Certificate.fromCertificateArn(this, \"cert\", certArn))\n        .mtls(MTLSConfig.builder()\n                .bucket(bucket)\n                .key(\"someca.pem\")\n                .version(\"version\")\n                .build())\n        .build();","version":"1"},"go":{"source":"import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nimport acm \"github.com/aws-samples/dummy/awscdkawscertificatemanager\"\nvar bucket bucket\n\n\ncertArn := \"arn:aws:acm:us-east-1:111111111111:certificate\"\ndomainName := \"example.com\"\n\napigwv2.NewDomainName(this, jsii.String(\"DomainName\"), &DomainNameProps{\n\tDomainName: jsii.String(DomainName),\n\tCertificate: acm.Certificate_FromCertificateArn(this, jsii.String(\"cert\"), certArn),\n\tMtls: &MTLSConfig{\n\t\tBucket: *Bucket,\n\t\tKey: jsii.String(\"someca.pem\"),\n\t\tVersion: jsii.String(\"version\"),\n\t},\n})","version":"1"},"$":{"source":"import * as s3 from '@aws-cdk/aws-s3';\nimport * as acm from '@aws-cdk/aws-certificatemanager';\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\ndeclare const bucket: s3.Bucket;\n\nnew apigwv2.DomainName(this, 'DomainName', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n  mtls: {\n    bucket,\n    key: 'someca.pem',\n    version: 'version',\n  },\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":273}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.DomainName","@aws-cdk/aws-apigatewayv2.DomainNameProps","@aws-cdk/aws-apigatewayv2.MTLSConfig","@aws-cdk/aws-certificatemanager.Certificate","@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn","@aws-cdk/aws-certificatemanager.ICertificate","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as acm from '@aws-cdk/aws-certificatemanager';\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\n\nnew apigwv2.DomainName(this, 'DomainName', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n  mtls: {\n    bucket,\n    key: 'someca.pem',\n    version: 'version',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"75":19,"104":2,"130":1,"153":1,"169":1,"193":2,"194":3,"196":1,"197":1,"225":3,"226":1,"242":3,"243":3,"254":2,"255":2,"256":2,"281":4,"282":2,"290":1},"fqnsFingerprint":"61475d73359090306d69882cf9a399f8495d3059a1663ac1dc3755779e70e4f0"},"6083aba49f50fc76f76911508bbc052b422875f76965ceb00232187595912d36":{"translations":{"python":{"source":"api = apigwv2.HttpApi(self, \"my-api\")\nclient_error_metric = api.metric_client_error()","version":"2"},"csharp":{"source":"var api = new HttpApi(this, \"my-api\");\nvar clientErrorMetric = api.MetricClientError();","version":"1"},"java":{"source":"HttpApi api = new HttpApi(this, \"my-api\");\nMetric clientErrorMetric = api.metricClientError();","version":"1"},"go":{"source":"api := apigwv2.NewHttpApi(this, jsii.String(\"my-api\"))\nclientErrorMetric := api.metricClientError()","version":"1"},"$":{"source":"const api = new apigwv2.HttpApi(this, 'my-api');\nconst clientErrorMetric = api.metricClientError();","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":308}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-cloudwatch.Metric","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst api = new apigwv2.HttpApi(this, 'my-api');\nconst clientErrorMetric = api.metricClientError();\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":6,"104":1,"194":2,"196":1,"197":1,"225":2,"242":2,"243":2},"fqnsFingerprint":"d34f26197e3206db36f9e43294936489c980a1891533528788cf56404d97cdfe"},"78f2fbb50cfd29babe861392a20825448e9a6663597f68e04cc5db7c4893d831":{"translations":{"python":{"source":"api = apigwv2.HttpApi(self, \"my-api\")\nstage = apigwv2.HttpStage(self, \"Stage\",\n    http_api=api\n)\nclient_error_metric = stage.metric_client_error()","version":"2"},"csharp":{"source":"var api = new HttpApi(this, \"my-api\");\nvar stage = new HttpStage(this, \"Stage\", new HttpStageProps {\n    HttpApi = api\n});\nvar clientErrorMetric = stage.MetricClientError();","version":"1"},"java":{"source":"HttpApi api = new HttpApi(this, \"my-api\");\nHttpStage stage = HttpStage.Builder.create(this, \"Stage\")\n        .httpApi(api)\n        .build();\nMetric clientErrorMetric = stage.metricClientError();","version":"1"},"go":{"source":"api := apigwv2.NewHttpApi(this, jsii.String(\"my-api\"))\nstage := apigwv2.NewHttpStage(this, jsii.String(\"Stage\"), &HttpStageProps{\n\tHttpApi: api,\n})\nclientErrorMetric := stage.metricClientError()","version":"1"},"$":{"source":"const api = new apigwv2.HttpApi(this, 'my-api');\nconst stage = new apigwv2.HttpStage(this, 'Stage', {\n  httpApi: api,\n});\nconst clientErrorMetric = stage.metricClientError();","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":316}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpStage","@aws-cdk/aws-apigatewayv2.HttpStageProps","@aws-cdk/aws-apigatewayv2.IHttpApi","@aws-cdk/aws-cloudwatch.Metric","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst api = new apigwv2.HttpApi(this, 'my-api');\nconst stage = new apigwv2.HttpStage(this, 'Stage', {\n  httpApi: api,\n});\nconst clientErrorMetric = stage.metricClientError();\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":11,"104":2,"193":1,"194":3,"196":1,"197":2,"225":3,"242":3,"243":3,"281":1},"fqnsFingerprint":"0cd5516536e0f78d019c7f53660750169cdd9b0c6093d8f945e609dd5ec42125"},"8b1f1a5bf03b771cdfb29d13ab46cf111917ca41eb5db56cc5519e6b29f371c5":{"translations":{"python":{"source":"import aws_cdk.aws_ec2 as ec2\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nvpc_link = apigwv2.VpcLink(self, \"VpcLink\", vpc=vpc)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.EC2;\n\n\nvar vpc = new Vpc(this, \"VPC\");\nvar vpcLink = new VpcLink(this, \"VpcLink\", new VpcLinkProps { Vpc = vpc });","version":"1"},"java":{"source":"import software.amazon.awscdk.services.ec2.*;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nVpcLink vpcLink = VpcLink.Builder.create(this, \"VpcLink\").vpc(vpc).build();","version":"1"},"go":{"source":"import ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\n\n\nvpc := ec2.NewVpc(this, jsii.String(\"VPC\"))\nvpcLink := apigwv2.NewVpcLink(this, jsii.String(\"VpcLink\"), &VpcLinkProps{\n\tVpc: Vpc,\n})","version":"1"},"$":{"source":"import * as ec2 from '@aws-cdk/aws-ec2';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":330}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.VpcLink","@aws-cdk/aws-apigatewayv2.VpcLinkProps","@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-ec2.Vpc","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as ec2 from '@aws-cdk/aws-ec2';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":8,"104":2,"193":1,"194":2,"197":2,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"282":1,"290":1},"fqnsFingerprint":"90bd661982fb2fa537ba015ae8eaf8448a01ae8ad3d5ebe648bef3d437cf3f5a"},"f96a10bf87de14c0082e5afcdd1a0580db9dbd84abcacae16642946744f037bd":{"translations":{"python":{"source":"import aws_cdk.aws_ec2 as ec2\n\n# vpc: ec2.Vpc\n\nawesome_link = apigwv2.VpcLink.from_vpc_link_attributes(self, \"awesome-vpc-link\",\n    vpc_link_id=\"us-east-1_oiuR12Abd\",\n    vpc=vpc\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.EC2;\n\nVpc vpc;\n\nvar awesomeLink = VpcLink.FromVpcLinkAttributes(this, \"awesome-vpc-link\", new VpcLinkAttributes {\n    VpcLinkId = \"us-east-1_oiuR12Abd\",\n    Vpc = vpc\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.ec2.*;\n\nVpc vpc;\n\nIVpcLink awesomeLink = VpcLink.fromVpcLinkAttributes(this, \"awesome-vpc-link\", VpcLinkAttributes.builder()\n        .vpcLinkId(\"us-east-1_oiuR12Abd\")\n        .vpc(vpc)\n        .build());","version":"1"},"go":{"source":"import ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\n\nvar vpc vpc\n\nawesomeLink := apigwv2.VpcLink_FromVpcLinkAttributes(this, jsii.String(\"awesome-vpc-link\"), &VpcLinkAttributes{\n\tVpcLinkId: jsii.String(\"us-east-1_oiuR12Abd\"),\n\tVpc: Vpc,\n})","version":"1"},"$":{"source":"import * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const vpc: ec2.Vpc;\nconst awesomeLink = apigwv2.VpcLink.fromVpcLinkAttributes(this, 'awesome-vpc-link', {\n  vpcLinkId: 'us-east-1_oiuR12Abd',\n  vpc,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":339}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IVpcLink","@aws-cdk/aws-apigatewayv2.VpcLink","@aws-cdk/aws-apigatewayv2.VpcLink#fromVpcLinkAttributes","@aws-cdk/aws-apigatewayv2.VpcLinkAttributes","@aws-cdk/aws-ec2.IVpc","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst awesomeLink = apigwv2.VpcLink.fromVpcLinkAttributes(this, 'awesome-vpc-link', {\n  vpcLinkId: 'us-east-1_oiuR12Abd',\n  vpc,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":10,"104":1,"130":1,"153":1,"169":1,"193":1,"194":2,"196":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":1,"282":1,"290":1},"fqnsFingerprint":"4c82c8adf286211a594c854503c00c6e4c4f625f33efc4cd707709aa263acdd1"},"3b7eecb845ed1654917e7b86e48ab66053a2b980c5b71d6ae879c809354986b3":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import WebSocketLambdaIntegration\n\n# connect_handler: lambda.Function\n# disconnect_handler: lambda.Function\n# default_handler: lambda.Function\n\n\nweb_socket_api = apigwv2.WebSocketApi(self, \"mywsapi\",\n    connect_route_options=apigwv2.WebSocketRouteOptions(integration=WebSocketLambdaIntegration(\"ConnectIntegration\", connect_handler)),\n    disconnect_route_options=apigwv2.WebSocketRouteOptions(integration=WebSocketLambdaIntegration(\"DisconnectIntegration\", disconnect_handler)),\n    default_route_options=apigwv2.WebSocketRouteOptions(integration=WebSocketLambdaIntegration(\"DefaultIntegration\", default_handler))\n)\n\napigwv2.WebSocketStage(self, \"mystage\",\n    web_socket_api=web_socket_api,\n    stage_name=\"dev\",\n    auto_deploy=True\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction connectHandler;\nFunction disconnectHandler;\nFunction defaultHandler;\n\n\nvar webSocketApi = new WebSocketApi(this, \"mywsapi\", new WebSocketApiProps {\n    ConnectRouteOptions = new WebSocketRouteOptions { Integration = new WebSocketLambdaIntegration(\"ConnectIntegration\", connectHandler) },\n    DisconnectRouteOptions = new WebSocketRouteOptions { Integration = new WebSocketLambdaIntegration(\"DisconnectIntegration\", disconnectHandler) },\n    DefaultRouteOptions = new WebSocketRouteOptions { Integration = new WebSocketLambdaIntegration(\"DefaultIntegration\", defaultHandler) }\n});\n\nnew WebSocketStage(this, \"mystage\", new WebSocketStageProps {\n    WebSocketApi = webSocketApi,\n    StageName = \"dev\",\n    AutoDeploy = true\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.WebSocketLambdaIntegration;\n\nFunction connectHandler;\nFunction disconnectHandler;\nFunction defaultHandler;\n\n\nWebSocketApi webSocketApi = WebSocketApi.Builder.create(this, \"mywsapi\")\n        .connectRouteOptions(WebSocketRouteOptions.builder().integration(new WebSocketLambdaIntegration(\"ConnectIntegration\", connectHandler)).build())\n        .disconnectRouteOptions(WebSocketRouteOptions.builder().integration(new WebSocketLambdaIntegration(\"DisconnectIntegration\", disconnectHandler)).build())\n        .defaultRouteOptions(WebSocketRouteOptions.builder().integration(new WebSocketLambdaIntegration(\"DefaultIntegration\", defaultHandler)).build())\n        .build();\n\nWebSocketStage.Builder.create(this, \"mystage\")\n        .webSocketApi(webSocketApi)\n        .stageName(\"dev\")\n        .autoDeploy(true)\n        .build();","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar connectHandler function\nvar disconnectHandler function\nvar defaultHandler function\n\n\nwebSocketApi := apigwv2.NewWebSocketApi(this, jsii.String(\"mywsapi\"), &WebSocketApiProps{\n\tConnectRouteOptions: &WebSocketRouteOptions{\n\t\tIntegration: awscdkawsapigatewayv2integrations.NewWebSocketLambdaIntegration(jsii.String(\"ConnectIntegration\"), connectHandler),\n\t},\n\tDisconnectRouteOptions: &WebSocketRouteOptions{\n\t\tIntegration: *awscdkawsapigatewayv2integrations.NewWebSocketLambdaIntegration(jsii.String(\"DisconnectIntegration\"), disconnectHandler),\n\t},\n\tDefaultRouteOptions: &WebSocketRouteOptions{\n\t\tIntegration: *awscdkawsapigatewayv2integrations.NewWebSocketLambdaIntegration(jsii.String(\"DefaultIntegration\"), defaultHandler),\n\t},\n})\n\napigwv2.NewWebSocketStage(this, jsii.String(\"mystage\"), &WebSocketStageProps{\n\tWebSocketApi: WebSocketApi,\n\tStageName: jsii.String(\"dev\"),\n\tAutoDeploy: jsii.Boolean(true),\n})","version":"1"},"$":{"source":"import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const connectHandler: lambda.Function;\ndeclare const disconnectHandler: lambda.Function;\ndeclare const defaultHandler: lambda.Function;\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi', {\n  connectRouteOptions: { integration: new WebSocketLambdaIntegration('ConnectIntegration', connectHandler) },\n  disconnectRouteOptions: { integration: new WebSocketLambdaIntegration('DisconnectIntegration',disconnectHandler) },\n  defaultRouteOptions: { integration: new WebSocketLambdaIntegration('DefaultIntegration', defaultHandler) },\n});\n\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":375}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.WebSocketLambdaIntegration","@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApiProps","@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration","@aws-cdk/aws-apigatewayv2.WebSocketRouteOptions","@aws-cdk/aws-apigatewayv2.WebSocketStage","@aws-cdk/aws-apigatewayv2.WebSocketStageProps","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const connectHandler: lambda.Function;\ndeclare const disconnectHandler: lambda.Function;\ndeclare const defaultHandler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi', {\n  connectRouteOptions: { integration: new WebSocketLambdaIntegration('ConnectIntegration', connectHandler) },\n  disconnectRouteOptions: { integration: new WebSocketLambdaIntegration('DisconnectIntegration',disconnectHandler) },\n  defaultRouteOptions: { integration: new WebSocketLambdaIntegration('DefaultIntegration', defaultHandler) },\n});\n\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":30,"104":2,"106":1,"130":3,"153":3,"169":3,"193":5,"194":2,"197":5,"225":4,"226":1,"242":4,"243":4,"254":1,"255":1,"257":1,"258":1,"281":8,"282":1,"290":1},"fqnsFingerprint":"d4ecea5569f46096ffa87780459d6900f9df61e1d18fd0f40406afba9c90d85e"},"c31f0b60e30084ea44d022f31ddf76f2dacab9b187e83ed0a39ae4aafc27ebf0":{"translations":{"python":{"source":"# web_socket_stage: apigwv2.WebSocketStage\n\n\nweb_socket_uRL = web_socket_stage.url\n# wss://${this.api.apiId}.execute-api.${s.region}.${s.urlSuffix}/${urlPath}\ncallback_uRL = web_socket_stage.callback_url","version":"2"},"csharp":{"source":"WebSocketStage webSocketStage;\n\n\nvar webSocketURL = webSocketStage.Url;\n// wss://${this.api.apiId}.execute-api.${s.region}.${s.urlSuffix}/${urlPath}\nvar callbackURL = webSocketStage.CallbackUrl;","version":"1"},"java":{"source":"WebSocketStage webSocketStage;\n\n\nString webSocketURL = webSocketStage.getUrl();\n// wss://${this.api.apiId}.execute-api.${s.region}.${s.urlSuffix}/${urlPath}\nString callbackURL = webSocketStage.getCallbackUrl();","version":"1"},"go":{"source":"var webSocketStage webSocketStage\n\n\nwebSocketURL := webSocketStage.url\n// wss://${this.api.apiId}.execute-api.${s.region}.${s.urlSuffix}/${urlPath}\ncallbackURL := webSocketStage.callbackUrl","version":"1"},"$":{"source":"declare const webSocketStage: apigwv2.WebSocketStage;\n\nconst webSocketURL = webSocketStage.url;\n// wss://${this.api.apiId}.execute-api.${s.region}.${s.urlSuffix}/${urlPath}\nconst callbackURL = webSocketStage.callbackUrl;\n// https://${this.api.apiId}.execute-api.${s.region}.${s.urlSuffix}/${urlPath}","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":397}},"didCompile":true,"fqnsReferenced":[],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const webSocketStage: apigwv2.WebSocketStage;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst webSocketURL = webSocketStage.url;\n// wss://${this.api.apiId}.execute-api.${s.region}.${s.urlSuffix}/${urlPath}\nconst callbackURL = webSocketStage.callbackUrl;\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"75":9,"130":1,"153":1,"169":1,"194":2,"225":3,"242":3,"243":3,"290":1},"fqnsFingerprint":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"},"325c63f2a25eb71d9812a4e6f40fa76a5d3701fcef9897da1366ea3f3ac4fefd":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import WebSocketLambdaIntegration\n\n# message_handler: lambda.Function\n\nweb_socket_api = apigwv2.WebSocketApi(self, \"mywsapi\")\nweb_socket_api.add_route(\"sendmessage\",\n    integration=WebSocketLambdaIntegration(\"SendMessageIntegration\", message_handler)\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction messageHandler;\n\nvar webSocketApi = new WebSocketApi(this, \"mywsapi\");\nwebSocketApi.AddRoute(\"sendmessage\", new WebSocketRouteOptions {\n    Integration = new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler)\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.WebSocketLambdaIntegration;\n\nFunction messageHandler;\n\nWebSocketApi webSocketApi = new WebSocketApi(this, \"mywsapi\");\nwebSocketApi.addRoute(\"sendmessage\", WebSocketRouteOptions.builder()\n        .integration(new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler))\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar messageHandler function\n\nwebSocketApi := apigwv2.NewWebSocketApi(this, jsii.String(\"mywsapi\"))\nwebSocketApi.AddRoute(jsii.String(\"sendmessage\"), &WebSocketRouteOptions{\n\tIntegration: awscdkawsapigatewayv2integrations.NewWebSocketLambdaIntegration(jsii.String(\"SendMessageIntegration\"), messageHandler),\n})","version":"1"},"$":{"source":"import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const messageHandler: lambda.Function;\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":408}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.WebSocketLambdaIntegration","@aws-cdk/aws-apigatewayv2.WebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi#addRoute","@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration","@aws-cdk/aws-apigatewayv2.WebSocketRouteOptions","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const messageHandler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":12,"104":1,"130":1,"153":1,"169":1,"193":1,"194":2,"196":1,"197":2,"225":2,"226":1,"242":2,"243":2,"254":1,"255":1,"257":1,"258":1,"281":1,"290":1},"fqnsFingerprint":"aacf6de0c8c54a091f8d30c2df50b625f5d9d78934801a96695d8ecbed51a92d"},"d231a8407bf02d060233b70f84f2500c030952b1d78b633f2ba22cfa659a9953":{"translations":{"python":{"source":"web_socket_api = apigwv2.WebSocketApi.from_web_socket_api_attributes(self, \"mywsapi\", web_socket_id=\"api-1234\")","version":"2"},"csharp":{"source":"var webSocketApi = WebSocketApi.FromWebSocketApiAttributes(this, \"mywsapi\", new WebSocketApiAttributes { WebSocketId = \"api-1234\" });","version":"1"},"java":{"source":"IWebSocketApi webSocketApi = WebSocketApi.fromWebSocketApiAttributes(this, \"mywsapi\", WebSocketApiAttributes.builder().webSocketId(\"api-1234\").build());","version":"1"},"go":{"source":"webSocketApi := apigwv2.WebSocketApi_FromWebSocketApiAttributes(this, jsii.String(\"mywsapi\"), &WebSocketApiAttributes{\n\tWebSocketId: jsii.String(\"api-1234\"),\n})","version":"1"},"$":{"source":"const webSocketApi = apigwv2.WebSocketApi.fromWebSocketApiAttributes(this, 'mywsapi', { webSocketId: 'api-1234' });","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":420}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi#fromWebSocketApiAttributes","@aws-cdk/aws-apigatewayv2.WebSocketApiAttributes","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst webSocketApi = apigwv2.WebSocketApi.fromWebSocketApiAttributes(this, 'mywsapi', { webSocketId: 'api-1234' });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":5,"104":1,"193":1,"194":2,"196":1,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"31354f6edac0d17b921bcad196835d21004e89eb76008f58e4428fb11e1f1033"},"5ae38493a9426dc5ffad3bbcb39ca34dce40dd47913cc2460d85f5c996281283":{"translations":{"python":{"source":"# fn: lambda.Function\n\n\nweb_socket_api = apigwv2.WebSocketApi(self, \"mywsapi\")\nstage = apigwv2.WebSocketStage(self, \"mystage\",\n    web_socket_api=web_socket_api,\n    stage_name=\"dev\"\n)\n# per stage permission\nstage.grant_management_api_access(fn)\n# for all the stages permission\nweb_socket_api.grant_manage_connections(fn)","version":"2"},"csharp":{"source":"Function fn;\n\n\nvar webSocketApi = new WebSocketApi(this, \"mywsapi\");\nvar stage = new WebSocketStage(this, \"mystage\", new WebSocketStageProps {\n    WebSocketApi = webSocketApi,\n    StageName = \"dev\"\n});\n// per stage permission\nstage.GrantManagementApiAccess(fn);\n// for all the stages permission\nwebSocketApi.GrantManageConnections(fn);","version":"1"},"java":{"source":"Function fn;\n\n\nWebSocketApi webSocketApi = new WebSocketApi(this, \"mywsapi\");\nWebSocketStage stage = WebSocketStage.Builder.create(this, \"mystage\")\n        .webSocketApi(webSocketApi)\n        .stageName(\"dev\")\n        .build();\n// per stage permission\nstage.grantManagementApiAccess(fn);\n// for all the stages permission\nwebSocketApi.grantManageConnections(fn);","version":"1"},"go":{"source":"var fn function\n\n\nwebSocketApi := apigwv2.NewWebSocketApi(this, jsii.String(\"mywsapi\"))\nstage := apigwv2.NewWebSocketStage(this, jsii.String(\"mystage\"), &WebSocketStageProps{\n\tWebSocketApi: WebSocketApi,\n\tStageName: jsii.String(\"dev\"),\n})\n// per stage permission\nstage.GrantManagementApiAccess(fn)\n// for all the stages permission\nwebSocketApi.GrantManageConnections(fn)","version":"1"},"$":{"source":"declare const fn: lambda.Function;\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nconst stage = new apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n});\n// per stage permission\nstage.grantManagementApiAccess(fn);\n// for all the stages permission\nwebSocketApi.grantManageConnections(fn);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":429}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi#grantManageConnections","@aws-cdk/aws-apigatewayv2.WebSocketStage","@aws-cdk/aws-apigatewayv2.WebSocketStage#grantManagementApiAccess","@aws-cdk/aws-apigatewayv2.WebSocketStageProps","@aws-cdk/aws-iam.IGrantable","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const fn: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nconst stage = new apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n});\n// per stage permission\nstage.grantManagementApiAccess(fn);\n// for all the stages permission\nwebSocketApi.grantManageConnections(fn);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":17,"104":2,"130":1,"153":1,"169":1,"193":1,"194":4,"196":2,"197":2,"225":3,"226":2,"242":3,"243":3,"281":1,"282":1,"290":1},"fqnsFingerprint":"c01a78e0ae659ebbb585a80ee1639d560ddf05c1558e5d6d271554a6628f8a8a"},"47bdc6821d74b3a6ad9d928cce7a2b88a45746709ad9670eed3ccf87083f101c":{"translations":{"python":{"source":"web_socket_api = apigwv2.WebSocketApi(self, \"mywsapi\",\n    api_key_selection_expression=apigwv2.WebSocketApiKeySelectionExpression.HEADER_X_API_KEY\n)","version":"2"},"csharp":{"source":"var webSocketApi = new WebSocketApi(this, \"mywsapi\", new WebSocketApiProps {\n    ApiKeySelectionExpression = WebSocketApiKeySelectionExpression.HEADER_X_API_KEY\n});","version":"1"},"java":{"source":"WebSocketApi webSocketApi = WebSocketApi.Builder.create(this, \"mywsapi\")\n        .apiKeySelectionExpression(WebSocketApiKeySelectionExpression.HEADER_X_API_KEY)\n        .build();","version":"1"},"go":{"source":"webSocketApi := apigwv2.NewWebSocketApi(this, jsii.String(\"mywsapi\"), &WebSocketApiProps{\n\tApiKeySelectionExpression: apigwv2.WebSocketApiKeySelectionExpression_HEADER_X_API_KEY(),\n})","version":"1"},"$":{"source":"const webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi',{\n  apiKeySelectionExpression: apigwv2.WebSocketApiKeySelectionExpression.HEADER_X_API_KEY,\n});","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-apigatewayv2"},"field":{"field":"markdown","line":455}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.WebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApiKeySelectionExpression","@aws-cdk/aws-apigatewayv2.WebSocketApiKeySelectionExpression#HEADER_X_API_KEY","@aws-cdk/aws-apigatewayv2.WebSocketApiProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi',{\n  apiKeySelectionExpression: apigwv2.WebSocketApiKeySelectionExpression.HEADER_X_API_KEY,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":7,"104":1,"193":1,"194":3,"197":1,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"4490854a102ce7c23448f2f0fd2b7434d776fb78e0fb9217960b32236bc57d35"},"c571519eef2c510ab4b2638862f83f36fe2470751856586f0d3eab080da99952":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_authorizers import HttpLambdaAuthorizer, HttpLambdaResponseType\nfrom aws_cdk.aws_apigatewayv2_integrations import HttpUrlIntegration\n\n# This function handles your auth logic\n# auth_handler: lambda.Function\n\n\nauthorizer = HttpLambdaAuthorizer(\"BooksAuthorizer\", auth_handler,\n    response_types=[HttpLambdaResponseType.SIMPLE]\n)\n\napi = apigwv2.HttpApi(self, \"HttpApi\")\n\napi.add_routes(\n    integration=HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\"),\n    path=\"/books\",\n    authorizer=authorizer\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Authorizers;\nusing Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\n// This function handles your auth logic\nFunction authHandler;\n\n\nvar authorizer = new HttpLambdaAuthorizer(\"BooksAuthorizer\", authHandler, new HttpLambdaAuthorizerProps {\n    ResponseTypes = new [] { HttpLambdaResponseType.SIMPLE }\n});\n\nvar api = new HttpApi(this, \"HttpApi\");\n\napi.AddRoutes(new AddRoutesOptions {\n    Integration = new HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\"),\n    Path = \"/books\",\n    Authorizer = authorizer\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.authorizers.HttpLambdaAuthorizer;\nimport software.amazon.awscdk.services.apigatewayv2.authorizers.HttpLambdaResponseType;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.HttpUrlIntegration;\n\n// This function handles your auth logic\nFunction authHandler;\n\n\nHttpLambdaAuthorizer authorizer = HttpLambdaAuthorizer.Builder.create(\"BooksAuthorizer\", authHandler)\n        .responseTypes(List.of(HttpLambdaResponseType.SIMPLE))\n        .build();\n\nHttpApi api = new HttpApi(this, \"HttpApi\");\n\napi.addRoutes(AddRoutesOptions.builder()\n        .integration(new HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\"))\n        .path(\"/books\")\n        .authorizer(authorizer)\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2authorizers\"\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\n// This function handles your auth logic\nvar authHandler function\n\n\nauthorizer := awscdkawsapigatewayv2authorizers.NewHttpLambdaAuthorizer(jsii.String(\"BooksAuthorizer\"), authHandler, &HttpLambdaAuthorizerProps{\n\tResponseTypes: []httpLambdaResponseType{\n\t\t*awscdkawsapigatewayv2authorizers.HttpLambdaResponseType_SIMPLE,\n\t},\n})\n\napi := apigwv2.NewHttpApi(this, jsii.String(\"HttpApi\"))\n\napi.AddRoutes(&AddRoutesOptions{\n\tIntegration: awscdkawsapigatewayv2integrations.NewHttpUrlIntegration(jsii.String(\"BooksIntegration\"), jsii.String(\"https://get-books-proxy.myproxy.internal\")),\n\tPath: jsii.String(\"/books\"),\n\tAuthorizer: Authorizer,\n})","version":"1"},"$":{"source":"import { HttpLambdaAuthorizer, HttpLambdaResponseType } from '@aws-cdk/aws-apigatewayv2-authorizers';\nimport { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\n// This function handles your auth logic\ndeclare const authHandler: lambda.Function;\n\nconst authorizer = new HttpLambdaAuthorizer('BooksAuthorizer', authHandler, {\n  responseTypes: [HttpLambdaResponseType.SIMPLE], // Define if returns simple and/or iam response\n});\n\nconst api = new apigwv2.HttpApi(this, 'HttpApi');\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books',\n  authorizer,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.AddRoutesOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-authorizers.HttpLambdaAuthorizer","@aws-cdk/aws-apigatewayv2-authorizers.HttpLambdaAuthorizerProps","@aws-cdk/aws-apigatewayv2-authorizers.HttpLambdaResponseType#SIMPLE","@aws-cdk/aws-apigatewayv2-integrations.HttpUrlIntegration","@aws-cdk/aws-apigatewayv2.AddRoutesOptions","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApi#addRoutes","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-apigatewayv2.IHttpRouteAuthorizer","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpLambdaAuthorizer, HttpLambdaResponseType } from '@aws-cdk/aws-apigatewayv2-authorizers';\nimport { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\n// This function handles your auth logic\ndeclare const authHandler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst authorizer = new HttpLambdaAuthorizer('BooksAuthorizer', authHandler, {\n  responseTypes: [HttpLambdaResponseType.SIMPLE], // Define if returns simple and/or iam response\n});\n\nconst api = new apigwv2.HttpApi(this, 'HttpApi');\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books',\n  authorizer,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":21,"104":1,"130":1,"153":1,"169":1,"192":1,"193":2,"194":3,"196":1,"197":3,"225":3,"226":1,"242":3,"243":3,"254":2,"255":2,"257":2,"258":3,"281":3,"282":1,"290":1},"fqnsFingerprint":"06dd1470d4615a850cca8c7b03774320af3f32e5f223bd4804e59583c453b128"},"878e24a03c664380adf751afb939675c25de0145239923b2ab72ef4c91b7f8c3":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# api: apigatewayv2.IApi\n# domain_name: apigatewayv2.DomainName\n# stage: apigatewayv2.IStage\n\napi_mapping = apigatewayv2.ApiMapping(self, \"MyApiMapping\",\n    api=api,\n    domain_name=domain_name,\n\n    # the properties below are optional\n    api_mapping_key=\"apiMappingKey\",\n    stage=stage\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nIApi api;\nDomainName domainName;\nIStage stage;\n\nvar apiMapping = new ApiMapping(this, \"MyApiMapping\", new ApiMappingProps {\n    Api = api,\n    DomainName = domainName,\n\n    // the properties below are optional\n    ApiMappingKey = \"apiMappingKey\",\n    Stage = stage\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nIApi api;\nDomainName domainName;\nIStage stage;\n\nApiMapping apiMapping = ApiMapping.Builder.create(this, \"MyApiMapping\")\n        .api(api)\n        .domainName(domainName)\n\n        // the properties below are optional\n        .apiMappingKey(\"apiMappingKey\")\n        .stage(stage)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar api iApi\nvar domainName domainName\nvar stage iStage\n\napiMapping := apigatewayv2.NewApiMapping(this, jsii.String(\"MyApiMapping\"), &ApiMappingProps{\n\tApi: api,\n\tDomainName: domainName,\n\n\t// the properties below are optional\n\tApiMappingKey: jsii.String(\"apiMappingKey\"),\n\tStage: stage,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const api: apigatewayv2.IApi;\ndeclare const domainName: apigatewayv2.DomainName;\ndeclare const stage: apigatewayv2.IStage;\nconst apiMapping = new apigatewayv2.ApiMapping(this, 'MyApiMapping', {\n  api: api,\n  domainName: domainName,\n\n  // the properties below are optional\n  apiMappingKey: 'apiMappingKey',\n  stage: stage,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.ApiMapping"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.ApiMapping","@aws-cdk/aws-apigatewayv2.ApiMappingProps","@aws-cdk/aws-apigatewayv2.IApi","@aws-cdk/aws-apigatewayv2.IDomainName","@aws-cdk/aws-apigatewayv2.IStage","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const api: apigatewayv2.IApi;\ndeclare const domainName: apigatewayv2.DomainName;\ndeclare const stage: apigatewayv2.IStage;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst apiMapping = new apigatewayv2.ApiMapping(this, 'MyApiMapping', {\n  api: api,\n  domainName: domainName,\n\n  // the properties below are optional\n  apiMappingKey: 'apiMappingKey',\n  stage: stage,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":20,"104":1,"130":3,"153":3,"169":3,"193":1,"194":1,"197":1,"225":4,"242":4,"243":4,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"ecce8ec742a96390504a58da21b109317fb43abfe60207b8d19699bc895f652b"},"9065773b1efab57520b9ccaa60b615e2a443ed65f6ce92f3f42f7b9c5f7cfdfa":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\napi_mapping_attributes = apigatewayv2.ApiMappingAttributes(\n    api_mapping_id=\"apiMappingId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar apiMappingAttributes = new ApiMappingAttributes {\n    ApiMappingId = \"apiMappingId\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nApiMappingAttributes apiMappingAttributes = ApiMappingAttributes.builder()\n        .apiMappingId(\"apiMappingId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\napiMappingAttributes := &ApiMappingAttributes{\n\tApiMappingId: jsii.String(\"apiMappingId\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst apiMappingAttributes: apigatewayv2.ApiMappingAttributes = {\n  apiMappingId: 'apiMappingId',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.ApiMappingAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.ApiMappingAttributes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst apiMappingAttributes: apigatewayv2.ApiMappingAttributes = {\n  apiMappingId: 'apiMappingId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":5,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"be821785baef72458080eb699e86c7ff0384705987f07186d8e5acccd761880d"},"91019b7c38adc06d1549e495ff4ad8873a7f0a531c32757ae71313746409ed3f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# api: apigatewayv2.IApi\n# domain_name: apigatewayv2.DomainName\n# stage: apigatewayv2.IStage\n\napi_mapping_props = apigatewayv2.ApiMappingProps(\n    api=api,\n    domain_name=domain_name,\n\n    # the properties below are optional\n    api_mapping_key=\"apiMappingKey\",\n    stage=stage\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nIApi api;\nDomainName domainName;\nIStage stage;\n\nvar apiMappingProps = new ApiMappingProps {\n    Api = api,\n    DomainName = domainName,\n\n    // the properties below are optional\n    ApiMappingKey = \"apiMappingKey\",\n    Stage = stage\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nIApi api;\nDomainName domainName;\nIStage stage;\n\nApiMappingProps apiMappingProps = ApiMappingProps.builder()\n        .api(api)\n        .domainName(domainName)\n\n        // the properties below are optional\n        .apiMappingKey(\"apiMappingKey\")\n        .stage(stage)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar api iApi\nvar domainName domainName\nvar stage iStage\n\napiMappingProps := &ApiMappingProps{\n\tApi: api,\n\tDomainName: domainName,\n\n\t// the properties below are optional\n\tApiMappingKey: jsii.String(\"apiMappingKey\"),\n\tStage: stage,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const api: apigatewayv2.IApi;\ndeclare const domainName: apigatewayv2.DomainName;\ndeclare const stage: apigatewayv2.IStage;\nconst apiMappingProps: apigatewayv2.ApiMappingProps = {\n  api: api,\n  domainName: domainName,\n\n  // the properties below are optional\n  apiMappingKey: 'apiMappingKey',\n  stage: stage,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.ApiMappingProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.ApiMappingProps","@aws-cdk/aws-apigatewayv2.IApi","@aws-cdk/aws-apigatewayv2.IDomainName","@aws-cdk/aws-apigatewayv2.IStage"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const api: apigatewayv2.IApi;\ndeclare const domainName: apigatewayv2.DomainName;\ndeclare const stage: apigatewayv2.IStage;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst apiMappingProps: apigatewayv2.ApiMappingProps = {\n  api: api,\n  domainName: domainName,\n\n  // the properties below are optional\n  apiMappingKey: 'apiMappingKey',\n  stage: stage,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":20,"130":3,"153":4,"169":4,"193":1,"225":4,"242":4,"243":4,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"03923ef676bdb168fa21ec5dce3eceae67830fa8af6380ebbc3d840ca84afa03"},"9250c8e8d68c0ad5e59a519d8049ab35f99a68d6a8e69cd4f477e4b983f341ef":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# http_route_integration: apigatewayv2.HttpRouteIntegration\n\nbatch_http_route_options = apigatewayv2.BatchHttpRouteOptions(\n    integration=http_route_integration\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nHttpRouteIntegration httpRouteIntegration;\n\nvar batchHttpRouteOptions = new BatchHttpRouteOptions {\n    Integration = httpRouteIntegration\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nHttpRouteIntegration httpRouteIntegration;\n\nBatchHttpRouteOptions batchHttpRouteOptions = BatchHttpRouteOptions.builder()\n        .integration(httpRouteIntegration)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar httpRouteIntegration httpRouteIntegration\n\nbatchHttpRouteOptions := &BatchHttpRouteOptions{\n\tIntegration: httpRouteIntegration,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const httpRouteIntegration: apigatewayv2.HttpRouteIntegration;\nconst batchHttpRouteOptions: apigatewayv2.BatchHttpRouteOptions = {\n  integration: httpRouteIntegration,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.BatchHttpRouteOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.BatchHttpRouteOptions","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const httpRouteIntegration: apigatewayv2.HttpRouteIntegration;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst batchHttpRouteOptions: apigatewayv2.BatchHttpRouteOptions = {\n  integration: httpRouteIntegration,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":9,"130":1,"153":2,"169":2,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"46eb7f282bcf625484a79c0b4a9ff303a25aaf0f0e93acbdb87df261b1b91ca4"},"65f050368a529170ecddeb17d44722eaf8b68ce18288640361a85fad04e4d47c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# body: Any\n\ncfn_api = apigatewayv2.CfnApi(self, \"MyCfnApi\",\n    api_key_selection_expression=\"apiKeySelectionExpression\",\n    base_path=\"basePath\",\n    body=body,\n    body_s3_location=apigatewayv2.CfnApi.BodyS3LocationProperty(\n        bucket=\"bucket\",\n        etag=\"etag\",\n        key=\"key\",\n        version=\"version\"\n    ),\n    cors_configuration=apigatewayv2.CfnApi.CorsProperty(\n        allow_credentials=False,\n        allow_headers=[\"allowHeaders\"],\n        allow_methods=[\"allowMethods\"],\n        allow_origins=[\"allowOrigins\"],\n        expose_headers=[\"exposeHeaders\"],\n        max_age=123\n    ),\n    credentials_arn=\"credentialsArn\",\n    description=\"description\",\n    disable_execute_api_endpoint=False,\n    disable_schema_validation=False,\n    fail_on_warnings=False,\n    name=\"name\",\n    protocol_type=\"protocolType\",\n    route_key=\"routeKey\",\n    route_selection_expression=\"routeSelectionExpression\",\n    tags={\n        \"tags_key\": \"tags\"\n    },\n    target=\"target\",\n    version=\"version\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar body;\n\nvar cfnApi = new CfnApi(this, \"MyCfnApi\", new CfnApiProps {\n    ApiKeySelectionExpression = \"apiKeySelectionExpression\",\n    BasePath = \"basePath\",\n    Body = body,\n    BodyS3Location = new BodyS3LocationProperty {\n        Bucket = \"bucket\",\n        Etag = \"etag\",\n        Key = \"key\",\n        Version = \"version\"\n    },\n    CorsConfiguration = new CorsProperty {\n        AllowCredentials = false,\n        AllowHeaders = new [] { \"allowHeaders\" },\n        AllowMethods = new [] { \"allowMethods\" },\n        AllowOrigins = new [] { \"allowOrigins\" },\n        ExposeHeaders = new [] { \"exposeHeaders\" },\n        MaxAge = 123\n    },\n    CredentialsArn = \"credentialsArn\",\n    Description = \"description\",\n    DisableExecuteApiEndpoint = false,\n    DisableSchemaValidation = false,\n    FailOnWarnings = false,\n    Name = \"name\",\n    ProtocolType = \"protocolType\",\n    RouteKey = \"routeKey\",\n    RouteSelectionExpression = \"routeSelectionExpression\",\n    Tags = new Dictionary<string, string> {\n        { \"tagsKey\", \"tags\" }\n    },\n    Target = \"target\",\n    Version = \"version\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject body;\n\nCfnApi cfnApi = CfnApi.Builder.create(this, \"MyCfnApi\")\n        .apiKeySelectionExpression(\"apiKeySelectionExpression\")\n        .basePath(\"basePath\")\n        .body(body)\n        .bodyS3Location(BodyS3LocationProperty.builder()\n                .bucket(\"bucket\")\n                .etag(\"etag\")\n                .key(\"key\")\n                .version(\"version\")\n                .build())\n        .corsConfiguration(CorsProperty.builder()\n                .allowCredentials(false)\n                .allowHeaders(List.of(\"allowHeaders\"))\n                .allowMethods(List.of(\"allowMethods\"))\n                .allowOrigins(List.of(\"allowOrigins\"))\n                .exposeHeaders(List.of(\"exposeHeaders\"))\n                .maxAge(123)\n                .build())\n        .credentialsArn(\"credentialsArn\")\n        .description(\"description\")\n        .disableExecuteApiEndpoint(false)\n        .disableSchemaValidation(false)\n        .failOnWarnings(false)\n        .name(\"name\")\n        .protocolType(\"protocolType\")\n        .routeKey(\"routeKey\")\n        .routeSelectionExpression(\"routeSelectionExpression\")\n        .tags(Map.of(\n                \"tagsKey\", \"tags\"))\n        .target(\"target\")\n        .version(\"version\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar body interface{}\n\ncfnApi := apigatewayv2.NewCfnApi(this, jsii.String(\"MyCfnApi\"), &CfnApiProps{\n\tApiKeySelectionExpression: jsii.String(\"apiKeySelectionExpression\"),\n\tBasePath: jsii.String(\"basePath\"),\n\tBody: body,\n\tBodyS3Location: &BodyS3LocationProperty{\n\t\tBucket: jsii.String(\"bucket\"),\n\t\tEtag: jsii.String(\"etag\"),\n\t\tKey: jsii.String(\"key\"),\n\t\tVersion: jsii.String(\"version\"),\n\t},\n\tCorsConfiguration: &CorsProperty{\n\t\tAllowCredentials: jsii.Boolean(false),\n\t\tAllowHeaders: []*string{\n\t\t\tjsii.String(\"allowHeaders\"),\n\t\t},\n\t\tAllowMethods: []*string{\n\t\t\tjsii.String(\"allowMethods\"),\n\t\t},\n\t\tAllowOrigins: []*string{\n\t\t\tjsii.String(\"allowOrigins\"),\n\t\t},\n\t\tExposeHeaders: []*string{\n\t\t\tjsii.String(\"exposeHeaders\"),\n\t\t},\n\t\tMaxAge: jsii.Number(123),\n\t},\n\tCredentialsArn: jsii.String(\"credentialsArn\"),\n\tDescription: jsii.String(\"description\"),\n\tDisableExecuteApiEndpoint: jsii.Boolean(false),\n\tDisableSchemaValidation: jsii.Boolean(false),\n\tFailOnWarnings: jsii.Boolean(false),\n\tName: jsii.String(\"name\"),\n\tProtocolType: jsii.String(\"protocolType\"),\n\tRouteKey: jsii.String(\"routeKey\"),\n\tRouteSelectionExpression: jsii.String(\"routeSelectionExpression\"),\n\tTags: map[string]*string{\n\t\t\"tagsKey\": jsii.String(\"tags\"),\n\t},\n\tTarget: jsii.String(\"target\"),\n\tVersion: jsii.String(\"version\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const body: any;\nconst cfnApi = new apigatewayv2.CfnApi(this, 'MyCfnApi', /* all optional props */ {\n  apiKeySelectionExpression: 'apiKeySelectionExpression',\n  basePath: 'basePath',\n  body: body,\n  bodyS3Location: {\n    bucket: 'bucket',\n    etag: 'etag',\n    key: 'key',\n    version: 'version',\n  },\n  corsConfiguration: {\n    allowCredentials: false,\n    allowHeaders: ['allowHeaders'],\n    allowMethods: ['allowMethods'],\n    allowOrigins: ['allowOrigins'],\n    exposeHeaders: ['exposeHeaders'],\n    maxAge: 123,\n  },\n  credentialsArn: 'credentialsArn',\n  description: 'description',\n  disableExecuteApiEndpoint: false,\n  disableSchemaValidation: false,\n  failOnWarnings: false,\n  name: 'name',\n  protocolType: 'protocolType',\n  routeKey: 'routeKey',\n  routeSelectionExpression: 'routeSelectionExpression',\n  tags: {\n    tagsKey: 'tags',\n  },\n  target: 'target',\n  version: 'version',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnApi"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnApi","@aws-cdk/aws-apigatewayv2.CfnApiProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const body: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApi = new apigatewayv2.CfnApi(this, 'MyCfnApi', /* all optional props */ {\n  apiKeySelectionExpression: 'apiKeySelectionExpression',\n  basePath: 'basePath',\n  body: body,\n  bodyS3Location: {\n    bucket: 'bucket',\n    etag: 'etag',\n    key: 'key',\n    version: 'version',\n  },\n  corsConfiguration: {\n    allowCredentials: false,\n    allowHeaders: ['allowHeaders'],\n    allowMethods: ['allowMethods'],\n    allowOrigins: ['allowOrigins'],\n    exposeHeaders: ['exposeHeaders'],\n    maxAge: 123,\n  },\n  credentialsArn: 'credentialsArn',\n  description: 'description',\n  disableExecuteApiEndpoint: false,\n  disableSchemaValidation: false,\n  failOnWarnings: false,\n  name: 'name',\n  protocolType: 'protocolType',\n  routeKey: 'routeKey',\n  routeSelectionExpression: 'routeSelectionExpression',\n  tags: {\n    tagsKey: 'tags',\n  },\n  target: 'target',\n  version: 'version',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":21,"75":34,"91":4,"104":1,"125":1,"130":1,"192":4,"193":4,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":28,"290":1},"fqnsFingerprint":"0fefb83bb8b419a0641da8c69fbb253571590b600253fe6481850467ba5165df"},"580001fb53089e3a0bff618cab958686f6549be5392c9abdeea20cb90d0184fb":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nbody_s3_location_property = apigatewayv2.CfnApi.BodyS3LocationProperty(\n    bucket=\"bucket\",\n    etag=\"etag\",\n    key=\"key\",\n    version=\"version\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar bodyS3LocationProperty = new BodyS3LocationProperty {\n    Bucket = \"bucket\",\n    Etag = \"etag\",\n    Key = \"key\",\n    Version = \"version\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nBodyS3LocationProperty bodyS3LocationProperty = BodyS3LocationProperty.builder()\n        .bucket(\"bucket\")\n        .etag(\"etag\")\n        .key(\"key\")\n        .version(\"version\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nbodyS3LocationProperty := &BodyS3LocationProperty{\n\tBucket: jsii.String(\"bucket\"),\n\tEtag: jsii.String(\"etag\"),\n\tKey: jsii.String(\"key\"),\n\tVersion: jsii.String(\"version\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst bodyS3LocationProperty: apigatewayv2.CfnApi.BodyS3LocationProperty = {\n  bucket: 'bucket',\n  etag: 'etag',\n  key: 'key',\n  version: 'version',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnApi.BodyS3LocationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnApi.BodyS3LocationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst bodyS3LocationProperty: apigatewayv2.CfnApi.BodyS3LocationProperty = {\n  bucket: 'bucket',\n  etag: 'etag',\n  key: 'key',\n  version: 'version',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":9,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"9abb14c95e6457ea578cda33d2a7f5842d32358c40099a3681b807baa9b2399c"},"5c95d4e096d18d0c4c4c4aa2052b8a401c061bf786ee6f8b7e5bd5e153c36572":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\ncors_property = apigatewayv2.CfnApi.CorsProperty(\n    allow_credentials=False,\n    allow_headers=[\"allowHeaders\"],\n    allow_methods=[\"allowMethods\"],\n    allow_origins=[\"allowOrigins\"],\n    expose_headers=[\"exposeHeaders\"],\n    max_age=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar corsProperty = new CorsProperty {\n    AllowCredentials = false,\n    AllowHeaders = new [] { \"allowHeaders\" },\n    AllowMethods = new [] { \"allowMethods\" },\n    AllowOrigins = new [] { \"allowOrigins\" },\n    ExposeHeaders = new [] { \"exposeHeaders\" },\n    MaxAge = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nCorsProperty corsProperty = CorsProperty.builder()\n        .allowCredentials(false)\n        .allowHeaders(List.of(\"allowHeaders\"))\n        .allowMethods(List.of(\"allowMethods\"))\n        .allowOrigins(List.of(\"allowOrigins\"))\n        .exposeHeaders(List.of(\"exposeHeaders\"))\n        .maxAge(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\ncorsProperty := &CorsProperty{\n\tAllowCredentials: jsii.Boolean(false),\n\tAllowHeaders: []*string{\n\t\tjsii.String(\"allowHeaders\"),\n\t},\n\tAllowMethods: []*string{\n\t\tjsii.String(\"allowMethods\"),\n\t},\n\tAllowOrigins: []*string{\n\t\tjsii.String(\"allowOrigins\"),\n\t},\n\tExposeHeaders: []*string{\n\t\tjsii.String(\"exposeHeaders\"),\n\t},\n\tMaxAge: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst corsProperty: apigatewayv2.CfnApi.CorsProperty = {\n  allowCredentials: false,\n  allowHeaders: ['allowHeaders'],\n  allowMethods: ['allowMethods'],\n  allowOrigins: ['allowOrigins'],\n  exposeHeaders: ['exposeHeaders'],\n  maxAge: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnApi.CorsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnApi.CorsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst corsProperty: apigatewayv2.CfnApi.CorsProperty = {\n  allowCredentials: false,\n  allowHeaders: ['allowHeaders'],\n  allowMethods: ['allowMethods'],\n  allowOrigins: ['allowOrigins'],\n  exposeHeaders: ['exposeHeaders'],\n  maxAge: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":5,"75":11,"91":1,"153":2,"169":1,"192":4,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":6,"290":1},"fqnsFingerprint":"bd998842efce317776508452cc8e97d2ddc53ee60c2ef4eacaf8c896ec33349b"},"ffefd0a44ea74454d9755b9ffc925d37238f005b1db3d23c567d0115c2a4319e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# route_settings: Any\n# stage_variables: Any\n\ncfn_api_gateway_managed_overrides = apigatewayv2.CfnApiGatewayManagedOverrides(self, \"MyCfnApiGatewayManagedOverrides\",\n    api_id=\"apiId\",\n\n    # the properties below are optional\n    integration=apigatewayv2.CfnApiGatewayManagedOverrides.IntegrationOverridesProperty(\n        description=\"description\",\n        integration_method=\"integrationMethod\",\n        payload_format_version=\"payloadFormatVersion\",\n        timeout_in_millis=123\n    ),\n    route=apigatewayv2.CfnApiGatewayManagedOverrides.RouteOverridesProperty(\n        authorization_scopes=[\"authorizationScopes\"],\n        authorization_type=\"authorizationType\",\n        authorizer_id=\"authorizerId\",\n        operation_name=\"operationName\",\n        target=\"target\"\n    ),\n    stage=apigatewayv2.CfnApiGatewayManagedOverrides.StageOverridesProperty(\n        access_log_settings=apigatewayv2.CfnApiGatewayManagedOverrides.AccessLogSettingsProperty(\n            destination_arn=\"destinationArn\",\n            format=\"format\"\n        ),\n        auto_deploy=False,\n        default_route_settings=apigatewayv2.CfnApiGatewayManagedOverrides.RouteSettingsProperty(\n            data_trace_enabled=False,\n            detailed_metrics_enabled=False,\n            logging_level=\"loggingLevel\",\n            throttling_burst_limit=123,\n            throttling_rate_limit=123\n        ),\n        description=\"description\",\n        route_settings=route_settings,\n        stage_variables=stage_variables\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar routeSettings;\nvar stageVariables;\n\nvar cfnApiGatewayManagedOverrides = new CfnApiGatewayManagedOverrides(this, \"MyCfnApiGatewayManagedOverrides\", new CfnApiGatewayManagedOverridesProps {\n    ApiId = \"apiId\",\n\n    // the properties below are optional\n    Integration = new IntegrationOverridesProperty {\n        Description = \"description\",\n        IntegrationMethod = \"integrationMethod\",\n        PayloadFormatVersion = \"payloadFormatVersion\",\n        TimeoutInMillis = 123\n    },\n    Route = new RouteOverridesProperty {\n        AuthorizationScopes = new [] { \"authorizationScopes\" },\n        AuthorizationType = \"authorizationType\",\n        AuthorizerId = \"authorizerId\",\n        OperationName = \"operationName\",\n        Target = \"target\"\n    },\n    Stage = new StageOverridesProperty {\n        AccessLogSettings = new AccessLogSettingsProperty {\n            DestinationArn = \"destinationArn\",\n            Format = \"format\"\n        },\n        AutoDeploy = false,\n        DefaultRouteSettings = new RouteSettingsProperty {\n            DataTraceEnabled = false,\n            DetailedMetricsEnabled = false,\n            LoggingLevel = \"loggingLevel\",\n            ThrottlingBurstLimit = 123,\n            ThrottlingRateLimit = 123\n        },\n        Description = \"description\",\n        RouteSettings = routeSettings,\n        StageVariables = stageVariables\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject routeSettings;\nObject stageVariables;\n\nCfnApiGatewayManagedOverrides cfnApiGatewayManagedOverrides = CfnApiGatewayManagedOverrides.Builder.create(this, \"MyCfnApiGatewayManagedOverrides\")\n        .apiId(\"apiId\")\n\n        // the properties below are optional\n        .integration(IntegrationOverridesProperty.builder()\n                .description(\"description\")\n                .integrationMethod(\"integrationMethod\")\n                .payloadFormatVersion(\"payloadFormatVersion\")\n                .timeoutInMillis(123)\n                .build())\n        .route(RouteOverridesProperty.builder()\n                .authorizationScopes(List.of(\"authorizationScopes\"))\n                .authorizationType(\"authorizationType\")\n                .authorizerId(\"authorizerId\")\n                .operationName(\"operationName\")\n                .target(\"target\")\n                .build())\n        .stage(StageOverridesProperty.builder()\n                .accessLogSettings(AccessLogSettingsProperty.builder()\n                        .destinationArn(\"destinationArn\")\n                        .format(\"format\")\n                        .build())\n                .autoDeploy(false)\n                .defaultRouteSettings(RouteSettingsProperty.builder()\n                        .dataTraceEnabled(false)\n                        .detailedMetricsEnabled(false)\n                        .loggingLevel(\"loggingLevel\")\n                        .throttlingBurstLimit(123)\n                        .throttlingRateLimit(123)\n                        .build())\n                .description(\"description\")\n                .routeSettings(routeSettings)\n                .stageVariables(stageVariables)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar routeSettings interface{}\nvar stageVariables interface{}\n\ncfnApiGatewayManagedOverrides := apigatewayv2.NewCfnApiGatewayManagedOverrides(this, jsii.String(\"MyCfnApiGatewayManagedOverrides\"), &CfnApiGatewayManagedOverridesProps{\n\tApiId: jsii.String(\"apiId\"),\n\n\t// the properties below are optional\n\tIntegration: &IntegrationOverridesProperty{\n\t\tDescription: jsii.String(\"description\"),\n\t\tIntegrationMethod: jsii.String(\"integrationMethod\"),\n\t\tPayloadFormatVersion: jsii.String(\"payloadFormatVersion\"),\n\t\tTimeoutInMillis: jsii.Number(123),\n\t},\n\tRoute: &RouteOverridesProperty{\n\t\tAuthorizationScopes: []*string{\n\t\t\tjsii.String(\"authorizationScopes\"),\n\t\t},\n\t\tAuthorizationType: jsii.String(\"authorizationType\"),\n\t\tAuthorizerId: jsii.String(\"authorizerId\"),\n\t\tOperationName: jsii.String(\"operationName\"),\n\t\tTarget: jsii.String(\"target\"),\n\t},\n\tStage: &StageOverridesProperty{\n\t\tAccessLogSettings: &AccessLogSettingsProperty{\n\t\t\tDestinationArn: jsii.String(\"destinationArn\"),\n\t\t\tFormat: jsii.String(\"format\"),\n\t\t},\n\t\tAutoDeploy: jsii.Boolean(false),\n\t\tDefaultRouteSettings: &RouteSettingsProperty{\n\t\t\tDataTraceEnabled: jsii.Boolean(false),\n\t\t\tDetailedMetricsEnabled: jsii.Boolean(false),\n\t\t\tLoggingLevel: jsii.String(\"loggingLevel\"),\n\t\t\tThrottlingBurstLimit: jsii.Number(123),\n\t\t\tThrottlingRateLimit: jsii.Number(123),\n\t\t},\n\t\tDescription: jsii.String(\"description\"),\n\t\tRouteSettings: routeSettings,\n\t\tStageVariables: stageVariables,\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const routeSettings: any;\ndeclare const stageVariables: any;\nconst cfnApiGatewayManagedOverrides = new apigatewayv2.CfnApiGatewayManagedOverrides(this, 'MyCfnApiGatewayManagedOverrides', {\n  apiId: 'apiId',\n\n  // the properties below are optional\n  integration: {\n    description: 'description',\n    integrationMethod: 'integrationMethod',\n    payloadFormatVersion: 'payloadFormatVersion',\n    timeoutInMillis: 123,\n  },\n  route: {\n    authorizationScopes: ['authorizationScopes'],\n    authorizationType: 'authorizationType',\n    authorizerId: 'authorizerId',\n    operationName: 'operationName',\n    target: 'target',\n  },\n  stage: {\n    accessLogSettings: {\n      destinationArn: 'destinationArn',\n      format: 'format',\n    },\n    autoDeploy: false,\n    defaultRouteSettings: {\n      dataTraceEnabled: false,\n      detailedMetricsEnabled: false,\n      loggingLevel: 'loggingLevel',\n      throttlingBurstLimit: 123,\n      throttlingRateLimit: 123,\n    },\n    description: 'description',\n    routeSettings: routeSettings,\n    stageVariables: stageVariables,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverrides"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverrides","@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverridesProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const routeSettings: any;\ndeclare const stageVariables: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApiGatewayManagedOverrides = new apigatewayv2.CfnApiGatewayManagedOverrides(this, 'MyCfnApiGatewayManagedOverrides', {\n  apiId: 'apiId',\n\n  // the properties below are optional\n  integration: {\n    description: 'description',\n    integrationMethod: 'integrationMethod',\n    payloadFormatVersion: 'payloadFormatVersion',\n    timeoutInMillis: 123,\n  },\n  route: {\n    authorizationScopes: ['authorizationScopes'],\n    authorizationType: 'authorizationType',\n    authorizerId: 'authorizerId',\n    operationName: 'operationName',\n    target: 'target',\n  },\n  stage: {\n    accessLogSettings: {\n      destinationArn: 'destinationArn',\n      format: 'format',\n    },\n    autoDeploy: false,\n    defaultRouteSettings: {\n      dataTraceEnabled: false,\n      detailedMetricsEnabled: false,\n      loggingLevel: 'loggingLevel',\n      throttlingBurstLimit: 123,\n      throttlingRateLimit: 123,\n    },\n    description: 'description',\n    routeSettings: routeSettings,\n    stageVariables: stageVariables,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":3,"10":15,"75":34,"91":3,"104":1,"125":2,"130":2,"192":1,"193":6,"194":1,"197":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":26,"290":1},"fqnsFingerprint":"0be614d2a3b912132650ba12af28a41e520e007af53c55b6bf996cf38fa789c1"},"8d32467ae401b1e018a6dc71f5844579f0a923904bf33099e168dea4c6c04d96":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\naccess_log_settings_property = apigatewayv2.CfnApiGatewayManagedOverrides.AccessLogSettingsProperty(\n    destination_arn=\"destinationArn\",\n    format=\"format\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar accessLogSettingsProperty = new AccessLogSettingsProperty {\n    DestinationArn = \"destinationArn\",\n    Format = \"format\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nAccessLogSettingsProperty accessLogSettingsProperty = AccessLogSettingsProperty.builder()\n        .destinationArn(\"destinationArn\")\n        .format(\"format\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\naccessLogSettingsProperty := &AccessLogSettingsProperty{\n\tDestinationArn: jsii.String(\"destinationArn\"),\n\tFormat: jsii.String(\"format\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst accessLogSettingsProperty: apigatewayv2.CfnApiGatewayManagedOverrides.AccessLogSettingsProperty = {\n  destinationArn: 'destinationArn',\n  format: 'format',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverrides.AccessLogSettingsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverrides.AccessLogSettingsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accessLogSettingsProperty: apigatewayv2.CfnApiGatewayManagedOverrides.AccessLogSettingsProperty = {\n  destinationArn: 'destinationArn',\n  format: 'format',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"299b567be6d95ebe9cf8e58bb1b87d03d9947d113b673a3bb02ad3fbedceb74b"},"547610e3efb44b9c96f0bded3a9af5269d46c9c08626a4a3c94967885f65f3d3":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nintegration_overrides_property = apigatewayv2.CfnApiGatewayManagedOverrides.IntegrationOverridesProperty(\n    description=\"description\",\n    integration_method=\"integrationMethod\",\n    payload_format_version=\"payloadFormatVersion\",\n    timeout_in_millis=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar integrationOverridesProperty = new IntegrationOverridesProperty {\n    Description = \"description\",\n    IntegrationMethod = \"integrationMethod\",\n    PayloadFormatVersion = \"payloadFormatVersion\",\n    TimeoutInMillis = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nIntegrationOverridesProperty integrationOverridesProperty = IntegrationOverridesProperty.builder()\n        .description(\"description\")\n        .integrationMethod(\"integrationMethod\")\n        .payloadFormatVersion(\"payloadFormatVersion\")\n        .timeoutInMillis(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nintegrationOverridesProperty := &IntegrationOverridesProperty{\n\tDescription: jsii.String(\"description\"),\n\tIntegrationMethod: jsii.String(\"integrationMethod\"),\n\tPayloadFormatVersion: jsii.String(\"payloadFormatVersion\"),\n\tTimeoutInMillis: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst integrationOverridesProperty: apigatewayv2.CfnApiGatewayManagedOverrides.IntegrationOverridesProperty = {\n  description: 'description',\n  integrationMethod: 'integrationMethod',\n  payloadFormatVersion: 'payloadFormatVersion',\n  timeoutInMillis: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverrides.IntegrationOverridesProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverrides.IntegrationOverridesProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst integrationOverridesProperty: apigatewayv2.CfnApiGatewayManagedOverrides.IntegrationOverridesProperty = {\n  description: 'description',\n  integrationMethod: 'integrationMethod',\n  payloadFormatVersion: 'payloadFormatVersion',\n  timeoutInMillis: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":4,"75":9,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"ed0d4a8feadcdd9ce7378f3720d723612f8c0f3391731bb42a7eb888ccc3c304"},"5aa3d8c3318d0055744ccb0bdf67a34d6a2cb11460fbb99dcf9b61fbe346405f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nroute_overrides_property = apigatewayv2.CfnApiGatewayManagedOverrides.RouteOverridesProperty(\n    authorization_scopes=[\"authorizationScopes\"],\n    authorization_type=\"authorizationType\",\n    authorizer_id=\"authorizerId\",\n    operation_name=\"operationName\",\n    target=\"target\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar routeOverridesProperty = new RouteOverridesProperty {\n    AuthorizationScopes = new [] { \"authorizationScopes\" },\n    AuthorizationType = \"authorizationType\",\n    AuthorizerId = \"authorizerId\",\n    OperationName = \"operationName\",\n    Target = \"target\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nRouteOverridesProperty routeOverridesProperty = RouteOverridesProperty.builder()\n        .authorizationScopes(List.of(\"authorizationScopes\"))\n        .authorizationType(\"authorizationType\")\n        .authorizerId(\"authorizerId\")\n        .operationName(\"operationName\")\n        .target(\"target\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nrouteOverridesProperty := &RouteOverridesProperty{\n\tAuthorizationScopes: []*string{\n\t\tjsii.String(\"authorizationScopes\"),\n\t},\n\tAuthorizationType: jsii.String(\"authorizationType\"),\n\tAuthorizerId: jsii.String(\"authorizerId\"),\n\tOperationName: jsii.String(\"operationName\"),\n\tTarget: jsii.String(\"target\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst routeOverridesProperty: apigatewayv2.CfnApiGatewayManagedOverrides.RouteOverridesProperty = {\n  authorizationScopes: ['authorizationScopes'],\n  authorizationType: 'authorizationType',\n  authorizerId: 'authorizerId',\n  operationName: 'operationName',\n  target: 'target',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverrides.RouteOverridesProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverrides.RouteOverridesProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst routeOverridesProperty: apigatewayv2.CfnApiGatewayManagedOverrides.RouteOverridesProperty = {\n  authorizationScopes: ['authorizationScopes'],\n  authorizationType: 'authorizationType',\n  authorizerId: 'authorizerId',\n  operationName: 'operationName',\n  target: 'target',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":10,"153":2,"169":1,"192":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"1860512d7522a3ed91ef6c875aeb413fbed663490db25948b826e6b86227dbb4"},"a872239cc140746275a17d5a94d2c8bb700ea1eae7498866aa7b5df3e412bab3":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nroute_settings_property = apigatewayv2.CfnApiGatewayManagedOverrides.RouteSettingsProperty(\n    data_trace_enabled=False,\n    detailed_metrics_enabled=False,\n    logging_level=\"loggingLevel\",\n    throttling_burst_limit=123,\n    throttling_rate_limit=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar routeSettingsProperty = new RouteSettingsProperty {\n    DataTraceEnabled = false,\n    DetailedMetricsEnabled = false,\n    LoggingLevel = \"loggingLevel\",\n    ThrottlingBurstLimit = 123,\n    ThrottlingRateLimit = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nRouteSettingsProperty routeSettingsProperty = RouteSettingsProperty.builder()\n        .dataTraceEnabled(false)\n        .detailedMetricsEnabled(false)\n        .loggingLevel(\"loggingLevel\")\n        .throttlingBurstLimit(123)\n        .throttlingRateLimit(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nrouteSettingsProperty := &RouteSettingsProperty{\n\tDataTraceEnabled: jsii.Boolean(false),\n\tDetailedMetricsEnabled: jsii.Boolean(false),\n\tLoggingLevel: jsii.String(\"loggingLevel\"),\n\tThrottlingBurstLimit: jsii.Number(123),\n\tThrottlingRateLimit: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst routeSettingsProperty: apigatewayv2.CfnApiGatewayManagedOverrides.RouteSettingsProperty = {\n  dataTraceEnabled: false,\n  detailedMetricsEnabled: false,\n  loggingLevel: 'loggingLevel',\n  throttlingBurstLimit: 123,\n  throttlingRateLimit: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverrides.RouteSettingsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverrides.RouteSettingsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst routeSettingsProperty: apigatewayv2.CfnApiGatewayManagedOverrides.RouteSettingsProperty = {\n  dataTraceEnabled: false,\n  detailedMetricsEnabled: false,\n  loggingLevel: 'loggingLevel',\n  throttlingBurstLimit: 123,\n  throttlingRateLimit: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":2,"75":10,"91":2,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"bd43967696c3564d8c91a80a06c1e214685ecdaafc1fc958b454c293b9e26bf5"},"706ece2b0a1a6f6418d2dd20a9decfec308ecf54ba846172b621615f545b9acd":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# route_settings: Any\n# stage_variables: Any\n\nstage_overrides_property = apigatewayv2.CfnApiGatewayManagedOverrides.StageOverridesProperty(\n    access_log_settings=apigatewayv2.CfnApiGatewayManagedOverrides.AccessLogSettingsProperty(\n        destination_arn=\"destinationArn\",\n        format=\"format\"\n    ),\n    auto_deploy=False,\n    default_route_settings=apigatewayv2.CfnApiGatewayManagedOverrides.RouteSettingsProperty(\n        data_trace_enabled=False,\n        detailed_metrics_enabled=False,\n        logging_level=\"loggingLevel\",\n        throttling_burst_limit=123,\n        throttling_rate_limit=123\n    ),\n    description=\"description\",\n    route_settings=route_settings,\n    stage_variables=stage_variables\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar routeSettings;\nvar stageVariables;\n\nvar stageOverridesProperty = new StageOverridesProperty {\n    AccessLogSettings = new AccessLogSettingsProperty {\n        DestinationArn = \"destinationArn\",\n        Format = \"format\"\n    },\n    AutoDeploy = false,\n    DefaultRouteSettings = new RouteSettingsProperty {\n        DataTraceEnabled = false,\n        DetailedMetricsEnabled = false,\n        LoggingLevel = \"loggingLevel\",\n        ThrottlingBurstLimit = 123,\n        ThrottlingRateLimit = 123\n    },\n    Description = \"description\",\n    RouteSettings = routeSettings,\n    StageVariables = stageVariables\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject routeSettings;\nObject stageVariables;\n\nStageOverridesProperty stageOverridesProperty = StageOverridesProperty.builder()\n        .accessLogSettings(AccessLogSettingsProperty.builder()\n                .destinationArn(\"destinationArn\")\n                .format(\"format\")\n                .build())\n        .autoDeploy(false)\n        .defaultRouteSettings(RouteSettingsProperty.builder()\n                .dataTraceEnabled(false)\n                .detailedMetricsEnabled(false)\n                .loggingLevel(\"loggingLevel\")\n                .throttlingBurstLimit(123)\n                .throttlingRateLimit(123)\n                .build())\n        .description(\"description\")\n        .routeSettings(routeSettings)\n        .stageVariables(stageVariables)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar routeSettings interface{}\nvar stageVariables interface{}\n\nstageOverridesProperty := &StageOverridesProperty{\n\tAccessLogSettings: &AccessLogSettingsProperty{\n\t\tDestinationArn: jsii.String(\"destinationArn\"),\n\t\tFormat: jsii.String(\"format\"),\n\t},\n\tAutoDeploy: jsii.Boolean(false),\n\tDefaultRouteSettings: &RouteSettingsProperty{\n\t\tDataTraceEnabled: jsii.Boolean(false),\n\t\tDetailedMetricsEnabled: jsii.Boolean(false),\n\t\tLoggingLevel: jsii.String(\"loggingLevel\"),\n\t\tThrottlingBurstLimit: jsii.Number(123),\n\t\tThrottlingRateLimit: jsii.Number(123),\n\t},\n\tDescription: jsii.String(\"description\"),\n\tRouteSettings: routeSettings,\n\tStageVariables: stageVariables,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const routeSettings: any;\ndeclare const stageVariables: any;\nconst stageOverridesProperty: apigatewayv2.CfnApiGatewayManagedOverrides.StageOverridesProperty = {\n  accessLogSettings: {\n    destinationArn: 'destinationArn',\n    format: 'format',\n  },\n  autoDeploy: false,\n  defaultRouteSettings: {\n    dataTraceEnabled: false,\n    detailedMetricsEnabled: false,\n    loggingLevel: 'loggingLevel',\n    throttlingBurstLimit: 123,\n    throttlingRateLimit: 123,\n  },\n  description: 'description',\n  routeSettings: routeSettings,\n  stageVariables: stageVariables,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverrides.StageOverridesProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverrides.StageOverridesProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const routeSettings: any;\ndeclare const stageVariables: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stageOverridesProperty: apigatewayv2.CfnApiGatewayManagedOverrides.StageOverridesProperty = {\n  accessLogSettings: {\n    destinationArn: 'destinationArn',\n    format: 'format',\n  },\n  autoDeploy: false,\n  defaultRouteSettings: {\n    dataTraceEnabled: false,\n    detailedMetricsEnabled: false,\n    loggingLevel: 'loggingLevel',\n    throttlingBurstLimit: 123,\n    throttlingRateLimit: 123,\n  },\n  description: 'description',\n  routeSettings: routeSettings,\n  stageVariables: stageVariables,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":5,"75":22,"91":3,"125":2,"130":2,"153":2,"169":1,"193":3,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":13,"290":1},"fqnsFingerprint":"f2f1c4ced8642dff695167e0d0268da6f8b398ca88faff99948bca88365f9ab8"},"13199ad3678689461890172cbdf2002efa59bf27bf14cb693f08d3228b2ccfeb":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# route_settings: Any\n# stage_variables: Any\n\ncfn_api_gateway_managed_overrides_props = apigatewayv2.CfnApiGatewayManagedOverridesProps(\n    api_id=\"apiId\",\n\n    # the properties below are optional\n    integration=apigatewayv2.CfnApiGatewayManagedOverrides.IntegrationOverridesProperty(\n        description=\"description\",\n        integration_method=\"integrationMethod\",\n        payload_format_version=\"payloadFormatVersion\",\n        timeout_in_millis=123\n    ),\n    route=apigatewayv2.CfnApiGatewayManagedOverrides.RouteOverridesProperty(\n        authorization_scopes=[\"authorizationScopes\"],\n        authorization_type=\"authorizationType\",\n        authorizer_id=\"authorizerId\",\n        operation_name=\"operationName\",\n        target=\"target\"\n    ),\n    stage=apigatewayv2.CfnApiGatewayManagedOverrides.StageOverridesProperty(\n        access_log_settings=apigatewayv2.CfnApiGatewayManagedOverrides.AccessLogSettingsProperty(\n            destination_arn=\"destinationArn\",\n            format=\"format\"\n        ),\n        auto_deploy=False,\n        default_route_settings=apigatewayv2.CfnApiGatewayManagedOverrides.RouteSettingsProperty(\n            data_trace_enabled=False,\n            detailed_metrics_enabled=False,\n            logging_level=\"loggingLevel\",\n            throttling_burst_limit=123,\n            throttling_rate_limit=123\n        ),\n        description=\"description\",\n        route_settings=route_settings,\n        stage_variables=stage_variables\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar routeSettings;\nvar stageVariables;\n\nvar cfnApiGatewayManagedOverridesProps = new CfnApiGatewayManagedOverridesProps {\n    ApiId = \"apiId\",\n\n    // the properties below are optional\n    Integration = new IntegrationOverridesProperty {\n        Description = \"description\",\n        IntegrationMethod = \"integrationMethod\",\n        PayloadFormatVersion = \"payloadFormatVersion\",\n        TimeoutInMillis = 123\n    },\n    Route = new RouteOverridesProperty {\n        AuthorizationScopes = new [] { \"authorizationScopes\" },\n        AuthorizationType = \"authorizationType\",\n        AuthorizerId = \"authorizerId\",\n        OperationName = \"operationName\",\n        Target = \"target\"\n    },\n    Stage = new StageOverridesProperty {\n        AccessLogSettings = new AccessLogSettingsProperty {\n            DestinationArn = \"destinationArn\",\n            Format = \"format\"\n        },\n        AutoDeploy = false,\n        DefaultRouteSettings = new RouteSettingsProperty {\n            DataTraceEnabled = false,\n            DetailedMetricsEnabled = false,\n            LoggingLevel = \"loggingLevel\",\n            ThrottlingBurstLimit = 123,\n            ThrottlingRateLimit = 123\n        },\n        Description = \"description\",\n        RouteSettings = routeSettings,\n        StageVariables = stageVariables\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject routeSettings;\nObject stageVariables;\n\nCfnApiGatewayManagedOverridesProps cfnApiGatewayManagedOverridesProps = CfnApiGatewayManagedOverridesProps.builder()\n        .apiId(\"apiId\")\n\n        // the properties below are optional\n        .integration(IntegrationOverridesProperty.builder()\n                .description(\"description\")\n                .integrationMethod(\"integrationMethod\")\n                .payloadFormatVersion(\"payloadFormatVersion\")\n                .timeoutInMillis(123)\n                .build())\n        .route(RouteOverridesProperty.builder()\n                .authorizationScopes(List.of(\"authorizationScopes\"))\n                .authorizationType(\"authorizationType\")\n                .authorizerId(\"authorizerId\")\n                .operationName(\"operationName\")\n                .target(\"target\")\n                .build())\n        .stage(StageOverridesProperty.builder()\n                .accessLogSettings(AccessLogSettingsProperty.builder()\n                        .destinationArn(\"destinationArn\")\n                        .format(\"format\")\n                        .build())\n                .autoDeploy(false)\n                .defaultRouteSettings(RouteSettingsProperty.builder()\n                        .dataTraceEnabled(false)\n                        .detailedMetricsEnabled(false)\n                        .loggingLevel(\"loggingLevel\")\n                        .throttlingBurstLimit(123)\n                        .throttlingRateLimit(123)\n                        .build())\n                .description(\"description\")\n                .routeSettings(routeSettings)\n                .stageVariables(stageVariables)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar routeSettings interface{}\nvar stageVariables interface{}\n\ncfnApiGatewayManagedOverridesProps := &CfnApiGatewayManagedOverridesProps{\n\tApiId: jsii.String(\"apiId\"),\n\n\t// the properties below are optional\n\tIntegration: &IntegrationOverridesProperty{\n\t\tDescription: jsii.String(\"description\"),\n\t\tIntegrationMethod: jsii.String(\"integrationMethod\"),\n\t\tPayloadFormatVersion: jsii.String(\"payloadFormatVersion\"),\n\t\tTimeoutInMillis: jsii.Number(123),\n\t},\n\tRoute: &RouteOverridesProperty{\n\t\tAuthorizationScopes: []*string{\n\t\t\tjsii.String(\"authorizationScopes\"),\n\t\t},\n\t\tAuthorizationType: jsii.String(\"authorizationType\"),\n\t\tAuthorizerId: jsii.String(\"authorizerId\"),\n\t\tOperationName: jsii.String(\"operationName\"),\n\t\tTarget: jsii.String(\"target\"),\n\t},\n\tStage: &StageOverridesProperty{\n\t\tAccessLogSettings: &AccessLogSettingsProperty{\n\t\t\tDestinationArn: jsii.String(\"destinationArn\"),\n\t\t\tFormat: jsii.String(\"format\"),\n\t\t},\n\t\tAutoDeploy: jsii.Boolean(false),\n\t\tDefaultRouteSettings: &RouteSettingsProperty{\n\t\t\tDataTraceEnabled: jsii.Boolean(false),\n\t\t\tDetailedMetricsEnabled: jsii.Boolean(false),\n\t\t\tLoggingLevel: jsii.String(\"loggingLevel\"),\n\t\t\tThrottlingBurstLimit: jsii.Number(123),\n\t\t\tThrottlingRateLimit: jsii.Number(123),\n\t\t},\n\t\tDescription: jsii.String(\"description\"),\n\t\tRouteSettings: routeSettings,\n\t\tStageVariables: stageVariables,\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const routeSettings: any;\ndeclare const stageVariables: any;\nconst cfnApiGatewayManagedOverridesProps: apigatewayv2.CfnApiGatewayManagedOverridesProps = {\n  apiId: 'apiId',\n\n  // the properties below are optional\n  integration: {\n    description: 'description',\n    integrationMethod: 'integrationMethod',\n    payloadFormatVersion: 'payloadFormatVersion',\n    timeoutInMillis: 123,\n  },\n  route: {\n    authorizationScopes: ['authorizationScopes'],\n    authorizationType: 'authorizationType',\n    authorizerId: 'authorizerId',\n    operationName: 'operationName',\n    target: 'target',\n  },\n  stage: {\n    accessLogSettings: {\n      destinationArn: 'destinationArn',\n      format: 'format',\n    },\n    autoDeploy: false,\n    defaultRouteSettings: {\n      dataTraceEnabled: false,\n      detailedMetricsEnabled: false,\n      loggingLevel: 'loggingLevel',\n      throttlingBurstLimit: 123,\n      throttlingRateLimit: 123,\n    },\n    description: 'description',\n    routeSettings: routeSettings,\n    stageVariables: stageVariables,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverridesProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnApiGatewayManagedOverridesProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const routeSettings: any;\ndeclare const stageVariables: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApiGatewayManagedOverridesProps: apigatewayv2.CfnApiGatewayManagedOverridesProps = {\n  apiId: 'apiId',\n\n  // the properties below are optional\n  integration: {\n    description: 'description',\n    integrationMethod: 'integrationMethod',\n    payloadFormatVersion: 'payloadFormatVersion',\n    timeoutInMillis: 123,\n  },\n  route: {\n    authorizationScopes: ['authorizationScopes'],\n    authorizationType: 'authorizationType',\n    authorizerId: 'authorizerId',\n    operationName: 'operationName',\n    target: 'target',\n  },\n  stage: {\n    accessLogSettings: {\n      destinationArn: 'destinationArn',\n      format: 'format',\n    },\n    autoDeploy: false,\n    defaultRouteSettings: {\n      dataTraceEnabled: false,\n      detailedMetricsEnabled: false,\n      loggingLevel: 'loggingLevel',\n      throttlingBurstLimit: 123,\n      throttlingRateLimit: 123,\n    },\n    description: 'description',\n    routeSettings: routeSettings,\n    stageVariables: stageVariables,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":3,"10":14,"75":34,"91":3,"125":2,"130":2,"153":1,"169":1,"192":1,"193":6,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":26,"290":1},"fqnsFingerprint":"d5e33bc0d210cf74ae3a166795f1513133a33d7a20ec25d8e8c572e25ce4b326"},"a255df3209b4bf8d0b9231b72d52629c5259620d9604e8dc28575f1b4f9cb4a5":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\ncfn_api_mapping = apigatewayv2.CfnApiMapping(self, \"MyCfnApiMapping\",\n    api_id=\"apiId\",\n    domain_name=\"domainName\",\n    stage=\"stage\",\n\n    # the properties below are optional\n    api_mapping_key=\"apiMappingKey\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar cfnApiMapping = new CfnApiMapping(this, \"MyCfnApiMapping\", new CfnApiMappingProps {\n    ApiId = \"apiId\",\n    DomainName = \"domainName\",\n    Stage = \"stage\",\n\n    // the properties below are optional\n    ApiMappingKey = \"apiMappingKey\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nCfnApiMapping cfnApiMapping = CfnApiMapping.Builder.create(this, \"MyCfnApiMapping\")\n        .apiId(\"apiId\")\n        .domainName(\"domainName\")\n        .stage(\"stage\")\n\n        // the properties below are optional\n        .apiMappingKey(\"apiMappingKey\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\ncfnApiMapping := apigatewayv2.NewCfnApiMapping(this, jsii.String(\"MyCfnApiMapping\"), &CfnApiMappingProps{\n\tApiId: jsii.String(\"apiId\"),\n\tDomainName: jsii.String(\"domainName\"),\n\tStage: jsii.String(\"stage\"),\n\n\t// the properties below are optional\n\tApiMappingKey: jsii.String(\"apiMappingKey\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst cfnApiMapping = new apigatewayv2.CfnApiMapping(this, 'MyCfnApiMapping', {\n  apiId: 'apiId',\n  domainName: 'domainName',\n  stage: 'stage',\n\n  // the properties below are optional\n  apiMappingKey: 'apiMappingKey',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnApiMapping"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnApiMapping","@aws-cdk/aws-apigatewayv2.CfnApiMappingProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApiMapping = new apigatewayv2.CfnApiMapping(this, 'MyCfnApiMapping', {\n  apiId: 'apiId',\n  domainName: 'domainName',\n  stage: 'stage',\n\n  // the properties below are optional\n  apiMappingKey: 'apiMappingKey',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":8,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"b7357237251e59702ea1ec9980d4dc03377daec28da0da0ac0a677dd8af537a8"},"5efcf5cf52596cc3172fdc96f762c8e19fcaaea58888463744242efdef0a6ec1":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\ncfn_api_mapping_props = apigatewayv2.CfnApiMappingProps(\n    api_id=\"apiId\",\n    domain_name=\"domainName\",\n    stage=\"stage\",\n\n    # the properties below are optional\n    api_mapping_key=\"apiMappingKey\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar cfnApiMappingProps = new CfnApiMappingProps {\n    ApiId = \"apiId\",\n    DomainName = \"domainName\",\n    Stage = \"stage\",\n\n    // the properties below are optional\n    ApiMappingKey = \"apiMappingKey\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nCfnApiMappingProps cfnApiMappingProps = CfnApiMappingProps.builder()\n        .apiId(\"apiId\")\n        .domainName(\"domainName\")\n        .stage(\"stage\")\n\n        // the properties below are optional\n        .apiMappingKey(\"apiMappingKey\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\ncfnApiMappingProps := &CfnApiMappingProps{\n\tApiId: jsii.String(\"apiId\"),\n\tDomainName: jsii.String(\"domainName\"),\n\tStage: jsii.String(\"stage\"),\n\n\t// the properties below are optional\n\tApiMappingKey: jsii.String(\"apiMappingKey\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst cfnApiMappingProps: apigatewayv2.CfnApiMappingProps = {\n  apiId: 'apiId',\n  domainName: 'domainName',\n  stage: 'stage',\n\n  // the properties below are optional\n  apiMappingKey: 'apiMappingKey',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnApiMappingProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnApiMappingProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApiMappingProps: apigatewayv2.CfnApiMappingProps = {\n  apiId: 'apiId',\n  domainName: 'domainName',\n  stage: 'stage',\n\n  // the properties below are optional\n  apiMappingKey: 'apiMappingKey',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":8,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":4,"290":1},"fqnsFingerprint":"0a105308cb8430efccd275ce6d57af9e8baca165c9f8b8dac0db92d5f05b0c5e"},"5e8ad200314babe5a7b7d8173d544db7b2ae1f2a940b2af97a64760766c52db4":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# body: Any\n\ncfn_api_props = apigatewayv2.CfnApiProps(\n    api_key_selection_expression=\"apiKeySelectionExpression\",\n    base_path=\"basePath\",\n    body=body,\n    body_s3_location=apigatewayv2.CfnApi.BodyS3LocationProperty(\n        bucket=\"bucket\",\n        etag=\"etag\",\n        key=\"key\",\n        version=\"version\"\n    ),\n    cors_configuration=apigatewayv2.CfnApi.CorsProperty(\n        allow_credentials=False,\n        allow_headers=[\"allowHeaders\"],\n        allow_methods=[\"allowMethods\"],\n        allow_origins=[\"allowOrigins\"],\n        expose_headers=[\"exposeHeaders\"],\n        max_age=123\n    ),\n    credentials_arn=\"credentialsArn\",\n    description=\"description\",\n    disable_execute_api_endpoint=False,\n    disable_schema_validation=False,\n    fail_on_warnings=False,\n    name=\"name\",\n    protocol_type=\"protocolType\",\n    route_key=\"routeKey\",\n    route_selection_expression=\"routeSelectionExpression\",\n    tags={\n        \"tags_key\": \"tags\"\n    },\n    target=\"target\",\n    version=\"version\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar body;\n\nvar cfnApiProps = new CfnApiProps {\n    ApiKeySelectionExpression = \"apiKeySelectionExpression\",\n    BasePath = \"basePath\",\n    Body = body,\n    BodyS3Location = new BodyS3LocationProperty {\n        Bucket = \"bucket\",\n        Etag = \"etag\",\n        Key = \"key\",\n        Version = \"version\"\n    },\n    CorsConfiguration = new CorsProperty {\n        AllowCredentials = false,\n        AllowHeaders = new [] { \"allowHeaders\" },\n        AllowMethods = new [] { \"allowMethods\" },\n        AllowOrigins = new [] { \"allowOrigins\" },\n        ExposeHeaders = new [] { \"exposeHeaders\" },\n        MaxAge = 123\n    },\n    CredentialsArn = \"credentialsArn\",\n    Description = \"description\",\n    DisableExecuteApiEndpoint = false,\n    DisableSchemaValidation = false,\n    FailOnWarnings = false,\n    Name = \"name\",\n    ProtocolType = \"protocolType\",\n    RouteKey = \"routeKey\",\n    RouteSelectionExpression = \"routeSelectionExpression\",\n    Tags = new Dictionary<string, string> {\n        { \"tagsKey\", \"tags\" }\n    },\n    Target = \"target\",\n    Version = \"version\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject body;\n\nCfnApiProps cfnApiProps = CfnApiProps.builder()\n        .apiKeySelectionExpression(\"apiKeySelectionExpression\")\n        .basePath(\"basePath\")\n        .body(body)\n        .bodyS3Location(BodyS3LocationProperty.builder()\n                .bucket(\"bucket\")\n                .etag(\"etag\")\n                .key(\"key\")\n                .version(\"version\")\n                .build())\n        .corsConfiguration(CorsProperty.builder()\n                .allowCredentials(false)\n                .allowHeaders(List.of(\"allowHeaders\"))\n                .allowMethods(List.of(\"allowMethods\"))\n                .allowOrigins(List.of(\"allowOrigins\"))\n                .exposeHeaders(List.of(\"exposeHeaders\"))\n                .maxAge(123)\n                .build())\n        .credentialsArn(\"credentialsArn\")\n        .description(\"description\")\n        .disableExecuteApiEndpoint(false)\n        .disableSchemaValidation(false)\n        .failOnWarnings(false)\n        .name(\"name\")\n        .protocolType(\"protocolType\")\n        .routeKey(\"routeKey\")\n        .routeSelectionExpression(\"routeSelectionExpression\")\n        .tags(Map.of(\n                \"tagsKey\", \"tags\"))\n        .target(\"target\")\n        .version(\"version\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar body interface{}\n\ncfnApiProps := &CfnApiProps{\n\tApiKeySelectionExpression: jsii.String(\"apiKeySelectionExpression\"),\n\tBasePath: jsii.String(\"basePath\"),\n\tBody: body,\n\tBodyS3Location: &BodyS3LocationProperty{\n\t\tBucket: jsii.String(\"bucket\"),\n\t\tEtag: jsii.String(\"etag\"),\n\t\tKey: jsii.String(\"key\"),\n\t\tVersion: jsii.String(\"version\"),\n\t},\n\tCorsConfiguration: &CorsProperty{\n\t\tAllowCredentials: jsii.Boolean(false),\n\t\tAllowHeaders: []*string{\n\t\t\tjsii.String(\"allowHeaders\"),\n\t\t},\n\t\tAllowMethods: []*string{\n\t\t\tjsii.String(\"allowMethods\"),\n\t\t},\n\t\tAllowOrigins: []*string{\n\t\t\tjsii.String(\"allowOrigins\"),\n\t\t},\n\t\tExposeHeaders: []*string{\n\t\t\tjsii.String(\"exposeHeaders\"),\n\t\t},\n\t\tMaxAge: jsii.Number(123),\n\t},\n\tCredentialsArn: jsii.String(\"credentialsArn\"),\n\tDescription: jsii.String(\"description\"),\n\tDisableExecuteApiEndpoint: jsii.Boolean(false),\n\tDisableSchemaValidation: jsii.Boolean(false),\n\tFailOnWarnings: jsii.Boolean(false),\n\tName: jsii.String(\"name\"),\n\tProtocolType: jsii.String(\"protocolType\"),\n\tRouteKey: jsii.String(\"routeKey\"),\n\tRouteSelectionExpression: jsii.String(\"routeSelectionExpression\"),\n\tTags: map[string]*string{\n\t\t\"tagsKey\": jsii.String(\"tags\"),\n\t},\n\tTarget: jsii.String(\"target\"),\n\tVersion: jsii.String(\"version\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const body: any;\nconst cfnApiProps: apigatewayv2.CfnApiProps = {\n  apiKeySelectionExpression: 'apiKeySelectionExpression',\n  basePath: 'basePath',\n  body: body,\n  bodyS3Location: {\n    bucket: 'bucket',\n    etag: 'etag',\n    key: 'key',\n    version: 'version',\n  },\n  corsConfiguration: {\n    allowCredentials: false,\n    allowHeaders: ['allowHeaders'],\n    allowMethods: ['allowMethods'],\n    allowOrigins: ['allowOrigins'],\n    exposeHeaders: ['exposeHeaders'],\n    maxAge: 123,\n  },\n  credentialsArn: 'credentialsArn',\n  description: 'description',\n  disableExecuteApiEndpoint: false,\n  disableSchemaValidation: false,\n  failOnWarnings: false,\n  name: 'name',\n  protocolType: 'protocolType',\n  routeKey: 'routeKey',\n  routeSelectionExpression: 'routeSelectionExpression',\n  tags: {\n    tagsKey: 'tags',\n  },\n  target: 'target',\n  version: 'version',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnApiProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnApiProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const body: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnApiProps: apigatewayv2.CfnApiProps = {\n  apiKeySelectionExpression: 'apiKeySelectionExpression',\n  basePath: 'basePath',\n  body: body,\n  bodyS3Location: {\n    bucket: 'bucket',\n    etag: 'etag',\n    key: 'key',\n    version: 'version',\n  },\n  corsConfiguration: {\n    allowCredentials: false,\n    allowHeaders: ['allowHeaders'],\n    allowMethods: ['allowMethods'],\n    allowOrigins: ['allowOrigins'],\n    exposeHeaders: ['exposeHeaders'],\n    maxAge: 123,\n  },\n  credentialsArn: 'credentialsArn',\n  description: 'description',\n  disableExecuteApiEndpoint: false,\n  disableSchemaValidation: false,\n  failOnWarnings: false,\n  name: 'name',\n  protocolType: 'protocolType',\n  routeKey: 'routeKey',\n  routeSelectionExpression: 'routeSelectionExpression',\n  tags: {\n    tagsKey: 'tags',\n  },\n  target: 'target',\n  version: 'version',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":20,"75":34,"91":4,"125":1,"130":1,"153":1,"169":1,"192":4,"193":4,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":28,"290":1},"fqnsFingerprint":"b5920df9972818fbb6aaa66ba3f1bb5910aeb9faa46b0575e0ab2218f7766bd0"},"85b9a6d70d6a6992c21e8746a00c369ff8ecb92f5727c83591919c8774405b44":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\ncfn_authorizer = apigatewayv2.CfnAuthorizer(self, \"MyCfnAuthorizer\",\n    api_id=\"apiId\",\n    authorizer_type=\"authorizerType\",\n    name=\"name\",\n\n    # the properties below are optional\n    authorizer_credentials_arn=\"authorizerCredentialsArn\",\n    authorizer_payload_format_version=\"authorizerPayloadFormatVersion\",\n    authorizer_result_ttl_in_seconds=123,\n    authorizer_uri=\"authorizerUri\",\n    enable_simple_responses=False,\n    identity_source=[\"identitySource\"],\n    identity_validation_expression=\"identityValidationExpression\",\n    jwt_configuration=apigatewayv2.CfnAuthorizer.JWTConfigurationProperty(\n        audience=[\"audience\"],\n        issuer=\"issuer\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar cfnAuthorizer = new CfnAuthorizer(this, \"MyCfnAuthorizer\", new CfnAuthorizerProps {\n    ApiId = \"apiId\",\n    AuthorizerType = \"authorizerType\",\n    Name = \"name\",\n\n    // the properties below are optional\n    AuthorizerCredentialsArn = \"authorizerCredentialsArn\",\n    AuthorizerPayloadFormatVersion = \"authorizerPayloadFormatVersion\",\n    AuthorizerResultTtlInSeconds = 123,\n    AuthorizerUri = \"authorizerUri\",\n    EnableSimpleResponses = false,\n    IdentitySource = new [] { \"identitySource\" },\n    IdentityValidationExpression = \"identityValidationExpression\",\n    JwtConfiguration = new JWTConfigurationProperty {\n        Audience = new [] { \"audience\" },\n        Issuer = \"issuer\"\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nCfnAuthorizer cfnAuthorizer = CfnAuthorizer.Builder.create(this, \"MyCfnAuthorizer\")\n        .apiId(\"apiId\")\n        .authorizerType(\"authorizerType\")\n        .name(\"name\")\n\n        // the properties below are optional\n        .authorizerCredentialsArn(\"authorizerCredentialsArn\")\n        .authorizerPayloadFormatVersion(\"authorizerPayloadFormatVersion\")\n        .authorizerResultTtlInSeconds(123)\n        .authorizerUri(\"authorizerUri\")\n        .enableSimpleResponses(false)\n        .identitySource(List.of(\"identitySource\"))\n        .identityValidationExpression(\"identityValidationExpression\")\n        .jwtConfiguration(JWTConfigurationProperty.builder()\n                .audience(List.of(\"audience\"))\n                .issuer(\"issuer\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\ncfnAuthorizer := apigatewayv2.NewCfnAuthorizer(this, jsii.String(\"MyCfnAuthorizer\"), &CfnAuthorizerProps{\n\tApiId: jsii.String(\"apiId\"),\n\tAuthorizerType: jsii.String(\"authorizerType\"),\n\tName: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tAuthorizerCredentialsArn: jsii.String(\"authorizerCredentialsArn\"),\n\tAuthorizerPayloadFormatVersion: jsii.String(\"authorizerPayloadFormatVersion\"),\n\tAuthorizerResultTtlInSeconds: jsii.Number(123),\n\tAuthorizerUri: jsii.String(\"authorizerUri\"),\n\tEnableSimpleResponses: jsii.Boolean(false),\n\tIdentitySource: []*string{\n\t\tjsii.String(\"identitySource\"),\n\t},\n\tIdentityValidationExpression: jsii.String(\"identityValidationExpression\"),\n\tJwtConfiguration: &JWTConfigurationProperty{\n\t\tAudience: []*string{\n\t\t\tjsii.String(\"audience\"),\n\t\t},\n\t\tIssuer: jsii.String(\"issuer\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst cfnAuthorizer = new apigatewayv2.CfnAuthorizer(this, 'MyCfnAuthorizer', {\n  apiId: 'apiId',\n  authorizerType: 'authorizerType',\n  name: 'name',\n\n  // the properties below are optional\n  authorizerCredentialsArn: 'authorizerCredentialsArn',\n  authorizerPayloadFormatVersion: 'authorizerPayloadFormatVersion',\n  authorizerResultTtlInSeconds: 123,\n  authorizerUri: 'authorizerUri',\n  enableSimpleResponses: false,\n  identitySource: ['identitySource'],\n  identityValidationExpression: 'identityValidationExpression',\n  jwtConfiguration: {\n    audience: ['audience'],\n    issuer: 'issuer',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnAuthorizer"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnAuthorizer","@aws-cdk/aws-apigatewayv2.CfnAuthorizerProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAuthorizer = new apigatewayv2.CfnAuthorizer(this, 'MyCfnAuthorizer', {\n  apiId: 'apiId',\n  authorizerType: 'authorizerType',\n  name: 'name',\n\n  // the properties below are optional\n  authorizerCredentialsArn: 'authorizerCredentialsArn',\n  authorizerPayloadFormatVersion: 'authorizerPayloadFormatVersion',\n  authorizerResultTtlInSeconds: 123,\n  authorizerUri: 'authorizerUri',\n  enableSimpleResponses: false,\n  identitySource: ['identitySource'],\n  identityValidationExpression: 'identityValidationExpression',\n  jwtConfiguration: {\n    audience: ['audience'],\n    issuer: 'issuer',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":12,"75":17,"91":1,"104":1,"192":2,"193":2,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":13,"290":1},"fqnsFingerprint":"13051df38819a5916cc8136b2650790c725158b82331b4c56f82aaa8fe73b374"},"8f912f07d76bcb0bcbc5ec46d01fb89d7d4e8aaeca60d038a1ed44f0d005c1ec":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nj_wTConfiguration_property = apigatewayv2.CfnAuthorizer.JWTConfigurationProperty(\n    audience=[\"audience\"],\n    issuer=\"issuer\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar jWTConfigurationProperty = new JWTConfigurationProperty {\n    Audience = new [] { \"audience\" },\n    Issuer = \"issuer\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nJWTConfigurationProperty jWTConfigurationProperty = JWTConfigurationProperty.builder()\n        .audience(List.of(\"audience\"))\n        .issuer(\"issuer\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\njWTConfigurationProperty := &JWTConfigurationProperty{\n\tAudience: []*string{\n\t\tjsii.String(\"audience\"),\n\t},\n\tIssuer: jsii.String(\"issuer\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst jWTConfigurationProperty: apigatewayv2.CfnAuthorizer.JWTConfigurationProperty = {\n  audience: ['audience'],\n  issuer: 'issuer',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnAuthorizer.JWTConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnAuthorizer.JWTConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jWTConfigurationProperty: apigatewayv2.CfnAuthorizer.JWTConfigurationProperty = {\n  audience: ['audience'],\n  issuer: 'issuer',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"192":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"8f1d3b5b32afab11e079dec6f08524be5e41c4810ebea6f6f0a0117c67e2ceda"},"511b46ca33b8d92e018d4edf793c07d2089401d3c8e85e54b4faa92e1a3cd82b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\ncfn_authorizer_props = apigatewayv2.CfnAuthorizerProps(\n    api_id=\"apiId\",\n    authorizer_type=\"authorizerType\",\n    name=\"name\",\n\n    # the properties below are optional\n    authorizer_credentials_arn=\"authorizerCredentialsArn\",\n    authorizer_payload_format_version=\"authorizerPayloadFormatVersion\",\n    authorizer_result_ttl_in_seconds=123,\n    authorizer_uri=\"authorizerUri\",\n    enable_simple_responses=False,\n    identity_source=[\"identitySource\"],\n    identity_validation_expression=\"identityValidationExpression\",\n    jwt_configuration=apigatewayv2.CfnAuthorizer.JWTConfigurationProperty(\n        audience=[\"audience\"],\n        issuer=\"issuer\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar cfnAuthorizerProps = new CfnAuthorizerProps {\n    ApiId = \"apiId\",\n    AuthorizerType = \"authorizerType\",\n    Name = \"name\",\n\n    // the properties below are optional\n    AuthorizerCredentialsArn = \"authorizerCredentialsArn\",\n    AuthorizerPayloadFormatVersion = \"authorizerPayloadFormatVersion\",\n    AuthorizerResultTtlInSeconds = 123,\n    AuthorizerUri = \"authorizerUri\",\n    EnableSimpleResponses = false,\n    IdentitySource = new [] { \"identitySource\" },\n    IdentityValidationExpression = \"identityValidationExpression\",\n    JwtConfiguration = new JWTConfigurationProperty {\n        Audience = new [] { \"audience\" },\n        Issuer = \"issuer\"\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nCfnAuthorizerProps cfnAuthorizerProps = CfnAuthorizerProps.builder()\n        .apiId(\"apiId\")\n        .authorizerType(\"authorizerType\")\n        .name(\"name\")\n\n        // the properties below are optional\n        .authorizerCredentialsArn(\"authorizerCredentialsArn\")\n        .authorizerPayloadFormatVersion(\"authorizerPayloadFormatVersion\")\n        .authorizerResultTtlInSeconds(123)\n        .authorizerUri(\"authorizerUri\")\n        .enableSimpleResponses(false)\n        .identitySource(List.of(\"identitySource\"))\n        .identityValidationExpression(\"identityValidationExpression\")\n        .jwtConfiguration(JWTConfigurationProperty.builder()\n                .audience(List.of(\"audience\"))\n                .issuer(\"issuer\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\ncfnAuthorizerProps := &CfnAuthorizerProps{\n\tApiId: jsii.String(\"apiId\"),\n\tAuthorizerType: jsii.String(\"authorizerType\"),\n\tName: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tAuthorizerCredentialsArn: jsii.String(\"authorizerCredentialsArn\"),\n\tAuthorizerPayloadFormatVersion: jsii.String(\"authorizerPayloadFormatVersion\"),\n\tAuthorizerResultTtlInSeconds: jsii.Number(123),\n\tAuthorizerUri: jsii.String(\"authorizerUri\"),\n\tEnableSimpleResponses: jsii.Boolean(false),\n\tIdentitySource: []*string{\n\t\tjsii.String(\"identitySource\"),\n\t},\n\tIdentityValidationExpression: jsii.String(\"identityValidationExpression\"),\n\tJwtConfiguration: &JWTConfigurationProperty{\n\t\tAudience: []*string{\n\t\t\tjsii.String(\"audience\"),\n\t\t},\n\t\tIssuer: jsii.String(\"issuer\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst cfnAuthorizerProps: apigatewayv2.CfnAuthorizerProps = {\n  apiId: 'apiId',\n  authorizerType: 'authorizerType',\n  name: 'name',\n\n  // the properties below are optional\n  authorizerCredentialsArn: 'authorizerCredentialsArn',\n  authorizerPayloadFormatVersion: 'authorizerPayloadFormatVersion',\n  authorizerResultTtlInSeconds: 123,\n  authorizerUri: 'authorizerUri',\n  enableSimpleResponses: false,\n  identitySource: ['identitySource'],\n  identityValidationExpression: 'identityValidationExpression',\n  jwtConfiguration: {\n    audience: ['audience'],\n    issuer: 'issuer',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnAuthorizerProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnAuthorizerProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnAuthorizerProps: apigatewayv2.CfnAuthorizerProps = {\n  apiId: 'apiId',\n  authorizerType: 'authorizerType',\n  name: 'name',\n\n  // the properties below are optional\n  authorizerCredentialsArn: 'authorizerCredentialsArn',\n  authorizerPayloadFormatVersion: 'authorizerPayloadFormatVersion',\n  authorizerResultTtlInSeconds: 123,\n  authorizerUri: 'authorizerUri',\n  enableSimpleResponses: false,\n  identitySource: ['identitySource'],\n  identityValidationExpression: 'identityValidationExpression',\n  jwtConfiguration: {\n    audience: ['audience'],\n    issuer: 'issuer',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":11,"75":17,"91":1,"153":1,"169":1,"192":2,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":13,"290":1},"fqnsFingerprint":"5fc1eb66aff50f0050af945fdd9c346f2a5e782cff7b2fe3f8d9f4057b83a01c"},"459ab814015a22d362d3331e4be135801d77dcd9e9b41db82c11c110a83e716a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\ncfn_deployment = apigatewayv2.CfnDeployment(self, \"MyCfnDeployment\",\n    api_id=\"apiId\",\n\n    # the properties below are optional\n    description=\"description\",\n    stage_name=\"stageName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar cfnDeployment = new CfnDeployment(this, \"MyCfnDeployment\", new CfnDeploymentProps {\n    ApiId = \"apiId\",\n\n    // the properties below are optional\n    Description = \"description\",\n    StageName = \"stageName\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nCfnDeployment cfnDeployment = CfnDeployment.Builder.create(this, \"MyCfnDeployment\")\n        .apiId(\"apiId\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .stageName(\"stageName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\ncfnDeployment := apigatewayv2.NewCfnDeployment(this, jsii.String(\"MyCfnDeployment\"), &CfnDeploymentProps{\n\tApiId: jsii.String(\"apiId\"),\n\n\t// the properties below are optional\n\tDescription: jsii.String(\"description\"),\n\tStageName: jsii.String(\"stageName\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst cfnDeployment = new apigatewayv2.CfnDeployment(this, 'MyCfnDeployment', {\n  apiId: 'apiId',\n\n  // the properties below are optional\n  description: 'description',\n  stageName: 'stageName',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnDeployment"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnDeployment","@aws-cdk/aws-apigatewayv2.CfnDeploymentProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDeployment = new apigatewayv2.CfnDeployment(this, 'MyCfnDeployment', {\n  apiId: 'apiId',\n\n  // the properties below are optional\n  description: 'description',\n  stageName: 'stageName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":7,"104":1,"193":1,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"a17e70c8533598c6bcec9471c730e3973964382f4508d56a625e873eef46991d"},"44e72ff9b4d769c9738f1da75999ff7808d45f128f16cc81e4c5c1bfa77a3c6b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\ncfn_deployment_props = apigatewayv2.CfnDeploymentProps(\n    api_id=\"apiId\",\n\n    # the properties below are optional\n    description=\"description\",\n    stage_name=\"stageName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar cfnDeploymentProps = new CfnDeploymentProps {\n    ApiId = \"apiId\",\n\n    // the properties below are optional\n    Description = \"description\",\n    StageName = \"stageName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nCfnDeploymentProps cfnDeploymentProps = CfnDeploymentProps.builder()\n        .apiId(\"apiId\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .stageName(\"stageName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\ncfnDeploymentProps := &CfnDeploymentProps{\n\tApiId: jsii.String(\"apiId\"),\n\n\t// the properties below are optional\n\tDescription: jsii.String(\"description\"),\n\tStageName: jsii.String(\"stageName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst cfnDeploymentProps: apigatewayv2.CfnDeploymentProps = {\n  apiId: 'apiId',\n\n  // the properties below are optional\n  description: 'description',\n  stageName: 'stageName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnDeploymentProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnDeploymentProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDeploymentProps: apigatewayv2.CfnDeploymentProps = {\n  apiId: 'apiId',\n\n  // the properties below are optional\n  description: 'description',\n  stageName: 'stageName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":7,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"0a2c0d59d0fdb740236680bc06e1417d3347762e854f659c7901d2c6e4f83a8b"},"a943bdedcace2d3908dcca826da53971422f216455784ef3137f37cc8df1d323":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# tags: Any\n\ncfn_domain_name = apigatewayv2.CfnDomainName(self, \"MyCfnDomainName\",\n    domain_name=\"domainName\",\n\n    # the properties below are optional\n    domain_name_configurations=[apigatewayv2.CfnDomainName.DomainNameConfigurationProperty(\n        certificate_arn=\"certificateArn\",\n        certificate_name=\"certificateName\",\n        endpoint_type=\"endpointType\",\n        ownership_verification_certificate_arn=\"ownershipVerificationCertificateArn\",\n        security_policy=\"securityPolicy\"\n    )],\n    mutual_tls_authentication=apigatewayv2.CfnDomainName.MutualTlsAuthenticationProperty(\n        truststore_uri=\"truststoreUri\",\n        truststore_version=\"truststoreVersion\"\n    ),\n    tags=tags\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar tags;\n\nvar cfnDomainName = new CfnDomainName(this, \"MyCfnDomainName\", new CfnDomainNameProps {\n    DomainName = \"domainName\",\n\n    // the properties below are optional\n    DomainNameConfigurations = new [] { new DomainNameConfigurationProperty {\n        CertificateArn = \"certificateArn\",\n        CertificateName = \"certificateName\",\n        EndpointType = \"endpointType\",\n        OwnershipVerificationCertificateArn = \"ownershipVerificationCertificateArn\",\n        SecurityPolicy = \"securityPolicy\"\n    } },\n    MutualTlsAuthentication = new MutualTlsAuthenticationProperty {\n        TruststoreUri = \"truststoreUri\",\n        TruststoreVersion = \"truststoreVersion\"\n    },\n    Tags = tags\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject tags;\n\nCfnDomainName cfnDomainName = CfnDomainName.Builder.create(this, \"MyCfnDomainName\")\n        .domainName(\"domainName\")\n\n        // the properties below are optional\n        .domainNameConfigurations(List.of(DomainNameConfigurationProperty.builder()\n                .certificateArn(\"certificateArn\")\n                .certificateName(\"certificateName\")\n                .endpointType(\"endpointType\")\n                .ownershipVerificationCertificateArn(\"ownershipVerificationCertificateArn\")\n                .securityPolicy(\"securityPolicy\")\n                .build()))\n        .mutualTlsAuthentication(MutualTlsAuthenticationProperty.builder()\n                .truststoreUri(\"truststoreUri\")\n                .truststoreVersion(\"truststoreVersion\")\n                .build())\n        .tags(tags)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar tags interface{}\n\ncfnDomainName := apigatewayv2.NewCfnDomainName(this, jsii.String(\"MyCfnDomainName\"), &CfnDomainNameProps{\n\tDomainName: jsii.String(\"domainName\"),\n\n\t// the properties below are optional\n\tDomainNameConfigurations: []interface{}{\n\t\t&DomainNameConfigurationProperty{\n\t\t\tCertificateArn: jsii.String(\"certificateArn\"),\n\t\t\tCertificateName: jsii.String(\"certificateName\"),\n\t\t\tEndpointType: jsii.String(\"endpointType\"),\n\t\t\tOwnershipVerificationCertificateArn: jsii.String(\"ownershipVerificationCertificateArn\"),\n\t\t\tSecurityPolicy: jsii.String(\"securityPolicy\"),\n\t\t},\n\t},\n\tMutualTlsAuthentication: &MutualTlsAuthenticationProperty{\n\t\tTruststoreUri: jsii.String(\"truststoreUri\"),\n\t\tTruststoreVersion: jsii.String(\"truststoreVersion\"),\n\t},\n\tTags: tags,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const tags: any;\nconst cfnDomainName = new apigatewayv2.CfnDomainName(this, 'MyCfnDomainName', {\n  domainName: 'domainName',\n\n  // the properties below are optional\n  domainNameConfigurations: [{\n    certificateArn: 'certificateArn',\n    certificateName: 'certificateName',\n    endpointType: 'endpointType',\n    ownershipVerificationCertificateArn: 'ownershipVerificationCertificateArn',\n    securityPolicy: 'securityPolicy',\n  }],\n  mutualTlsAuthentication: {\n    truststoreUri: 'truststoreUri',\n    truststoreVersion: 'truststoreVersion',\n  },\n  tags: tags,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnDomainName"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnDomainName","@aws-cdk/aws-apigatewayv2.CfnDomainNameProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDomainName = new apigatewayv2.CfnDomainName(this, 'MyCfnDomainName', {\n  domainName: 'domainName',\n\n  // the properties below are optional\n  domainNameConfigurations: [{\n    certificateArn: 'certificateArn',\n    certificateName: 'certificateName',\n    endpointType: 'endpointType',\n    ownershipVerificationCertificateArn: 'ownershipVerificationCertificateArn',\n    securityPolicy: 'securityPolicy',\n  }],\n  mutualTlsAuthentication: {\n    truststoreUri: 'truststoreUri',\n    truststoreVersion: 'truststoreVersion',\n  },\n  tags: tags,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":10,"75":17,"104":1,"125":1,"130":1,"192":1,"193":3,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":11,"290":1},"fqnsFingerprint":"c4ee216e59fba3e4295e66611668c34becab46527d53790dad15da2d8093e6a2"},"2f4bf8b05e2a09e17b704f04c27b146510668351f660fb3f650f50b597d3d68b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\ndomain_name_configuration_property = apigatewayv2.CfnDomainName.DomainNameConfigurationProperty(\n    certificate_arn=\"certificateArn\",\n    certificate_name=\"certificateName\",\n    endpoint_type=\"endpointType\",\n    ownership_verification_certificate_arn=\"ownershipVerificationCertificateArn\",\n    security_policy=\"securityPolicy\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar domainNameConfigurationProperty = new DomainNameConfigurationProperty {\n    CertificateArn = \"certificateArn\",\n    CertificateName = \"certificateName\",\n    EndpointType = \"endpointType\",\n    OwnershipVerificationCertificateArn = \"ownershipVerificationCertificateArn\",\n    SecurityPolicy = \"securityPolicy\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nDomainNameConfigurationProperty domainNameConfigurationProperty = DomainNameConfigurationProperty.builder()\n        .certificateArn(\"certificateArn\")\n        .certificateName(\"certificateName\")\n        .endpointType(\"endpointType\")\n        .ownershipVerificationCertificateArn(\"ownershipVerificationCertificateArn\")\n        .securityPolicy(\"securityPolicy\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\ndomainNameConfigurationProperty := &DomainNameConfigurationProperty{\n\tCertificateArn: jsii.String(\"certificateArn\"),\n\tCertificateName: jsii.String(\"certificateName\"),\n\tEndpointType: jsii.String(\"endpointType\"),\n\tOwnershipVerificationCertificateArn: jsii.String(\"ownershipVerificationCertificateArn\"),\n\tSecurityPolicy: jsii.String(\"securityPolicy\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst domainNameConfigurationProperty: apigatewayv2.CfnDomainName.DomainNameConfigurationProperty = {\n  certificateArn: 'certificateArn',\n  certificateName: 'certificateName',\n  endpointType: 'endpointType',\n  ownershipVerificationCertificateArn: 'ownershipVerificationCertificateArn',\n  securityPolicy: 'securityPolicy',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnDomainName.DomainNameConfigurationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnDomainName.DomainNameConfigurationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst domainNameConfigurationProperty: apigatewayv2.CfnDomainName.DomainNameConfigurationProperty = {\n  certificateArn: 'certificateArn',\n  certificateName: 'certificateName',\n  endpointType: 'endpointType',\n  ownershipVerificationCertificateArn: 'ownershipVerificationCertificateArn',\n  securityPolicy: 'securityPolicy',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":10,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"30bb149bd66cc6a938b0d07785e2d3392f64aacf7ed0d5fb7e2d109ec8d5ffda"},"84b2ec8e8df1a31f4c8f389729c2d7a7114e355d55d2a70e139637fd6218f3bb":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nmutual_tls_authentication_property = apigatewayv2.CfnDomainName.MutualTlsAuthenticationProperty(\n    truststore_uri=\"truststoreUri\",\n    truststore_version=\"truststoreVersion\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar mutualTlsAuthenticationProperty = new MutualTlsAuthenticationProperty {\n    TruststoreUri = \"truststoreUri\",\n    TruststoreVersion = \"truststoreVersion\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nMutualTlsAuthenticationProperty mutualTlsAuthenticationProperty = MutualTlsAuthenticationProperty.builder()\n        .truststoreUri(\"truststoreUri\")\n        .truststoreVersion(\"truststoreVersion\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nmutualTlsAuthenticationProperty := &MutualTlsAuthenticationProperty{\n\tTruststoreUri: jsii.String(\"truststoreUri\"),\n\tTruststoreVersion: jsii.String(\"truststoreVersion\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst mutualTlsAuthenticationProperty: apigatewayv2.CfnDomainName.MutualTlsAuthenticationProperty = {\n  truststoreUri: 'truststoreUri',\n  truststoreVersion: 'truststoreVersion',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnDomainName.MutualTlsAuthenticationProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnDomainName.MutualTlsAuthenticationProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst mutualTlsAuthenticationProperty: apigatewayv2.CfnDomainName.MutualTlsAuthenticationProperty = {\n  truststoreUri: 'truststoreUri',\n  truststoreVersion: 'truststoreVersion',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"4546cd5e0800a4a13986377af9d3eae71c13afc171a28f14ebd4141733823c0f"},"a7bd67da9913e025e68241a494f67729d19594d3c3705858119e87622ad71eb9":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# tags: Any\n\ncfn_domain_name_props = apigatewayv2.CfnDomainNameProps(\n    domain_name=\"domainName\",\n\n    # the properties below are optional\n    domain_name_configurations=[apigatewayv2.CfnDomainName.DomainNameConfigurationProperty(\n        certificate_arn=\"certificateArn\",\n        certificate_name=\"certificateName\",\n        endpoint_type=\"endpointType\",\n        ownership_verification_certificate_arn=\"ownershipVerificationCertificateArn\",\n        security_policy=\"securityPolicy\"\n    )],\n    mutual_tls_authentication=apigatewayv2.CfnDomainName.MutualTlsAuthenticationProperty(\n        truststore_uri=\"truststoreUri\",\n        truststore_version=\"truststoreVersion\"\n    ),\n    tags=tags\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar tags;\n\nvar cfnDomainNameProps = new CfnDomainNameProps {\n    DomainName = \"domainName\",\n\n    // the properties below are optional\n    DomainNameConfigurations = new [] { new DomainNameConfigurationProperty {\n        CertificateArn = \"certificateArn\",\n        CertificateName = \"certificateName\",\n        EndpointType = \"endpointType\",\n        OwnershipVerificationCertificateArn = \"ownershipVerificationCertificateArn\",\n        SecurityPolicy = \"securityPolicy\"\n    } },\n    MutualTlsAuthentication = new MutualTlsAuthenticationProperty {\n        TruststoreUri = \"truststoreUri\",\n        TruststoreVersion = \"truststoreVersion\"\n    },\n    Tags = tags\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject tags;\n\nCfnDomainNameProps cfnDomainNameProps = CfnDomainNameProps.builder()\n        .domainName(\"domainName\")\n\n        // the properties below are optional\n        .domainNameConfigurations(List.of(DomainNameConfigurationProperty.builder()\n                .certificateArn(\"certificateArn\")\n                .certificateName(\"certificateName\")\n                .endpointType(\"endpointType\")\n                .ownershipVerificationCertificateArn(\"ownershipVerificationCertificateArn\")\n                .securityPolicy(\"securityPolicy\")\n                .build()))\n        .mutualTlsAuthentication(MutualTlsAuthenticationProperty.builder()\n                .truststoreUri(\"truststoreUri\")\n                .truststoreVersion(\"truststoreVersion\")\n                .build())\n        .tags(tags)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar tags interface{}\n\ncfnDomainNameProps := &CfnDomainNameProps{\n\tDomainName: jsii.String(\"domainName\"),\n\n\t// the properties below are optional\n\tDomainNameConfigurations: []interface{}{\n\t\t&DomainNameConfigurationProperty{\n\t\t\tCertificateArn: jsii.String(\"certificateArn\"),\n\t\t\tCertificateName: jsii.String(\"certificateName\"),\n\t\t\tEndpointType: jsii.String(\"endpointType\"),\n\t\t\tOwnershipVerificationCertificateArn: jsii.String(\"ownershipVerificationCertificateArn\"),\n\t\t\tSecurityPolicy: jsii.String(\"securityPolicy\"),\n\t\t},\n\t},\n\tMutualTlsAuthentication: &MutualTlsAuthenticationProperty{\n\t\tTruststoreUri: jsii.String(\"truststoreUri\"),\n\t\tTruststoreVersion: jsii.String(\"truststoreVersion\"),\n\t},\n\tTags: tags,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const tags: any;\nconst cfnDomainNameProps: apigatewayv2.CfnDomainNameProps = {\n  domainName: 'domainName',\n\n  // the properties below are optional\n  domainNameConfigurations: [{\n    certificateArn: 'certificateArn',\n    certificateName: 'certificateName',\n    endpointType: 'endpointType',\n    ownershipVerificationCertificateArn: 'ownershipVerificationCertificateArn',\n    securityPolicy: 'securityPolicy',\n  }],\n  mutualTlsAuthentication: {\n    truststoreUri: 'truststoreUri',\n    truststoreVersion: 'truststoreVersion',\n  },\n  tags: tags,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnDomainNameProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnDomainNameProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDomainNameProps: apigatewayv2.CfnDomainNameProps = {\n  domainName: 'domainName',\n\n  // the properties below are optional\n  domainNameConfigurations: [{\n    certificateArn: 'certificateArn',\n    certificateName: 'certificateName',\n    endpointType: 'endpointType',\n    ownershipVerificationCertificateArn: 'ownershipVerificationCertificateArn',\n    securityPolicy: 'securityPolicy',\n  }],\n  mutualTlsAuthentication: {\n    truststoreUri: 'truststoreUri',\n    truststoreVersion: 'truststoreVersion',\n  },\n  tags: tags,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":9,"75":17,"125":1,"130":1,"153":1,"169":1,"192":1,"193":3,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":11,"290":1},"fqnsFingerprint":"6c2864d66f37434eddc2c9a3bb171fcdef5ba6ec9d43e6d305d48a633736af56"},"2947794a51e361a46b27068d15eea1dc043c1ef0a37770737014ba5f14c2c46e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# request_parameters: Any\n# request_templates: Any\n# response_parameters: Any\n\ncfn_integration = apigatewayv2.CfnIntegration(self, \"MyCfnIntegration\",\n    api_id=\"apiId\",\n    integration_type=\"integrationType\",\n\n    # the properties below are optional\n    connection_id=\"connectionId\",\n    connection_type=\"connectionType\",\n    content_handling_strategy=\"contentHandlingStrategy\",\n    credentials_arn=\"credentialsArn\",\n    description=\"description\",\n    integration_method=\"integrationMethod\",\n    integration_subtype=\"integrationSubtype\",\n    integration_uri=\"integrationUri\",\n    passthrough_behavior=\"passthroughBehavior\",\n    payload_format_version=\"payloadFormatVersion\",\n    request_parameters=request_parameters,\n    request_templates=request_templates,\n    response_parameters=response_parameters,\n    template_selection_expression=\"templateSelectionExpression\",\n    timeout_in_millis=123,\n    tls_config=apigatewayv2.CfnIntegration.TlsConfigProperty(\n        server_name_to_verify=\"serverNameToVerify\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar requestParameters;\nvar requestTemplates;\nvar responseParameters;\n\nvar cfnIntegration = new CfnIntegration(this, \"MyCfnIntegration\", new CfnIntegrationProps {\n    ApiId = \"apiId\",\n    IntegrationType = \"integrationType\",\n\n    // the properties below are optional\n    ConnectionId = \"connectionId\",\n    ConnectionType = \"connectionType\",\n    ContentHandlingStrategy = \"contentHandlingStrategy\",\n    CredentialsArn = \"credentialsArn\",\n    Description = \"description\",\n    IntegrationMethod = \"integrationMethod\",\n    IntegrationSubtype = \"integrationSubtype\",\n    IntegrationUri = \"integrationUri\",\n    PassthroughBehavior = \"passthroughBehavior\",\n    PayloadFormatVersion = \"payloadFormatVersion\",\n    RequestParameters = requestParameters,\n    RequestTemplates = requestTemplates,\n    ResponseParameters = responseParameters,\n    TemplateSelectionExpression = \"templateSelectionExpression\",\n    TimeoutInMillis = 123,\n    TlsConfig = new TlsConfigProperty {\n        ServerNameToVerify = \"serverNameToVerify\"\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject requestParameters;\nObject requestTemplates;\nObject responseParameters;\n\nCfnIntegration cfnIntegration = CfnIntegration.Builder.create(this, \"MyCfnIntegration\")\n        .apiId(\"apiId\")\n        .integrationType(\"integrationType\")\n\n        // the properties below are optional\n        .connectionId(\"connectionId\")\n        .connectionType(\"connectionType\")\n        .contentHandlingStrategy(\"contentHandlingStrategy\")\n        .credentialsArn(\"credentialsArn\")\n        .description(\"description\")\n        .integrationMethod(\"integrationMethod\")\n        .integrationSubtype(\"integrationSubtype\")\n        .integrationUri(\"integrationUri\")\n        .passthroughBehavior(\"passthroughBehavior\")\n        .payloadFormatVersion(\"payloadFormatVersion\")\n        .requestParameters(requestParameters)\n        .requestTemplates(requestTemplates)\n        .responseParameters(responseParameters)\n        .templateSelectionExpression(\"templateSelectionExpression\")\n        .timeoutInMillis(123)\n        .tlsConfig(TlsConfigProperty.builder()\n                .serverNameToVerify(\"serverNameToVerify\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar requestParameters interface{}\nvar requestTemplates interface{}\nvar responseParameters interface{}\n\ncfnIntegration := apigatewayv2.NewCfnIntegration(this, jsii.String(\"MyCfnIntegration\"), &CfnIntegrationProps{\n\tApiId: jsii.String(\"apiId\"),\n\tIntegrationType: jsii.String(\"integrationType\"),\n\n\t// the properties below are optional\n\tConnectionId: jsii.String(\"connectionId\"),\n\tConnectionType: jsii.String(\"connectionType\"),\n\tContentHandlingStrategy: jsii.String(\"contentHandlingStrategy\"),\n\tCredentialsArn: jsii.String(\"credentialsArn\"),\n\tDescription: jsii.String(\"description\"),\n\tIntegrationMethod: jsii.String(\"integrationMethod\"),\n\tIntegrationSubtype: jsii.String(\"integrationSubtype\"),\n\tIntegrationUri: jsii.String(\"integrationUri\"),\n\tPassthroughBehavior: jsii.String(\"passthroughBehavior\"),\n\tPayloadFormatVersion: jsii.String(\"payloadFormatVersion\"),\n\tRequestParameters: requestParameters,\n\tRequestTemplates: requestTemplates,\n\tResponseParameters: responseParameters,\n\tTemplateSelectionExpression: jsii.String(\"templateSelectionExpression\"),\n\tTimeoutInMillis: jsii.Number(123),\n\tTlsConfig: &TlsConfigProperty{\n\t\tServerNameToVerify: jsii.String(\"serverNameToVerify\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const requestParameters: any;\ndeclare const requestTemplates: any;\ndeclare const responseParameters: any;\nconst cfnIntegration = new apigatewayv2.CfnIntegration(this, 'MyCfnIntegration', {\n  apiId: 'apiId',\n  integrationType: 'integrationType',\n\n  // the properties below are optional\n  connectionId: 'connectionId',\n  connectionType: 'connectionType',\n  contentHandlingStrategy: 'contentHandlingStrategy',\n  credentialsArn: 'credentialsArn',\n  description: 'description',\n  integrationMethod: 'integrationMethod',\n  integrationSubtype: 'integrationSubtype',\n  integrationUri: 'integrationUri',\n  passthroughBehavior: 'passthroughBehavior',\n  payloadFormatVersion: 'payloadFormatVersion',\n  requestParameters: requestParameters,\n  requestTemplates: requestTemplates,\n  responseParameters: responseParameters,\n  templateSelectionExpression: 'templateSelectionExpression',\n  timeoutInMillis: 123,\n  tlsConfig: {\n    serverNameToVerify: 'serverNameToVerify',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnIntegration"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnIntegration","@aws-cdk/aws-apigatewayv2.CfnIntegrationProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const requestParameters: any;\ndeclare const requestTemplates: any;\ndeclare const responseParameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnIntegration = new apigatewayv2.CfnIntegration(this, 'MyCfnIntegration', {\n  apiId: 'apiId',\n  integrationType: 'integrationType',\n\n  // the properties below are optional\n  connectionId: 'connectionId',\n  connectionType: 'connectionType',\n  contentHandlingStrategy: 'contentHandlingStrategy',\n  credentialsArn: 'credentialsArn',\n  description: 'description',\n  integrationMethod: 'integrationMethod',\n  integrationSubtype: 'integrationSubtype',\n  integrationUri: 'integrationUri',\n  passthroughBehavior: 'passthroughBehavior',\n  payloadFormatVersion: 'payloadFormatVersion',\n  requestParameters: requestParameters,\n  requestTemplates: requestTemplates,\n  responseParameters: responseParameters,\n  templateSelectionExpression: 'templateSelectionExpression',\n  timeoutInMillis: 123,\n  tlsConfig: {\n    serverNameToVerify: 'serverNameToVerify',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":16,"75":29,"104":1,"125":3,"130":3,"193":2,"194":1,"197":1,"225":4,"242":4,"243":4,"254":1,"255":1,"256":1,"281":19,"290":1},"fqnsFingerprint":"b795ef16d8c4ab8818d7f106e98d01baf3a74da54ae92eebb3dbb99b82cf30a4"},"234f64bfd520b0ee36c5aacf8a608c2acc96051e3a2e5b832bf5b967b86a4aad":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nresponse_parameter_list_property = apigatewayv2.CfnIntegration.ResponseParameterListProperty(\n    response_parameters=[apigatewayv2.CfnIntegration.ResponseParameterProperty(\n        destination=\"destination\",\n        source=\"source\"\n    )]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar responseParameterListProperty = new ResponseParameterListProperty {\n    ResponseParameters = new [] { new ResponseParameterProperty {\n        Destination = \"destination\",\n        Source = \"source\"\n    } }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nResponseParameterListProperty responseParameterListProperty = ResponseParameterListProperty.builder()\n        .responseParameters(List.of(ResponseParameterProperty.builder()\n                .destination(\"destination\")\n                .source(\"source\")\n                .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nresponseParameterListProperty := &ResponseParameterListProperty{\n\tResponseParameters: []interface{}{\n\t\t&ResponseParameterProperty{\n\t\t\tDestination: jsii.String(\"destination\"),\n\t\t\tSource: jsii.String(\"source\"),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst responseParameterListProperty: apigatewayv2.CfnIntegration.ResponseParameterListProperty = {\n  responseParameters: [{\n    destination: 'destination',\n    source: 'source',\n  }],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnIntegration.ResponseParameterListProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnIntegration.ResponseParameterListProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst responseParameterListProperty: apigatewayv2.CfnIntegration.ResponseParameterListProperty = {\n  responseParameters: [{\n    destination: 'destination',\n    source: 'source',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":8,"153":2,"169":1,"192":1,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"6260257c221bb96782a69b5625bec7ba6d22a3424b54503fc75fa8abb123536f"},"53bac90ede107b639486db6c8d59e8d5ee68077c24fa0d0333d9d2a7235f38b0":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nresponse_parameter_property = apigatewayv2.CfnIntegration.ResponseParameterProperty(\n    destination=\"destination\",\n    source=\"source\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar responseParameterProperty = new ResponseParameterProperty {\n    Destination = \"destination\",\n    Source = \"source\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nResponseParameterProperty responseParameterProperty = ResponseParameterProperty.builder()\n        .destination(\"destination\")\n        .source(\"source\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nresponseParameterProperty := &ResponseParameterProperty{\n\tDestination: jsii.String(\"destination\"),\n\tSource: jsii.String(\"source\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst responseParameterProperty: apigatewayv2.CfnIntegration.ResponseParameterProperty = {\n  destination: 'destination',\n  source: 'source',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnIntegration.ResponseParameterProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnIntegration.ResponseParameterProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst responseParameterProperty: apigatewayv2.CfnIntegration.ResponseParameterProperty = {\n  destination: 'destination',\n  source: 'source',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"2dba7e440e6412807d5a3998e5498ba217236a64eec00204a0d96f04b2982864"},"9a314d6ac95b8cb54717aa1247d582881da03453f3ff7c28ce1da72c91780243":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\ntls_config_property = apigatewayv2.CfnIntegration.TlsConfigProperty(\n    server_name_to_verify=\"serverNameToVerify\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar tlsConfigProperty = new TlsConfigProperty {\n    ServerNameToVerify = \"serverNameToVerify\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nTlsConfigProperty tlsConfigProperty = TlsConfigProperty.builder()\n        .serverNameToVerify(\"serverNameToVerify\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\ntlsConfigProperty := &TlsConfigProperty{\n\tServerNameToVerify: jsii.String(\"serverNameToVerify\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst tlsConfigProperty: apigatewayv2.CfnIntegration.TlsConfigProperty = {\n  serverNameToVerify: 'serverNameToVerify',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnIntegration.TlsConfigProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnIntegration.TlsConfigProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tlsConfigProperty: apigatewayv2.CfnIntegration.TlsConfigProperty = {\n  serverNameToVerify: 'serverNameToVerify',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":6,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"bf0bdc5a84805dabf1c3feeaffa97da70c00b1f241830f4a71aa4c5eb31f96c6"},"83886590025da47e3608a49263f39802bc06de25dafaed1b9e0ada0f161682e2":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# request_parameters: Any\n# request_templates: Any\n# response_parameters: Any\n\ncfn_integration_props = apigatewayv2.CfnIntegrationProps(\n    api_id=\"apiId\",\n    integration_type=\"integrationType\",\n\n    # the properties below are optional\n    connection_id=\"connectionId\",\n    connection_type=\"connectionType\",\n    content_handling_strategy=\"contentHandlingStrategy\",\n    credentials_arn=\"credentialsArn\",\n    description=\"description\",\n    integration_method=\"integrationMethod\",\n    integration_subtype=\"integrationSubtype\",\n    integration_uri=\"integrationUri\",\n    passthrough_behavior=\"passthroughBehavior\",\n    payload_format_version=\"payloadFormatVersion\",\n    request_parameters=request_parameters,\n    request_templates=request_templates,\n    response_parameters=response_parameters,\n    template_selection_expression=\"templateSelectionExpression\",\n    timeout_in_millis=123,\n    tls_config=apigatewayv2.CfnIntegration.TlsConfigProperty(\n        server_name_to_verify=\"serverNameToVerify\"\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar requestParameters;\nvar requestTemplates;\nvar responseParameters;\n\nvar cfnIntegrationProps = new CfnIntegrationProps {\n    ApiId = \"apiId\",\n    IntegrationType = \"integrationType\",\n\n    // the properties below are optional\n    ConnectionId = \"connectionId\",\n    ConnectionType = \"connectionType\",\n    ContentHandlingStrategy = \"contentHandlingStrategy\",\n    CredentialsArn = \"credentialsArn\",\n    Description = \"description\",\n    IntegrationMethod = \"integrationMethod\",\n    IntegrationSubtype = \"integrationSubtype\",\n    IntegrationUri = \"integrationUri\",\n    PassthroughBehavior = \"passthroughBehavior\",\n    PayloadFormatVersion = \"payloadFormatVersion\",\n    RequestParameters = requestParameters,\n    RequestTemplates = requestTemplates,\n    ResponseParameters = responseParameters,\n    TemplateSelectionExpression = \"templateSelectionExpression\",\n    TimeoutInMillis = 123,\n    TlsConfig = new TlsConfigProperty {\n        ServerNameToVerify = \"serverNameToVerify\"\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject requestParameters;\nObject requestTemplates;\nObject responseParameters;\n\nCfnIntegrationProps cfnIntegrationProps = CfnIntegrationProps.builder()\n        .apiId(\"apiId\")\n        .integrationType(\"integrationType\")\n\n        // the properties below are optional\n        .connectionId(\"connectionId\")\n        .connectionType(\"connectionType\")\n        .contentHandlingStrategy(\"contentHandlingStrategy\")\n        .credentialsArn(\"credentialsArn\")\n        .description(\"description\")\n        .integrationMethod(\"integrationMethod\")\n        .integrationSubtype(\"integrationSubtype\")\n        .integrationUri(\"integrationUri\")\n        .passthroughBehavior(\"passthroughBehavior\")\n        .payloadFormatVersion(\"payloadFormatVersion\")\n        .requestParameters(requestParameters)\n        .requestTemplates(requestTemplates)\n        .responseParameters(responseParameters)\n        .templateSelectionExpression(\"templateSelectionExpression\")\n        .timeoutInMillis(123)\n        .tlsConfig(TlsConfigProperty.builder()\n                .serverNameToVerify(\"serverNameToVerify\")\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar requestParameters interface{}\nvar requestTemplates interface{}\nvar responseParameters interface{}\n\ncfnIntegrationProps := &CfnIntegrationProps{\n\tApiId: jsii.String(\"apiId\"),\n\tIntegrationType: jsii.String(\"integrationType\"),\n\n\t// the properties below are optional\n\tConnectionId: jsii.String(\"connectionId\"),\n\tConnectionType: jsii.String(\"connectionType\"),\n\tContentHandlingStrategy: jsii.String(\"contentHandlingStrategy\"),\n\tCredentialsArn: jsii.String(\"credentialsArn\"),\n\tDescription: jsii.String(\"description\"),\n\tIntegrationMethod: jsii.String(\"integrationMethod\"),\n\tIntegrationSubtype: jsii.String(\"integrationSubtype\"),\n\tIntegrationUri: jsii.String(\"integrationUri\"),\n\tPassthroughBehavior: jsii.String(\"passthroughBehavior\"),\n\tPayloadFormatVersion: jsii.String(\"payloadFormatVersion\"),\n\tRequestParameters: requestParameters,\n\tRequestTemplates: requestTemplates,\n\tResponseParameters: responseParameters,\n\tTemplateSelectionExpression: jsii.String(\"templateSelectionExpression\"),\n\tTimeoutInMillis: jsii.Number(123),\n\tTlsConfig: &TlsConfigProperty{\n\t\tServerNameToVerify: jsii.String(\"serverNameToVerify\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const requestParameters: any;\ndeclare const requestTemplates: any;\ndeclare const responseParameters: any;\nconst cfnIntegrationProps: apigatewayv2.CfnIntegrationProps = {\n  apiId: 'apiId',\n  integrationType: 'integrationType',\n\n  // the properties below are optional\n  connectionId: 'connectionId',\n  connectionType: 'connectionType',\n  contentHandlingStrategy: 'contentHandlingStrategy',\n  credentialsArn: 'credentialsArn',\n  description: 'description',\n  integrationMethod: 'integrationMethod',\n  integrationSubtype: 'integrationSubtype',\n  integrationUri: 'integrationUri',\n  passthroughBehavior: 'passthroughBehavior',\n  payloadFormatVersion: 'payloadFormatVersion',\n  requestParameters: requestParameters,\n  requestTemplates: requestTemplates,\n  responseParameters: responseParameters,\n  templateSelectionExpression: 'templateSelectionExpression',\n  timeoutInMillis: 123,\n  tlsConfig: {\n    serverNameToVerify: 'serverNameToVerify',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnIntegrationProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnIntegrationProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const requestParameters: any;\ndeclare const requestTemplates: any;\ndeclare const responseParameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnIntegrationProps: apigatewayv2.CfnIntegrationProps = {\n  apiId: 'apiId',\n  integrationType: 'integrationType',\n\n  // the properties below are optional\n  connectionId: 'connectionId',\n  connectionType: 'connectionType',\n  contentHandlingStrategy: 'contentHandlingStrategy',\n  credentialsArn: 'credentialsArn',\n  description: 'description',\n  integrationMethod: 'integrationMethod',\n  integrationSubtype: 'integrationSubtype',\n  integrationUri: 'integrationUri',\n  passthroughBehavior: 'passthroughBehavior',\n  payloadFormatVersion: 'payloadFormatVersion',\n  requestParameters: requestParameters,\n  requestTemplates: requestTemplates,\n  responseParameters: responseParameters,\n  templateSelectionExpression: 'templateSelectionExpression',\n  timeoutInMillis: 123,\n  tlsConfig: {\n    serverNameToVerify: 'serverNameToVerify',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":15,"75":29,"125":3,"130":3,"153":1,"169":1,"193":2,"225":4,"242":4,"243":4,"254":1,"255":1,"256":1,"281":19,"290":1},"fqnsFingerprint":"ee77ad76e77899d6e5a0da39309af6cef1b6e457aaf12eb960e4d1140dc1dbc5"},"3cf3225e739781cd105c8d75e8776b64c6312b8b16af9449bce63a60f2ecc4d6":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# response_parameters: Any\n# response_templates: Any\n\ncfn_integration_response = apigatewayv2.CfnIntegrationResponse(self, \"MyCfnIntegrationResponse\",\n    api_id=\"apiId\",\n    integration_id=\"integrationId\",\n    integration_response_key=\"integrationResponseKey\",\n\n    # the properties below are optional\n    content_handling_strategy=\"contentHandlingStrategy\",\n    response_parameters=response_parameters,\n    response_templates=response_templates,\n    template_selection_expression=\"templateSelectionExpression\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar responseParameters;\nvar responseTemplates;\n\nvar cfnIntegrationResponse = new CfnIntegrationResponse(this, \"MyCfnIntegrationResponse\", new CfnIntegrationResponseProps {\n    ApiId = \"apiId\",\n    IntegrationId = \"integrationId\",\n    IntegrationResponseKey = \"integrationResponseKey\",\n\n    // the properties below are optional\n    ContentHandlingStrategy = \"contentHandlingStrategy\",\n    ResponseParameters = responseParameters,\n    ResponseTemplates = responseTemplates,\n    TemplateSelectionExpression = \"templateSelectionExpression\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject responseParameters;\nObject responseTemplates;\n\nCfnIntegrationResponse cfnIntegrationResponse = CfnIntegrationResponse.Builder.create(this, \"MyCfnIntegrationResponse\")\n        .apiId(\"apiId\")\n        .integrationId(\"integrationId\")\n        .integrationResponseKey(\"integrationResponseKey\")\n\n        // the properties below are optional\n        .contentHandlingStrategy(\"contentHandlingStrategy\")\n        .responseParameters(responseParameters)\n        .responseTemplates(responseTemplates)\n        .templateSelectionExpression(\"templateSelectionExpression\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar responseParameters interface{}\nvar responseTemplates interface{}\n\ncfnIntegrationResponse := apigatewayv2.NewCfnIntegrationResponse(this, jsii.String(\"MyCfnIntegrationResponse\"), &CfnIntegrationResponseProps{\n\tApiId: jsii.String(\"apiId\"),\n\tIntegrationId: jsii.String(\"integrationId\"),\n\tIntegrationResponseKey: jsii.String(\"integrationResponseKey\"),\n\n\t// the properties below are optional\n\tContentHandlingStrategy: jsii.String(\"contentHandlingStrategy\"),\n\tResponseParameters: responseParameters,\n\tResponseTemplates: responseTemplates,\n\tTemplateSelectionExpression: jsii.String(\"templateSelectionExpression\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const responseParameters: any;\ndeclare const responseTemplates: any;\nconst cfnIntegrationResponse = new apigatewayv2.CfnIntegrationResponse(this, 'MyCfnIntegrationResponse', {\n  apiId: 'apiId',\n  integrationId: 'integrationId',\n  integrationResponseKey: 'integrationResponseKey',\n\n  // the properties below are optional\n  contentHandlingStrategy: 'contentHandlingStrategy',\n  responseParameters: responseParameters,\n  responseTemplates: responseTemplates,\n  templateSelectionExpression: 'templateSelectionExpression',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnIntegrationResponse"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnIntegrationResponse","@aws-cdk/aws-apigatewayv2.CfnIntegrationResponseProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const responseParameters: any;\ndeclare const responseTemplates: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnIntegrationResponse = new apigatewayv2.CfnIntegrationResponse(this, 'MyCfnIntegrationResponse', {\n  apiId: 'apiId',\n  integrationId: 'integrationId',\n  integrationResponseKey: 'integrationResponseKey',\n\n  // the properties below are optional\n  contentHandlingStrategy: 'contentHandlingStrategy',\n  responseParameters: responseParameters,\n  responseTemplates: responseTemplates,\n  templateSelectionExpression: 'templateSelectionExpression',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":7,"75":15,"104":1,"125":2,"130":2,"193":1,"194":1,"197":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":7,"290":1},"fqnsFingerprint":"7c9a9093a70a9fce2baf86129fee8b8fe9e35b909482ad5d77f09d3e5fbc5186"},"002f8d81309071a8873ddcdd50c9e10ecac27b12c46f36cccb5b45ff545053ce":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# response_parameters: Any\n# response_templates: Any\n\ncfn_integration_response_props = apigatewayv2.CfnIntegrationResponseProps(\n    api_id=\"apiId\",\n    integration_id=\"integrationId\",\n    integration_response_key=\"integrationResponseKey\",\n\n    # the properties below are optional\n    content_handling_strategy=\"contentHandlingStrategy\",\n    response_parameters=response_parameters,\n    response_templates=response_templates,\n    template_selection_expression=\"templateSelectionExpression\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar responseParameters;\nvar responseTemplates;\n\nvar cfnIntegrationResponseProps = new CfnIntegrationResponseProps {\n    ApiId = \"apiId\",\n    IntegrationId = \"integrationId\",\n    IntegrationResponseKey = \"integrationResponseKey\",\n\n    // the properties below are optional\n    ContentHandlingStrategy = \"contentHandlingStrategy\",\n    ResponseParameters = responseParameters,\n    ResponseTemplates = responseTemplates,\n    TemplateSelectionExpression = \"templateSelectionExpression\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject responseParameters;\nObject responseTemplates;\n\nCfnIntegrationResponseProps cfnIntegrationResponseProps = CfnIntegrationResponseProps.builder()\n        .apiId(\"apiId\")\n        .integrationId(\"integrationId\")\n        .integrationResponseKey(\"integrationResponseKey\")\n\n        // the properties below are optional\n        .contentHandlingStrategy(\"contentHandlingStrategy\")\n        .responseParameters(responseParameters)\n        .responseTemplates(responseTemplates)\n        .templateSelectionExpression(\"templateSelectionExpression\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar responseParameters interface{}\nvar responseTemplates interface{}\n\ncfnIntegrationResponseProps := &CfnIntegrationResponseProps{\n\tApiId: jsii.String(\"apiId\"),\n\tIntegrationId: jsii.String(\"integrationId\"),\n\tIntegrationResponseKey: jsii.String(\"integrationResponseKey\"),\n\n\t// the properties below are optional\n\tContentHandlingStrategy: jsii.String(\"contentHandlingStrategy\"),\n\tResponseParameters: responseParameters,\n\tResponseTemplates: responseTemplates,\n\tTemplateSelectionExpression: jsii.String(\"templateSelectionExpression\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const responseParameters: any;\ndeclare const responseTemplates: any;\nconst cfnIntegrationResponseProps: apigatewayv2.CfnIntegrationResponseProps = {\n  apiId: 'apiId',\n  integrationId: 'integrationId',\n  integrationResponseKey: 'integrationResponseKey',\n\n  // the properties below are optional\n  contentHandlingStrategy: 'contentHandlingStrategy',\n  responseParameters: responseParameters,\n  responseTemplates: responseTemplates,\n  templateSelectionExpression: 'templateSelectionExpression',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnIntegrationResponseProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnIntegrationResponseProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const responseParameters: any;\ndeclare const responseTemplates: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnIntegrationResponseProps: apigatewayv2.CfnIntegrationResponseProps = {\n  apiId: 'apiId',\n  integrationId: 'integrationId',\n  integrationResponseKey: 'integrationResponseKey',\n\n  // the properties below are optional\n  contentHandlingStrategy: 'contentHandlingStrategy',\n  responseParameters: responseParameters,\n  responseTemplates: responseTemplates,\n  templateSelectionExpression: 'templateSelectionExpression',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":15,"125":2,"130":2,"153":1,"169":1,"193":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":7,"290":1},"fqnsFingerprint":"94e78d7d014e837c55f0af1bbb65aa6403c42b6bdf32abd7b31afce82194a3a9"},"4a2d06bdb711822378c41f0a74a319abba4461401292a3ec93bbcb7e9427504c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# schema: Any\n\ncfn_model = apigatewayv2.CfnModel(self, \"MyCfnModel\",\n    api_id=\"apiId\",\n    name=\"name\",\n    schema=schema,\n\n    # the properties below are optional\n    content_type=\"contentType\",\n    description=\"description\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar schema;\n\nvar cfnModel = new CfnModel(this, \"MyCfnModel\", new CfnModelProps {\n    ApiId = \"apiId\",\n    Name = \"name\",\n    Schema = schema,\n\n    // the properties below are optional\n    ContentType = \"contentType\",\n    Description = \"description\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject schema;\n\nCfnModel cfnModel = CfnModel.Builder.create(this, \"MyCfnModel\")\n        .apiId(\"apiId\")\n        .name(\"name\")\n        .schema(schema)\n\n        // the properties below are optional\n        .contentType(\"contentType\")\n        .description(\"description\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar schema interface{}\n\ncfnModel := apigatewayv2.NewCfnModel(this, jsii.String(\"MyCfnModel\"), &CfnModelProps{\n\tApiId: jsii.String(\"apiId\"),\n\tName: jsii.String(\"name\"),\n\tSchema: schema,\n\n\t// the properties below are optional\n\tContentType: jsii.String(\"contentType\"),\n\tDescription: jsii.String(\"description\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const schema: any;\nconst cfnModel = new apigatewayv2.CfnModel(this, 'MyCfnModel', {\n  apiId: 'apiId',\n  name: 'name',\n  schema: schema,\n\n  // the properties below are optional\n  contentType: 'contentType',\n  description: 'description',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnModel"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnModel","@aws-cdk/aws-apigatewayv2.CfnModelProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const schema: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnModel = new apigatewayv2.CfnModel(this, 'MyCfnModel', {\n  apiId: 'apiId',\n  name: 'name',\n  schema: schema,\n\n  // the properties below are optional\n  contentType: 'contentType',\n  description: 'description',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":11,"104":1,"125":1,"130":1,"193":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"787b8eb955526c3fc27fee9fa0bcb225c151b89c54bfa5c0998605a8a74b049f"},"720f36f2ef1a9ac80dfaf12a83d1095da03e9689c35789289b097d7ec9f8bd5e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# schema: Any\n\ncfn_model_props = apigatewayv2.CfnModelProps(\n    api_id=\"apiId\",\n    name=\"name\",\n    schema=schema,\n\n    # the properties below are optional\n    content_type=\"contentType\",\n    description=\"description\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar schema;\n\nvar cfnModelProps = new CfnModelProps {\n    ApiId = \"apiId\",\n    Name = \"name\",\n    Schema = schema,\n\n    // the properties below are optional\n    ContentType = \"contentType\",\n    Description = \"description\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject schema;\n\nCfnModelProps cfnModelProps = CfnModelProps.builder()\n        .apiId(\"apiId\")\n        .name(\"name\")\n        .schema(schema)\n\n        // the properties below are optional\n        .contentType(\"contentType\")\n        .description(\"description\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar schema interface{}\n\ncfnModelProps := &CfnModelProps{\n\tApiId: jsii.String(\"apiId\"),\n\tName: jsii.String(\"name\"),\n\tSchema: schema,\n\n\t// the properties below are optional\n\tContentType: jsii.String(\"contentType\"),\n\tDescription: jsii.String(\"description\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const schema: any;\nconst cfnModelProps: apigatewayv2.CfnModelProps = {\n  apiId: 'apiId',\n  name: 'name',\n  schema: schema,\n\n  // the properties below are optional\n  contentType: 'contentType',\n  description: 'description',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnModelProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnModelProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const schema: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnModelProps: apigatewayv2.CfnModelProps = {\n  apiId: 'apiId',\n  name: 'name',\n  schema: schema,\n\n  // the properties below are optional\n  contentType: 'contentType',\n  description: 'description',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":11,"125":1,"130":1,"153":1,"169":1,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"ceae93d1c7a762204a82b073a5b256ec0151fa2161182fb1b6e5d9ec9bd37152"},"b6f84316aeef60ffaa5aab3311f8f2f9454d12f8964f172ff9f103d137ce0086":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# request_models: Any\n# request_parameters: Any\n\ncfn_route = apigatewayv2.CfnRoute(self, \"MyCfnRoute\",\n    api_id=\"apiId\",\n    route_key=\"routeKey\",\n\n    # the properties below are optional\n    api_key_required=False,\n    authorization_scopes=[\"authorizationScopes\"],\n    authorization_type=\"authorizationType\",\n    authorizer_id=\"authorizerId\",\n    model_selection_expression=\"modelSelectionExpression\",\n    operation_name=\"operationName\",\n    request_models=request_models,\n    request_parameters=request_parameters,\n    route_response_selection_expression=\"routeResponseSelectionExpression\",\n    target=\"target\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar requestModels;\nvar requestParameters;\n\nvar cfnRoute = new CfnRoute(this, \"MyCfnRoute\", new CfnRouteProps {\n    ApiId = \"apiId\",\n    RouteKey = \"routeKey\",\n\n    // the properties below are optional\n    ApiKeyRequired = false,\n    AuthorizationScopes = new [] { \"authorizationScopes\" },\n    AuthorizationType = \"authorizationType\",\n    AuthorizerId = \"authorizerId\",\n    ModelSelectionExpression = \"modelSelectionExpression\",\n    OperationName = \"operationName\",\n    RequestModels = requestModels,\n    RequestParameters = requestParameters,\n    RouteResponseSelectionExpression = \"routeResponseSelectionExpression\",\n    Target = \"target\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject requestModels;\nObject requestParameters;\n\nCfnRoute cfnRoute = CfnRoute.Builder.create(this, \"MyCfnRoute\")\n        .apiId(\"apiId\")\n        .routeKey(\"routeKey\")\n\n        // the properties below are optional\n        .apiKeyRequired(false)\n        .authorizationScopes(List.of(\"authorizationScopes\"))\n        .authorizationType(\"authorizationType\")\n        .authorizerId(\"authorizerId\")\n        .modelSelectionExpression(\"modelSelectionExpression\")\n        .operationName(\"operationName\")\n        .requestModels(requestModels)\n        .requestParameters(requestParameters)\n        .routeResponseSelectionExpression(\"routeResponseSelectionExpression\")\n        .target(\"target\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar requestModels interface{}\nvar requestParameters interface{}\n\ncfnRoute := apigatewayv2.NewCfnRoute(this, jsii.String(\"MyCfnRoute\"), &CfnRouteProps{\n\tApiId: jsii.String(\"apiId\"),\n\tRouteKey: jsii.String(\"routeKey\"),\n\n\t// the properties below are optional\n\tApiKeyRequired: jsii.Boolean(false),\n\tAuthorizationScopes: []*string{\n\t\tjsii.String(\"authorizationScopes\"),\n\t},\n\tAuthorizationType: jsii.String(\"authorizationType\"),\n\tAuthorizerId: jsii.String(\"authorizerId\"),\n\tModelSelectionExpression: jsii.String(\"modelSelectionExpression\"),\n\tOperationName: jsii.String(\"operationName\"),\n\tRequestModels: requestModels,\n\tRequestParameters: requestParameters,\n\tRouteResponseSelectionExpression: jsii.String(\"routeResponseSelectionExpression\"),\n\tTarget: jsii.String(\"target\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const requestModels: any;\ndeclare const requestParameters: any;\nconst cfnRoute = new apigatewayv2.CfnRoute(this, 'MyCfnRoute', {\n  apiId: 'apiId',\n  routeKey: 'routeKey',\n\n  // the properties below are optional\n  apiKeyRequired: false,\n  authorizationScopes: ['authorizationScopes'],\n  authorizationType: 'authorizationType',\n  authorizerId: 'authorizerId',\n  modelSelectionExpression: 'modelSelectionExpression',\n  operationName: 'operationName',\n  requestModels: requestModels,\n  requestParameters: requestParameters,\n  routeResponseSelectionExpression: 'routeResponseSelectionExpression',\n  target: 'target',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnRoute"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnRoute","@aws-cdk/aws-apigatewayv2.CfnRouteProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const requestModels: any;\ndeclare const requestParameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRoute = new apigatewayv2.CfnRoute(this, 'MyCfnRoute', {\n  apiId: 'apiId',\n  routeKey: 'routeKey',\n\n  // the properties below are optional\n  apiKeyRequired: false,\n  authorizationScopes: ['authorizationScopes'],\n  authorizationType: 'authorizationType',\n  authorizerId: 'authorizerId',\n  modelSelectionExpression: 'modelSelectionExpression',\n  operationName: 'operationName',\n  requestModels: requestModels,\n  requestParameters: requestParameters,\n  routeResponseSelectionExpression: 'routeResponseSelectionExpression',\n  target: 'target',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":11,"75":20,"91":1,"104":1,"125":2,"130":2,"192":1,"193":1,"194":1,"197":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":12,"290":1},"fqnsFingerprint":"b1aeec9045c38f459236bc374cb450c61f79a589ad76f6ef0fd0c52400587ba3"},"a93f363a65e2352e2493900d8de159c71f6a3dcaf1b483a886f777fdaf070731":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nparameter_constraints_property = apigatewayv2.CfnRoute.ParameterConstraintsProperty(\n    required=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar parameterConstraintsProperty = new ParameterConstraintsProperty {\n    Required = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nParameterConstraintsProperty parameterConstraintsProperty = ParameterConstraintsProperty.builder()\n        .required(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nparameterConstraintsProperty := &ParameterConstraintsProperty{\n\tRequired: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst parameterConstraintsProperty: apigatewayv2.CfnRoute.ParameterConstraintsProperty = {\n  required: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnRoute.ParameterConstraintsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnRoute.ParameterConstraintsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst parameterConstraintsProperty: apigatewayv2.CfnRoute.ParameterConstraintsProperty = {\n  required: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":6,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"80c2ca9f4cb2c8e996acb804f3642a135674d27b952d28c3fe451b2388ca31f6"},"ab3edac78d72384f95a68102ed01c8aca0254b29ac31a65d2826da4444fdce41":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# request_models: Any\n# request_parameters: Any\n\ncfn_route_props = apigatewayv2.CfnRouteProps(\n    api_id=\"apiId\",\n    route_key=\"routeKey\",\n\n    # the properties below are optional\n    api_key_required=False,\n    authorization_scopes=[\"authorizationScopes\"],\n    authorization_type=\"authorizationType\",\n    authorizer_id=\"authorizerId\",\n    model_selection_expression=\"modelSelectionExpression\",\n    operation_name=\"operationName\",\n    request_models=request_models,\n    request_parameters=request_parameters,\n    route_response_selection_expression=\"routeResponseSelectionExpression\",\n    target=\"target\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar requestModels;\nvar requestParameters;\n\nvar cfnRouteProps = new CfnRouteProps {\n    ApiId = \"apiId\",\n    RouteKey = \"routeKey\",\n\n    // the properties below are optional\n    ApiKeyRequired = false,\n    AuthorizationScopes = new [] { \"authorizationScopes\" },\n    AuthorizationType = \"authorizationType\",\n    AuthorizerId = \"authorizerId\",\n    ModelSelectionExpression = \"modelSelectionExpression\",\n    OperationName = \"operationName\",\n    RequestModels = requestModels,\n    RequestParameters = requestParameters,\n    RouteResponseSelectionExpression = \"routeResponseSelectionExpression\",\n    Target = \"target\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject requestModels;\nObject requestParameters;\n\nCfnRouteProps cfnRouteProps = CfnRouteProps.builder()\n        .apiId(\"apiId\")\n        .routeKey(\"routeKey\")\n\n        // the properties below are optional\n        .apiKeyRequired(false)\n        .authorizationScopes(List.of(\"authorizationScopes\"))\n        .authorizationType(\"authorizationType\")\n        .authorizerId(\"authorizerId\")\n        .modelSelectionExpression(\"modelSelectionExpression\")\n        .operationName(\"operationName\")\n        .requestModels(requestModels)\n        .requestParameters(requestParameters)\n        .routeResponseSelectionExpression(\"routeResponseSelectionExpression\")\n        .target(\"target\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar requestModels interface{}\nvar requestParameters interface{}\n\ncfnRouteProps := &CfnRouteProps{\n\tApiId: jsii.String(\"apiId\"),\n\tRouteKey: jsii.String(\"routeKey\"),\n\n\t// the properties below are optional\n\tApiKeyRequired: jsii.Boolean(false),\n\tAuthorizationScopes: []*string{\n\t\tjsii.String(\"authorizationScopes\"),\n\t},\n\tAuthorizationType: jsii.String(\"authorizationType\"),\n\tAuthorizerId: jsii.String(\"authorizerId\"),\n\tModelSelectionExpression: jsii.String(\"modelSelectionExpression\"),\n\tOperationName: jsii.String(\"operationName\"),\n\tRequestModels: requestModels,\n\tRequestParameters: requestParameters,\n\tRouteResponseSelectionExpression: jsii.String(\"routeResponseSelectionExpression\"),\n\tTarget: jsii.String(\"target\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const requestModels: any;\ndeclare const requestParameters: any;\nconst cfnRouteProps: apigatewayv2.CfnRouteProps = {\n  apiId: 'apiId',\n  routeKey: 'routeKey',\n\n  // the properties below are optional\n  apiKeyRequired: false,\n  authorizationScopes: ['authorizationScopes'],\n  authorizationType: 'authorizationType',\n  authorizerId: 'authorizerId',\n  modelSelectionExpression: 'modelSelectionExpression',\n  operationName: 'operationName',\n  requestModels: requestModels,\n  requestParameters: requestParameters,\n  routeResponseSelectionExpression: 'routeResponseSelectionExpression',\n  target: 'target',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnRouteProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnRouteProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const requestModels: any;\ndeclare const requestParameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRouteProps: apigatewayv2.CfnRouteProps = {\n  apiId: 'apiId',\n  routeKey: 'routeKey',\n\n  // the properties below are optional\n  apiKeyRequired: false,\n  authorizationScopes: ['authorizationScopes'],\n  authorizationType: 'authorizationType',\n  authorizerId: 'authorizerId',\n  modelSelectionExpression: 'modelSelectionExpression',\n  operationName: 'operationName',\n  requestModels: requestModels,\n  requestParameters: requestParameters,\n  routeResponseSelectionExpression: 'routeResponseSelectionExpression',\n  target: 'target',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":10,"75":20,"91":1,"125":2,"130":2,"153":1,"169":1,"192":1,"193":1,"225":3,"242":3,"243":3,"254":1,"255":1,"256":1,"281":12,"290":1},"fqnsFingerprint":"37e2c086e3f0c13252aa05be40166c526eeec930247bcd6209120c0f6aaa3cac"},"02d15d7e097830447da9933567c1035b7c052e6327c76d78ebaf8cb595d9809c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# response_models: Any\n\ncfn_route_response = apigatewayv2.CfnRouteResponse(self, \"MyCfnRouteResponse\",\n    api_id=\"apiId\",\n    route_id=\"routeId\",\n    route_response_key=\"routeResponseKey\",\n\n    # the properties below are optional\n    model_selection_expression=\"modelSelectionExpression\",\n    response_models=response_models,\n    response_parameters={\n        \"response_parameters_key\": apigatewayv2.CfnRouteResponse.ParameterConstraintsProperty(\n            required=False\n        )\n    }\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar responseModels;\n\nvar cfnRouteResponse = new CfnRouteResponse(this, \"MyCfnRouteResponse\", new CfnRouteResponseProps {\n    ApiId = \"apiId\",\n    RouteId = \"routeId\",\n    RouteResponseKey = \"routeResponseKey\",\n\n    // the properties below are optional\n    ModelSelectionExpression = \"modelSelectionExpression\",\n    ResponseModels = responseModels,\n    ResponseParameters = new Dictionary<string, object> {\n        { \"responseParametersKey\", new ParameterConstraintsProperty {\n            Required = false\n        } }\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject responseModels;\n\nCfnRouteResponse cfnRouteResponse = CfnRouteResponse.Builder.create(this, \"MyCfnRouteResponse\")\n        .apiId(\"apiId\")\n        .routeId(\"routeId\")\n        .routeResponseKey(\"routeResponseKey\")\n\n        // the properties below are optional\n        .modelSelectionExpression(\"modelSelectionExpression\")\n        .responseModels(responseModels)\n        .responseParameters(Map.of(\n                \"responseParametersKey\", ParameterConstraintsProperty.builder()\n                        .required(false)\n                        .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar responseModels interface{}\n\ncfnRouteResponse := apigatewayv2.NewCfnRouteResponse(this, jsii.String(\"MyCfnRouteResponse\"), &CfnRouteResponseProps{\n\tApiId: jsii.String(\"apiId\"),\n\tRouteId: jsii.String(\"routeId\"),\n\tRouteResponseKey: jsii.String(\"routeResponseKey\"),\n\n\t// the properties below are optional\n\tModelSelectionExpression: jsii.String(\"modelSelectionExpression\"),\n\tResponseModels: responseModels,\n\tResponseParameters: map[string]interface{}{\n\t\t\"responseParametersKey\": &ParameterConstraintsProperty{\n\t\t\t\"required\": jsii.Boolean(false),\n\t\t},\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const responseModels: any;\nconst cfnRouteResponse = new apigatewayv2.CfnRouteResponse(this, 'MyCfnRouteResponse', {\n  apiId: 'apiId',\n  routeId: 'routeId',\n  routeResponseKey: 'routeResponseKey',\n\n  // the properties below are optional\n  modelSelectionExpression: 'modelSelectionExpression',\n  responseModels: responseModels,\n  responseParameters: {\n    responseParametersKey: {\n      required: false,\n    },\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnRouteResponse"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnRouteResponse","@aws-cdk/aws-apigatewayv2.CfnRouteResponseProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const responseModels: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRouteResponse = new apigatewayv2.CfnRouteResponse(this, 'MyCfnRouteResponse', {\n  apiId: 'apiId',\n  routeId: 'routeId',\n  routeResponseKey: 'routeResponseKey',\n\n  // the properties below are optional\n  modelSelectionExpression: 'modelSelectionExpression',\n  responseModels: responseModels,\n  responseParameters: {\n    responseParametersKey: {\n      required: false,\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":14,"91":1,"104":1,"125":1,"130":1,"193":3,"194":1,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":8,"290":1},"fqnsFingerprint":"bbca41b6ecc08a71b4a83b3b473d36b2ab53cd9f88c766e164e6648fdd0c3395"},"fb81d610347cf7cd3fd63be5a73667f535ae8a4772f55ef4b82b5c28c5c253cd":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nparameter_constraints_property = apigatewayv2.CfnRouteResponse.ParameterConstraintsProperty(\n    required=False\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar parameterConstraintsProperty = new ParameterConstraintsProperty {\n    Required = false\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nParameterConstraintsProperty parameterConstraintsProperty = ParameterConstraintsProperty.builder()\n        .required(false)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nparameterConstraintsProperty := &ParameterConstraintsProperty{\n\tRequired: jsii.Boolean(false),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst parameterConstraintsProperty: apigatewayv2.CfnRouteResponse.ParameterConstraintsProperty = {\n  required: false,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnRouteResponse.ParameterConstraintsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnRouteResponse.ParameterConstraintsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst parameterConstraintsProperty: apigatewayv2.CfnRouteResponse.ParameterConstraintsProperty = {\n  required: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":6,"91":1,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"28fc6f4c0fd10e38f1f97e6748f8868e33e65f6eb270b4ef38957c39c8c8f885"},"d370289a42bf9041b8c9579fc9ac7efc0eace7315780132a7c2cf077c95b3846":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# response_models: Any\n\ncfn_route_response_props = apigatewayv2.CfnRouteResponseProps(\n    api_id=\"apiId\",\n    route_id=\"routeId\",\n    route_response_key=\"routeResponseKey\",\n\n    # the properties below are optional\n    model_selection_expression=\"modelSelectionExpression\",\n    response_models=response_models,\n    response_parameters={\n        \"response_parameters_key\": apigatewayv2.CfnRouteResponse.ParameterConstraintsProperty(\n            required=False\n        )\n    }\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar responseModels;\n\nvar cfnRouteResponseProps = new CfnRouteResponseProps {\n    ApiId = \"apiId\",\n    RouteId = \"routeId\",\n    RouteResponseKey = \"routeResponseKey\",\n\n    // the properties below are optional\n    ModelSelectionExpression = \"modelSelectionExpression\",\n    ResponseModels = responseModels,\n    ResponseParameters = new Dictionary<string, object> {\n        { \"responseParametersKey\", new ParameterConstraintsProperty {\n            Required = false\n        } }\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject responseModels;\n\nCfnRouteResponseProps cfnRouteResponseProps = CfnRouteResponseProps.builder()\n        .apiId(\"apiId\")\n        .routeId(\"routeId\")\n        .routeResponseKey(\"routeResponseKey\")\n\n        // the properties below are optional\n        .modelSelectionExpression(\"modelSelectionExpression\")\n        .responseModels(responseModels)\n        .responseParameters(Map.of(\n                \"responseParametersKey\", ParameterConstraintsProperty.builder()\n                        .required(false)\n                        .build()))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar responseModels interface{}\n\ncfnRouteResponseProps := &CfnRouteResponseProps{\n\tApiId: jsii.String(\"apiId\"),\n\tRouteId: jsii.String(\"routeId\"),\n\tRouteResponseKey: jsii.String(\"routeResponseKey\"),\n\n\t// the properties below are optional\n\tModelSelectionExpression: jsii.String(\"modelSelectionExpression\"),\n\tResponseModels: responseModels,\n\tResponseParameters: map[string]interface{}{\n\t\t\"responseParametersKey\": &ParameterConstraintsProperty{\n\t\t\t\"required\": jsii.Boolean(false),\n\t\t},\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const responseModels: any;\nconst cfnRouteResponseProps: apigatewayv2.CfnRouteResponseProps = {\n  apiId: 'apiId',\n  routeId: 'routeId',\n  routeResponseKey: 'routeResponseKey',\n\n  // the properties below are optional\n  modelSelectionExpression: 'modelSelectionExpression',\n  responseModels: responseModels,\n  responseParameters: {\n    responseParametersKey: {\n      required: false,\n    },\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnRouteResponseProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnRouteResponseProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const responseModels: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRouteResponseProps: apigatewayv2.CfnRouteResponseProps = {\n  apiId: 'apiId',\n  routeId: 'routeId',\n  routeResponseKey: 'routeResponseKey',\n\n  // the properties below are optional\n  modelSelectionExpression: 'modelSelectionExpression',\n  responseModels: responseModels,\n  responseParameters: {\n    responseParametersKey: {\n      required: false,\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":14,"91":1,"125":1,"130":1,"153":1,"169":1,"193":3,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":8,"290":1},"fqnsFingerprint":"d93a0e49a08944dc26799f9058ff7968e2d7485a3b8f6a231fc6f46d78b83eab"},"c91134e3b93527dc927def423493b020eba2dfe22d0939ac44741ad53b8de29d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# route_settings: Any\n# stage_variables: Any\n# tags: Any\n\ncfn_stage = apigatewayv2.CfnStage(self, \"MyCfnStage\",\n    api_id=\"apiId\",\n    stage_name=\"stageName\",\n\n    # the properties below are optional\n    access_log_settings=apigatewayv2.CfnStage.AccessLogSettingsProperty(\n        destination_arn=\"destinationArn\",\n        format=\"format\"\n    ),\n    access_policy_id=\"accessPolicyId\",\n    auto_deploy=False,\n    client_certificate_id=\"clientCertificateId\",\n    default_route_settings=apigatewayv2.CfnStage.RouteSettingsProperty(\n        data_trace_enabled=False,\n        detailed_metrics_enabled=False,\n        logging_level=\"loggingLevel\",\n        throttling_burst_limit=123,\n        throttling_rate_limit=123\n    ),\n    deployment_id=\"deploymentId\",\n    description=\"description\",\n    route_settings=route_settings,\n    stage_variables=stage_variables,\n    tags=tags\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar routeSettings;\nvar stageVariables;\nvar tags;\n\nvar cfnStage = new CfnStage(this, \"MyCfnStage\", new CfnStageProps {\n    ApiId = \"apiId\",\n    StageName = \"stageName\",\n\n    // the properties below are optional\n    AccessLogSettings = new AccessLogSettingsProperty {\n        DestinationArn = \"destinationArn\",\n        Format = \"format\"\n    },\n    AccessPolicyId = \"accessPolicyId\",\n    AutoDeploy = false,\n    ClientCertificateId = \"clientCertificateId\",\n    DefaultRouteSettings = new RouteSettingsProperty {\n        DataTraceEnabled = false,\n        DetailedMetricsEnabled = false,\n        LoggingLevel = \"loggingLevel\",\n        ThrottlingBurstLimit = 123,\n        ThrottlingRateLimit = 123\n    },\n    DeploymentId = \"deploymentId\",\n    Description = \"description\",\n    RouteSettings = routeSettings,\n    StageVariables = stageVariables,\n    Tags = tags\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject routeSettings;\nObject stageVariables;\nObject tags;\n\nCfnStage cfnStage = CfnStage.Builder.create(this, \"MyCfnStage\")\n        .apiId(\"apiId\")\n        .stageName(\"stageName\")\n\n        // the properties below are optional\n        .accessLogSettings(AccessLogSettingsProperty.builder()\n                .destinationArn(\"destinationArn\")\n                .format(\"format\")\n                .build())\n        .accessPolicyId(\"accessPolicyId\")\n        .autoDeploy(false)\n        .clientCertificateId(\"clientCertificateId\")\n        .defaultRouteSettings(RouteSettingsProperty.builder()\n                .dataTraceEnabled(false)\n                .detailedMetricsEnabled(false)\n                .loggingLevel(\"loggingLevel\")\n                .throttlingBurstLimit(123)\n                .throttlingRateLimit(123)\n                .build())\n        .deploymentId(\"deploymentId\")\n        .description(\"description\")\n        .routeSettings(routeSettings)\n        .stageVariables(stageVariables)\n        .tags(tags)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar routeSettings interface{}\nvar stageVariables interface{}\nvar tags interface{}\n\ncfnStage := apigatewayv2.NewCfnStage(this, jsii.String(\"MyCfnStage\"), &CfnStageProps{\n\tApiId: jsii.String(\"apiId\"),\n\tStageName: jsii.String(\"stageName\"),\n\n\t// the properties below are optional\n\tAccessLogSettings: &AccessLogSettingsProperty{\n\t\tDestinationArn: jsii.String(\"destinationArn\"),\n\t\tFormat: jsii.String(\"format\"),\n\t},\n\tAccessPolicyId: jsii.String(\"accessPolicyId\"),\n\tAutoDeploy: jsii.Boolean(false),\n\tClientCertificateId: jsii.String(\"clientCertificateId\"),\n\tDefaultRouteSettings: &RouteSettingsProperty{\n\t\tDataTraceEnabled: jsii.Boolean(false),\n\t\tDetailedMetricsEnabled: jsii.Boolean(false),\n\t\tLoggingLevel: jsii.String(\"loggingLevel\"),\n\t\tThrottlingBurstLimit: jsii.Number(123),\n\t\tThrottlingRateLimit: jsii.Number(123),\n\t},\n\tDeploymentId: jsii.String(\"deploymentId\"),\n\tDescription: jsii.String(\"description\"),\n\tRouteSettings: routeSettings,\n\tStageVariables: stageVariables,\n\tTags: tags,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const routeSettings: any;\ndeclare const stageVariables: any;\ndeclare const tags: any;\nconst cfnStage = new apigatewayv2.CfnStage(this, 'MyCfnStage', {\n  apiId: 'apiId',\n  stageName: 'stageName',\n\n  // the properties below are optional\n  accessLogSettings: {\n    destinationArn: 'destinationArn',\n    format: 'format',\n  },\n  accessPolicyId: 'accessPolicyId',\n  autoDeploy: false,\n  clientCertificateId: 'clientCertificateId',\n  defaultRouteSettings: {\n    dataTraceEnabled: false,\n    detailedMetricsEnabled: false,\n    loggingLevel: 'loggingLevel',\n    throttlingBurstLimit: 123,\n    throttlingRateLimit: 123,\n  },\n  deploymentId: 'deploymentId',\n  description: 'description',\n  routeSettings: routeSettings,\n  stageVariables: stageVariables,\n  tags: tags,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnStage"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnStage","@aws-cdk/aws-apigatewayv2.CfnStageProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const routeSettings: any;\ndeclare const stageVariables: any;\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnStage = new apigatewayv2.CfnStage(this, 'MyCfnStage', {\n  apiId: 'apiId',\n  stageName: 'stageName',\n\n  // the properties below are optional\n  accessLogSettings: {\n    destinationArn: 'destinationArn',\n    format: 'format',\n  },\n  accessPolicyId: 'accessPolicyId',\n  autoDeploy: false,\n  clientCertificateId: 'clientCertificateId',\n  defaultRouteSettings: {\n    dataTraceEnabled: false,\n    detailedMetricsEnabled: false,\n    loggingLevel: 'loggingLevel',\n    throttlingBurstLimit: 123,\n    throttlingRateLimit: 123,\n  },\n  deploymentId: 'deploymentId',\n  description: 'description',\n  routeSettings: routeSettings,\n  stageVariables: stageVariables,\n  tags: tags,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":11,"75":29,"91":3,"104":1,"125":3,"130":3,"193":3,"194":1,"197":1,"225":4,"242":4,"243":4,"254":1,"255":1,"256":1,"281":19,"290":1},"fqnsFingerprint":"d04ae3d5e9c1cef24d52cb47cf9a9b437536803f4d810ee67906862712fb212d"},"ce78a4bfea7cd8277395d03725d49ff0981f382038758a9dcf06ed309aaf2ae3":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\naccess_log_settings_property = apigatewayv2.CfnStage.AccessLogSettingsProperty(\n    destination_arn=\"destinationArn\",\n    format=\"format\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar accessLogSettingsProperty = new AccessLogSettingsProperty {\n    DestinationArn = \"destinationArn\",\n    Format = \"format\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nAccessLogSettingsProperty accessLogSettingsProperty = AccessLogSettingsProperty.builder()\n        .destinationArn(\"destinationArn\")\n        .format(\"format\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\naccessLogSettingsProperty := &AccessLogSettingsProperty{\n\tDestinationArn: jsii.String(\"destinationArn\"),\n\tFormat: jsii.String(\"format\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst accessLogSettingsProperty: apigatewayv2.CfnStage.AccessLogSettingsProperty = {\n  destinationArn: 'destinationArn',\n  format: 'format',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnStage.AccessLogSettingsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnStage.AccessLogSettingsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst accessLogSettingsProperty: apigatewayv2.CfnStage.AccessLogSettingsProperty = {\n  destinationArn: 'destinationArn',\n  format: 'format',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":7,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"7b4ab717b009da9f78826150a5c3a910af0c140b3dfcefafc13a5b68cd98dec8"},"8486e09e067d63c0e83459e39ffef3907473c03061fd608e2e6180b6084368b9":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nroute_settings_property = apigatewayv2.CfnStage.RouteSettingsProperty(\n    data_trace_enabled=False,\n    detailed_metrics_enabled=False,\n    logging_level=\"loggingLevel\",\n    throttling_burst_limit=123,\n    throttling_rate_limit=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar routeSettingsProperty = new RouteSettingsProperty {\n    DataTraceEnabled = false,\n    DetailedMetricsEnabled = false,\n    LoggingLevel = \"loggingLevel\",\n    ThrottlingBurstLimit = 123,\n    ThrottlingRateLimit = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nRouteSettingsProperty routeSettingsProperty = RouteSettingsProperty.builder()\n        .dataTraceEnabled(false)\n        .detailedMetricsEnabled(false)\n        .loggingLevel(\"loggingLevel\")\n        .throttlingBurstLimit(123)\n        .throttlingRateLimit(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nrouteSettingsProperty := &RouteSettingsProperty{\n\tDataTraceEnabled: jsii.Boolean(false),\n\tDetailedMetricsEnabled: jsii.Boolean(false),\n\tLoggingLevel: jsii.String(\"loggingLevel\"),\n\tThrottlingBurstLimit: jsii.Number(123),\n\tThrottlingRateLimit: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst routeSettingsProperty: apigatewayv2.CfnStage.RouteSettingsProperty = {\n  dataTraceEnabled: false,\n  detailedMetricsEnabled: false,\n  loggingLevel: 'loggingLevel',\n  throttlingBurstLimit: 123,\n  throttlingRateLimit: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnStage.RouteSettingsProperty"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnStage.RouteSettingsProperty"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst routeSettingsProperty: apigatewayv2.CfnStage.RouteSettingsProperty = {\n  dataTraceEnabled: false,\n  detailedMetricsEnabled: false,\n  loggingLevel: 'loggingLevel',\n  throttlingBurstLimit: 123,\n  throttlingRateLimit: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":2,"75":10,"91":2,"153":2,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"cc354ca17e194547873315203eba44ed94ee09c660c256b5964b4e76ead6e1bd"},"3a79f47a2a90322160651544507f5740af39a28d3e635b943c3bff7e523e63e2":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# route_settings: Any\n# stage_variables: Any\n# tags: Any\n\ncfn_stage_props = apigatewayv2.CfnStageProps(\n    api_id=\"apiId\",\n    stage_name=\"stageName\",\n\n    # the properties below are optional\n    access_log_settings=apigatewayv2.CfnStage.AccessLogSettingsProperty(\n        destination_arn=\"destinationArn\",\n        format=\"format\"\n    ),\n    access_policy_id=\"accessPolicyId\",\n    auto_deploy=False,\n    client_certificate_id=\"clientCertificateId\",\n    default_route_settings=apigatewayv2.CfnStage.RouteSettingsProperty(\n        data_trace_enabled=False,\n        detailed_metrics_enabled=False,\n        logging_level=\"loggingLevel\",\n        throttling_burst_limit=123,\n        throttling_rate_limit=123\n    ),\n    deployment_id=\"deploymentId\",\n    description=\"description\",\n    route_settings=route_settings,\n    stage_variables=stage_variables,\n    tags=tags\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar routeSettings;\nvar stageVariables;\nvar tags;\n\nvar cfnStageProps = new CfnStageProps {\n    ApiId = \"apiId\",\n    StageName = \"stageName\",\n\n    // the properties below are optional\n    AccessLogSettings = new AccessLogSettingsProperty {\n        DestinationArn = \"destinationArn\",\n        Format = \"format\"\n    },\n    AccessPolicyId = \"accessPolicyId\",\n    AutoDeploy = false,\n    ClientCertificateId = \"clientCertificateId\",\n    DefaultRouteSettings = new RouteSettingsProperty {\n        DataTraceEnabled = false,\n        DetailedMetricsEnabled = false,\n        LoggingLevel = \"loggingLevel\",\n        ThrottlingBurstLimit = 123,\n        ThrottlingRateLimit = 123\n    },\n    DeploymentId = \"deploymentId\",\n    Description = \"description\",\n    RouteSettings = routeSettings,\n    StageVariables = stageVariables,\n    Tags = tags\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nObject routeSettings;\nObject stageVariables;\nObject tags;\n\nCfnStageProps cfnStageProps = CfnStageProps.builder()\n        .apiId(\"apiId\")\n        .stageName(\"stageName\")\n\n        // the properties below are optional\n        .accessLogSettings(AccessLogSettingsProperty.builder()\n                .destinationArn(\"destinationArn\")\n                .format(\"format\")\n                .build())\n        .accessPolicyId(\"accessPolicyId\")\n        .autoDeploy(false)\n        .clientCertificateId(\"clientCertificateId\")\n        .defaultRouteSettings(RouteSettingsProperty.builder()\n                .dataTraceEnabled(false)\n                .detailedMetricsEnabled(false)\n                .loggingLevel(\"loggingLevel\")\n                .throttlingBurstLimit(123)\n                .throttlingRateLimit(123)\n                .build())\n        .deploymentId(\"deploymentId\")\n        .description(\"description\")\n        .routeSettings(routeSettings)\n        .stageVariables(stageVariables)\n        .tags(tags)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar routeSettings interface{}\nvar stageVariables interface{}\nvar tags interface{}\n\ncfnStageProps := &CfnStageProps{\n\tApiId: jsii.String(\"apiId\"),\n\tStageName: jsii.String(\"stageName\"),\n\n\t// the properties below are optional\n\tAccessLogSettings: &AccessLogSettingsProperty{\n\t\tDestinationArn: jsii.String(\"destinationArn\"),\n\t\tFormat: jsii.String(\"format\"),\n\t},\n\tAccessPolicyId: jsii.String(\"accessPolicyId\"),\n\tAutoDeploy: jsii.Boolean(false),\n\tClientCertificateId: jsii.String(\"clientCertificateId\"),\n\tDefaultRouteSettings: &RouteSettingsProperty{\n\t\tDataTraceEnabled: jsii.Boolean(false),\n\t\tDetailedMetricsEnabled: jsii.Boolean(false),\n\t\tLoggingLevel: jsii.String(\"loggingLevel\"),\n\t\tThrottlingBurstLimit: jsii.Number(123),\n\t\tThrottlingRateLimit: jsii.Number(123),\n\t},\n\tDeploymentId: jsii.String(\"deploymentId\"),\n\tDescription: jsii.String(\"description\"),\n\tRouteSettings: routeSettings,\n\tStageVariables: stageVariables,\n\tTags: tags,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const routeSettings: any;\ndeclare const stageVariables: any;\ndeclare const tags: any;\nconst cfnStageProps: apigatewayv2.CfnStageProps = {\n  apiId: 'apiId',\n  stageName: 'stageName',\n\n  // the properties below are optional\n  accessLogSettings: {\n    destinationArn: 'destinationArn',\n    format: 'format',\n  },\n  accessPolicyId: 'accessPolicyId',\n  autoDeploy: false,\n  clientCertificateId: 'clientCertificateId',\n  defaultRouteSettings: {\n    dataTraceEnabled: false,\n    detailedMetricsEnabled: false,\n    loggingLevel: 'loggingLevel',\n    throttlingBurstLimit: 123,\n    throttlingRateLimit: 123,\n  },\n  deploymentId: 'deploymentId',\n  description: 'description',\n  routeSettings: routeSettings,\n  stageVariables: stageVariables,\n  tags: tags,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnStageProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnStageProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const routeSettings: any;\ndeclare const stageVariables: any;\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnStageProps: apigatewayv2.CfnStageProps = {\n  apiId: 'apiId',\n  stageName: 'stageName',\n\n  // the properties below are optional\n  accessLogSettings: {\n    destinationArn: 'destinationArn',\n    format: 'format',\n  },\n  accessPolicyId: 'accessPolicyId',\n  autoDeploy: false,\n  clientCertificateId: 'clientCertificateId',\n  defaultRouteSettings: {\n    dataTraceEnabled: false,\n    detailedMetricsEnabled: false,\n    loggingLevel: 'loggingLevel',\n    throttlingBurstLimit: 123,\n    throttlingRateLimit: 123,\n  },\n  deploymentId: 'deploymentId',\n  description: 'description',\n  routeSettings: routeSettings,\n  stageVariables: stageVariables,\n  tags: tags,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":10,"75":29,"91":3,"125":3,"130":3,"153":1,"169":1,"193":3,"225":4,"242":4,"243":4,"254":1,"255":1,"256":1,"281":19,"290":1},"fqnsFingerprint":"7b1f773f8e745dcd57d4f71fa3a3ab08878ebf894a684a463d9f9c267da8e488"},"122b8b5eb77ef7eb8c00bc43da9c6d837a5a646672707483b0558152d287314d":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\ncfn_vpc_link = apigatewayv2.CfnVpcLink(self, \"MyCfnVpcLink\",\n    name=\"name\",\n    subnet_ids=[\"subnetIds\"],\n\n    # the properties below are optional\n    security_group_ids=[\"securityGroupIds\"],\n    tags={\n        \"tags_key\": \"tags\"\n    }\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar cfnVpcLink = new CfnVpcLink(this, \"MyCfnVpcLink\", new CfnVpcLinkProps {\n    Name = \"name\",\n    SubnetIds = new [] { \"subnetIds\" },\n\n    // the properties below are optional\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    Tags = new Dictionary<string, string> {\n        { \"tagsKey\", \"tags\" }\n    }\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nCfnVpcLink cfnVpcLink = CfnVpcLink.Builder.create(this, \"MyCfnVpcLink\")\n        .name(\"name\")\n        .subnetIds(List.of(\"subnetIds\"))\n\n        // the properties below are optional\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .tags(Map.of(\n                \"tagsKey\", \"tags\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\ncfnVpcLink := apigatewayv2.NewCfnVpcLink(this, jsii.String(\"MyCfnVpcLink\"), &CfnVpcLinkProps{\n\tName: jsii.String(\"name\"),\n\tSubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n\n\t// the properties below are optional\n\tSecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tTags: map[string]*string{\n\t\t\"tagsKey\": jsii.String(\"tags\"),\n\t},\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst cfnVpcLink = new apigatewayv2.CfnVpcLink(this, 'MyCfnVpcLink', {\n  name: 'name',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  securityGroupIds: ['securityGroupIds'],\n  tags: {\n    tagsKey: 'tags',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnVpcLink"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnVpcLink","@aws-cdk/aws-apigatewayv2.CfnVpcLinkProps","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnVpcLink = new apigatewayv2.CfnVpcLink(this, 'MyCfnVpcLink', {\n  name: 'name',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  securityGroupIds: ['securityGroupIds'],\n  tags: {\n    tagsKey: 'tags',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":6,"75":9,"104":1,"192":2,"193":2,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"01328259896151927a3444d4e2b8d25ac79b7c26b9107ad92023065bbecf4d22"},"c31a4bf7645329e942903067143115036783f03d082208ad3d01f043c44a8841":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\ncfn_vpc_link_props = apigatewayv2.CfnVpcLinkProps(\n    name=\"name\",\n    subnet_ids=[\"subnetIds\"],\n\n    # the properties below are optional\n    security_group_ids=[\"securityGroupIds\"],\n    tags={\n        \"tags_key\": \"tags\"\n    }\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar cfnVpcLinkProps = new CfnVpcLinkProps {\n    Name = \"name\",\n    SubnetIds = new [] { \"subnetIds\" },\n\n    // the properties below are optional\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    Tags = new Dictionary<string, string> {\n        { \"tagsKey\", \"tags\" }\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nCfnVpcLinkProps cfnVpcLinkProps = CfnVpcLinkProps.builder()\n        .name(\"name\")\n        .subnetIds(List.of(\"subnetIds\"))\n\n        // the properties below are optional\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .tags(Map.of(\n                \"tagsKey\", \"tags\"))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\ncfnVpcLinkProps := &CfnVpcLinkProps{\n\tName: jsii.String(\"name\"),\n\tSubnetIds: []*string{\n\t\tjsii.String(\"subnetIds\"),\n\t},\n\n\t// the properties below are optional\n\tSecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tTags: map[string]*string{\n\t\t\"tagsKey\": jsii.String(\"tags\"),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst cfnVpcLinkProps: apigatewayv2.CfnVpcLinkProps = {\n  name: 'name',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  securityGroupIds: ['securityGroupIds'],\n  tags: {\n    tagsKey: 'tags',\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CfnVpcLinkProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CfnVpcLinkProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnVpcLinkProps: apigatewayv2.CfnVpcLinkProps = {\n  name: 'name',\n  subnetIds: ['subnetIds'],\n\n  // the properties below are optional\n  securityGroupIds: ['securityGroupIds'],\n  tags: {\n    tagsKey: 'tags',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":9,"153":1,"169":1,"192":2,"193":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"1d7d46f64fd12b8d2e189c5e503bb772bd3c746a1add5a2ae79ce87b644d384c"},"9fdaefc09b1e09a6b501fc7e8045fd38e2d94356ebe04f9989df51096149e0a8":{"translations":{"python":{"source":"apigwv2.HttpApi(self, \"HttpProxyApi\",\n    cors_preflight=apigwv2.CorsPreflightOptions(\n        allow_headers=[\"Authorization\"],\n        allow_methods=[apigwv2.CorsHttpMethod.GET, apigwv2.CorsHttpMethod.HEAD, apigwv2.CorsHttpMethod.OPTIONS, apigwv2.CorsHttpMethod.POST\n        ],\n        allow_origins=[\"*\"],\n        max_age=Duration.days(10)\n    )\n)","version":"2"},"csharp":{"source":"new HttpApi(this, \"HttpProxyApi\", new HttpApiProps {\n    CorsPreflight = new CorsPreflightOptions {\n        AllowHeaders = new [] { \"Authorization\" },\n        AllowMethods = new [] { CorsHttpMethod.GET, CorsHttpMethod.HEAD, CorsHttpMethod.OPTIONS, CorsHttpMethod.POST },\n        AllowOrigins = new [] { \"*\" },\n        MaxAge = Duration.Days(10)\n    }\n});","version":"1"},"java":{"source":"HttpApi.Builder.create(this, \"HttpProxyApi\")\n        .corsPreflight(CorsPreflightOptions.builder()\n                .allowHeaders(List.of(\"Authorization\"))\n                .allowMethods(List.of(CorsHttpMethod.GET, CorsHttpMethod.HEAD, CorsHttpMethod.OPTIONS, CorsHttpMethod.POST))\n                .allowOrigins(List.of(\"*\"))\n                .maxAge(Duration.days(10))\n                .build())\n        .build();","version":"1"},"go":{"source":"apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyApi\"), &HttpApiProps{\n\tCorsPreflight: &CorsPreflightOptions{\n\t\tAllowHeaders: []*string{\n\t\t\tjsii.String(\"Authorization\"),\n\t\t},\n\t\tAllowMethods: []corsHttpMethod{\n\t\t\tapigwv2.*corsHttpMethod_GET,\n\t\t\tapigwv2.*corsHttpMethod_HEAD,\n\t\t\tapigwv2.*corsHttpMethod_OPTIONS,\n\t\t\tapigwv2.*corsHttpMethod_POST,\n\t\t},\n\t\tAllowOrigins: []*string{\n\t\t\tjsii.String(\"*\"),\n\t\t},\n\t\tMaxAge: awscdkcore.Duration_Days(jsii.Number(10)),\n\t},\n})","version":"1"},"$":{"source":"new apigwv2.HttpApi(this, 'HttpProxyApi', {\n  corsPreflight: {\n    allowHeaders: ['Authorization'],\n    allowMethods: [\n      apigwv2.CorsHttpMethod.GET,\n      apigwv2.CorsHttpMethod.HEAD,\n      apigwv2.CorsHttpMethod.OPTIONS,\n      apigwv2.CorsHttpMethod.POST,\n    ],\n    allowOrigins: ['*'],\n    maxAge: Duration.days(10),\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CorsHttpMethod"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CorsHttpMethod","@aws-cdk/aws-apigatewayv2.CorsHttpMethod#GET","@aws-cdk/aws-apigatewayv2.CorsHttpMethod#HEAD","@aws-cdk/aws-apigatewayv2.CorsHttpMethod#OPTIONS","@aws-cdk/aws-apigatewayv2.CorsHttpMethod#POST","@aws-cdk/aws-apigatewayv2.CorsPreflightOptions","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/core.Duration","@aws-cdk/core.Duration#days","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew apigwv2.HttpApi(this, 'HttpProxyApi', {\n  corsPreflight: {\n    allowHeaders: ['Authorization'],\n    allowMethods: [\n      apigwv2.CorsHttpMethod.GET,\n      apigwv2.CorsHttpMethod.HEAD,\n      apigwv2.CorsHttpMethod.OPTIONS,\n      apigwv2.CorsHttpMethod.POST,\n    ],\n    allowOrigins: ['*'],\n    maxAge: Duration.days(10),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":1,"10":3,"75":21,"104":1,"192":3,"193":2,"194":10,"196":1,"197":1,"226":1,"281":5},"fqnsFingerprint":"4f4488db366ea128e9fc4a0fa4b13edc2514e4534cfa17c4032efc35779ab429"},"5921b3145fddbed0ef1078ad0601b19619e3c75b8ff50eb91da3c3d133eda3c5":{"translations":{"python":{"source":"apigwv2.HttpApi(self, \"HttpProxyApi\",\n    cors_preflight=apigwv2.CorsPreflightOptions(\n        allow_headers=[\"Authorization\"],\n        allow_methods=[apigwv2.CorsHttpMethod.GET, apigwv2.CorsHttpMethod.HEAD, apigwv2.CorsHttpMethod.OPTIONS, apigwv2.CorsHttpMethod.POST\n        ],\n        allow_origins=[\"*\"],\n        max_age=Duration.days(10)\n    )\n)","version":"2"},"csharp":{"source":"new HttpApi(this, \"HttpProxyApi\", new HttpApiProps {\n    CorsPreflight = new CorsPreflightOptions {\n        AllowHeaders = new [] { \"Authorization\" },\n        AllowMethods = new [] { CorsHttpMethod.GET, CorsHttpMethod.HEAD, CorsHttpMethod.OPTIONS, CorsHttpMethod.POST },\n        AllowOrigins = new [] { \"*\" },\n        MaxAge = Duration.Days(10)\n    }\n});","version":"1"},"java":{"source":"HttpApi.Builder.create(this, \"HttpProxyApi\")\n        .corsPreflight(CorsPreflightOptions.builder()\n                .allowHeaders(List.of(\"Authorization\"))\n                .allowMethods(List.of(CorsHttpMethod.GET, CorsHttpMethod.HEAD, CorsHttpMethod.OPTIONS, CorsHttpMethod.POST))\n                .allowOrigins(List.of(\"*\"))\n                .maxAge(Duration.days(10))\n                .build())\n        .build();","version":"1"},"go":{"source":"apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyApi\"), &HttpApiProps{\n\tCorsPreflight: &CorsPreflightOptions{\n\t\tAllowHeaders: []*string{\n\t\t\tjsii.String(\"Authorization\"),\n\t\t},\n\t\tAllowMethods: []corsHttpMethod{\n\t\t\tapigwv2.*corsHttpMethod_GET,\n\t\t\tapigwv2.*corsHttpMethod_HEAD,\n\t\t\tapigwv2.*corsHttpMethod_OPTIONS,\n\t\t\tapigwv2.*corsHttpMethod_POST,\n\t\t},\n\t\tAllowOrigins: []*string{\n\t\t\tjsii.String(\"*\"),\n\t\t},\n\t\tMaxAge: awscdkcore.Duration_Days(jsii.Number(10)),\n\t},\n})","version":"1"},"$":{"source":"new apigwv2.HttpApi(this, 'HttpProxyApi', {\n  corsPreflight: {\n    allowHeaders: ['Authorization'],\n    allowMethods: [\n      apigwv2.CorsHttpMethod.GET,\n      apigwv2.CorsHttpMethod.HEAD,\n      apigwv2.CorsHttpMethod.OPTIONS,\n      apigwv2.CorsHttpMethod.POST,\n    ],\n    allowOrigins: ['*'],\n    maxAge: Duration.days(10),\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.CorsPreflightOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.CorsHttpMethod","@aws-cdk/aws-apigatewayv2.CorsHttpMethod#GET","@aws-cdk/aws-apigatewayv2.CorsHttpMethod#HEAD","@aws-cdk/aws-apigatewayv2.CorsHttpMethod#OPTIONS","@aws-cdk/aws-apigatewayv2.CorsHttpMethod#POST","@aws-cdk/aws-apigatewayv2.CorsPreflightOptions","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/core.Duration","@aws-cdk/core.Duration#days","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew apigwv2.HttpApi(this, 'HttpProxyApi', {\n  corsPreflight: {\n    allowHeaders: ['Authorization'],\n    allowMethods: [\n      apigwv2.CorsHttpMethod.GET,\n      apigwv2.CorsHttpMethod.HEAD,\n      apigwv2.CorsHttpMethod.OPTIONS,\n      apigwv2.CorsHttpMethod.POST,\n    ],\n    allowOrigins: ['*'],\n    maxAge: Duration.days(10),\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":1,"10":3,"75":21,"104":1,"192":3,"193":2,"194":10,"196":1,"197":1,"226":1,"281":5},"fqnsFingerprint":"4f4488db366ea128e9fc4a0fa4b13edc2514e4534cfa17c4032efc35779ab429"},"ea4d8fd08bdb825d3e1041f28a4716dcf1753a1ef7f6bb87dafa638809602bfd":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import HttpLambdaIntegration\n\n# handler: lambda.Function\n# dn: apigwv2.DomainName\n\n\napi_demo = apigwv2.HttpApi(self, \"DemoApi\",\n    default_integration=HttpLambdaIntegration(\"DefaultIntegration\", handler),\n    # https://${dn.domainName}/demo goes to apiDemo $default stage\n    default_domain_mapping=apigwv2.DomainMappingOptions(\n        domain_name=dn,\n        mapping_key=\"demo\"\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction handler;\nDomainName dn;\n\n\nvar apiDemo = new HttpApi(this, \"DemoApi\", new HttpApiProps {\n    DefaultIntegration = new HttpLambdaIntegration(\"DefaultIntegration\", handler),\n    // https://${dn.domainName}/demo goes to apiDemo $default stage\n    DefaultDomainMapping = new DomainMappingOptions {\n        DomainName = dn,\n        MappingKey = \"demo\"\n    }\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.HttpLambdaIntegration;\n\nFunction handler;\nDomainName dn;\n\n\nHttpApi apiDemo = HttpApi.Builder.create(this, \"DemoApi\")\n        .defaultIntegration(new HttpLambdaIntegration(\"DefaultIntegration\", handler))\n        // https://${dn.domainName}/demo goes to apiDemo $default stage\n        .defaultDomainMapping(DomainMappingOptions.builder()\n                .domainName(dn)\n                .mappingKey(\"demo\")\n                .build())\n        .build();","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar handler function\nvar dn domainName\n\n\napiDemo := apigwv2.NewHttpApi(this, jsii.String(\"DemoApi\"), &HttpApiProps{\n\tDefaultIntegration: awscdkawsapigatewayv2integrations.NewHttpLambdaIntegration(jsii.String(\"DefaultIntegration\"), handler),\n\t// https://${dn.domainName}/demo goes to apiDemo $default stage\n\tDefaultDomainMapping: &DomainMappingOptions{\n\t\tDomainName: dn,\n\t\tMappingKey: jsii.String(\"demo\"),\n\t},\n})","version":"1"},"$":{"source":"import { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const handler: lambda.Function;\ndeclare const dn: apigwv2.DomainName;\n\nconst apiDemo = new apigwv2.HttpApi(this, 'DemoApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/demo goes to apiDemo $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'demo',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.DomainMappingOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.HttpLambdaIntegration","@aws-cdk/aws-apigatewayv2.DomainMappingOptions","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-apigatewayv2.IDomainName","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const handler: lambda.Function;\ndeclare const dn: apigwv2.DomainName;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst apiDemo = new apigwv2.HttpApi(this, 'DemoApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/demo goes to apiDemo $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'demo',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":17,"104":1,"130":2,"153":2,"169":2,"193":2,"194":1,"197":2,"225":3,"242":3,"243":3,"254":1,"255":1,"257":1,"258":1,"281":4,"290":1},"fqnsFingerprint":"700b95ff773c0e6ea883a0db2ef817d5a1953899da5888d4381667255122c255"},"fb2c9c8a8287287fcf57bbe656a747f060614e405d974c67b0bd19a8a881c835":{"translations":{"python":{"source":"import aws_cdk.aws_certificatemanager as acm\nfrom aws_cdk.aws_apigatewayv2_integrations import HttpLambdaIntegration\n\n# handler: lambda.Function\n\n\ncert_arn = \"arn:aws:acm:us-east-1:111111111111:certificate\"\ndomain_name = \"example.com\"\n\ndn = apigwv2.DomainName(self, \"DN\",\n    domain_name=domain_name,\n    certificate=acm.Certificate.from_certificate_arn(self, \"cert\", cert_arn)\n)\napi = apigwv2.HttpApi(self, \"HttpProxyProdApi\",\n    default_integration=HttpLambdaIntegration(\"DefaultIntegration\", handler),\n    # https://${dn.domainName}/foo goes to prodApi $default stage\n    default_domain_mapping=apigwv2.DomainMappingOptions(\n        domain_name=dn,\n        mapping_key=\"foo\"\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.CertificateManager;\nusing Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction handler;\n\n\nvar certArn = \"arn:aws:acm:us-east-1:111111111111:certificate\";\nvar domainName = \"example.com\";\n\nvar dn = new DomainName(this, \"DN\", new DomainNameProps {\n    DomainName = domainName,\n    Certificate = Certificate.FromCertificateArn(this, \"cert\", certArn)\n});\nvar api = new HttpApi(this, \"HttpProxyProdApi\", new HttpApiProps {\n    DefaultIntegration = new HttpLambdaIntegration(\"DefaultIntegration\", handler),\n    // https://${dn.domainName}/foo goes to prodApi $default stage\n    DefaultDomainMapping = new DomainMappingOptions {\n        DomainName = dn,\n        MappingKey = \"foo\"\n    }\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.certificatemanager.*;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.HttpLambdaIntegration;\n\nFunction handler;\n\n\nString certArn = \"arn:aws:acm:us-east-1:111111111111:certificate\";\nString domainName = \"example.com\";\n\nDomainName dn = DomainName.Builder.create(this, \"DN\")\n        .domainName(domainName)\n        .certificate(Certificate.fromCertificateArn(this, \"cert\", certArn))\n        .build();\nHttpApi api = HttpApi.Builder.create(this, \"HttpProxyProdApi\")\n        .defaultIntegration(new HttpLambdaIntegration(\"DefaultIntegration\", handler))\n        // https://${dn.domainName}/foo goes to prodApi $default stage\n        .defaultDomainMapping(DomainMappingOptions.builder()\n                .domainName(dn)\n                .mappingKey(\"foo\")\n                .build())\n        .build();","version":"1"},"go":{"source":"import acm \"github.com/aws-samples/dummy/awscdkawscertificatemanager\"\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar handler function\n\n\ncertArn := \"arn:aws:acm:us-east-1:111111111111:certificate\"\ndomainName := \"example.com\"\n\ndn := apigwv2.NewDomainName(this, jsii.String(\"DN\"), &DomainNameProps{\n\tDomainName: jsii.String(DomainName),\n\tCertificate: acm.Certificate_FromCertificateArn(this, jsii.String(\"cert\"), certArn),\n})\napi := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyProdApi\"), &HttpApiProps{\n\tDefaultIntegration: awscdkawsapigatewayv2integrations.NewHttpLambdaIntegration(jsii.String(\"DefaultIntegration\"), handler),\n\t// https://${dn.domainName}/foo goes to prodApi $default stage\n\tDefaultDomainMapping: &DomainMappingOptions{\n\t\tDomainName: dn,\n\t\tMappingKey: jsii.String(\"foo\"),\n\t},\n})","version":"1"},"$":{"source":"import * as acm from '@aws-cdk/aws-certificatemanager';\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\n\nconst dn = new apigwv2.DomainName(this, 'DN', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n});\n\ndeclare const handler: lambda.Function;\nconst api = new apigwv2.HttpApi(this, 'HttpProxyProdApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/foo goes to prodApi $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'foo',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.DomainName"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.HttpLambdaIntegration","@aws-cdk/aws-apigatewayv2.DomainMappingOptions","@aws-cdk/aws-apigatewayv2.DomainName","@aws-cdk/aws-apigatewayv2.DomainNameProps","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-apigatewayv2.IDomainName","@aws-cdk/aws-certificatemanager.Certificate","@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn","@aws-cdk/aws-certificatemanager.ICertificate","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as acm from '@aws-cdk/aws-certificatemanager';\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const handler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\n\nconst dn = new apigwv2.DomainName(this, 'DN', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n});\nconst api = new apigwv2.HttpApi(this, 'HttpProxyProdApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/foo goes to prodApi $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'foo',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":9,"75":26,"104":3,"130":1,"153":1,"169":1,"193":3,"194":4,"196":1,"197":3,"225":5,"242":5,"243":5,"254":2,"255":2,"256":1,"257":1,"258":1,"281":5,"282":1,"290":1},"fqnsFingerprint":"143691bd4009a6bcf45d19bfb48d560f249214ff83c9b3d277a1e9f8ab793678"},"0419367d62c1f3a70f350a2c662cdfb76b5ee419d865074e7a66280b2c6bfb17":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\ndomain_name_attributes = apigatewayv2.DomainNameAttributes(\n    name=\"name\",\n    regional_domain_name=\"regionalDomainName\",\n    regional_hosted_zone_id=\"regionalHostedZoneId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar domainNameAttributes = new DomainNameAttributes {\n    Name = \"name\",\n    RegionalDomainName = \"regionalDomainName\",\n    RegionalHostedZoneId = \"regionalHostedZoneId\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nDomainNameAttributes domainNameAttributes = DomainNameAttributes.builder()\n        .name(\"name\")\n        .regionalDomainName(\"regionalDomainName\")\n        .regionalHostedZoneId(\"regionalHostedZoneId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\ndomainNameAttributes := &DomainNameAttributes{\n\tName: jsii.String(\"name\"),\n\tRegionalDomainName: jsii.String(\"regionalDomainName\"),\n\tRegionalHostedZoneId: jsii.String(\"regionalHostedZoneId\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst domainNameAttributes: apigatewayv2.DomainNameAttributes = {\n  name: 'name',\n  regionalDomainName: 'regionalDomainName',\n  regionalHostedZoneId: 'regionalHostedZoneId',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.DomainNameAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.DomainNameAttributes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst domainNameAttributes: apigatewayv2.DomainNameAttributes = {\n  name: 'name',\n  regionalDomainName: 'regionalDomainName',\n  regionalHostedZoneId: 'regionalHostedZoneId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":7,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"fac060c61645b4201fbe337246565a3bb85de1790fdd6fe6f92a37dc814a3131"},"f447c6396247e83c25d5b06ad004f7488cf102c7e4c2d568bae117a20ac1d171":{"translations":{"python":{"source":"import aws_cdk.aws_certificatemanager as acm\nfrom aws_cdk.aws_apigatewayv2_integrations import HttpLambdaIntegration\n\n# handler: lambda.Function\n\n\ncert_arn = \"arn:aws:acm:us-east-1:111111111111:certificate\"\ndomain_name = \"example.com\"\n\ndn = apigwv2.DomainName(self, \"DN\",\n    domain_name=domain_name,\n    certificate=acm.Certificate.from_certificate_arn(self, \"cert\", cert_arn)\n)\napi = apigwv2.HttpApi(self, \"HttpProxyProdApi\",\n    default_integration=HttpLambdaIntegration(\"DefaultIntegration\", handler),\n    # https://${dn.domainName}/foo goes to prodApi $default stage\n    default_domain_mapping=apigwv2.DomainMappingOptions(\n        domain_name=dn,\n        mapping_key=\"foo\"\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.CertificateManager;\nusing Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction handler;\n\n\nvar certArn = \"arn:aws:acm:us-east-1:111111111111:certificate\";\nvar domainName = \"example.com\";\n\nvar dn = new DomainName(this, \"DN\", new DomainNameProps {\n    DomainName = domainName,\n    Certificate = Certificate.FromCertificateArn(this, \"cert\", certArn)\n});\nvar api = new HttpApi(this, \"HttpProxyProdApi\", new HttpApiProps {\n    DefaultIntegration = new HttpLambdaIntegration(\"DefaultIntegration\", handler),\n    // https://${dn.domainName}/foo goes to prodApi $default stage\n    DefaultDomainMapping = new DomainMappingOptions {\n        DomainName = dn,\n        MappingKey = \"foo\"\n    }\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.certificatemanager.*;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.HttpLambdaIntegration;\n\nFunction handler;\n\n\nString certArn = \"arn:aws:acm:us-east-1:111111111111:certificate\";\nString domainName = \"example.com\";\n\nDomainName dn = DomainName.Builder.create(this, \"DN\")\n        .domainName(domainName)\n        .certificate(Certificate.fromCertificateArn(this, \"cert\", certArn))\n        .build();\nHttpApi api = HttpApi.Builder.create(this, \"HttpProxyProdApi\")\n        .defaultIntegration(new HttpLambdaIntegration(\"DefaultIntegration\", handler))\n        // https://${dn.domainName}/foo goes to prodApi $default stage\n        .defaultDomainMapping(DomainMappingOptions.builder()\n                .domainName(dn)\n                .mappingKey(\"foo\")\n                .build())\n        .build();","version":"1"},"go":{"source":"import acm \"github.com/aws-samples/dummy/awscdkawscertificatemanager\"\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar handler function\n\n\ncertArn := \"arn:aws:acm:us-east-1:111111111111:certificate\"\ndomainName := \"example.com\"\n\ndn := apigwv2.NewDomainName(this, jsii.String(\"DN\"), &DomainNameProps{\n\tDomainName: jsii.String(DomainName),\n\tCertificate: acm.Certificate_FromCertificateArn(this, jsii.String(\"cert\"), certArn),\n})\napi := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyProdApi\"), &HttpApiProps{\n\tDefaultIntegration: awscdkawsapigatewayv2integrations.NewHttpLambdaIntegration(jsii.String(\"DefaultIntegration\"), handler),\n\t// https://${dn.domainName}/foo goes to prodApi $default stage\n\tDefaultDomainMapping: &DomainMappingOptions{\n\t\tDomainName: dn,\n\t\tMappingKey: jsii.String(\"foo\"),\n\t},\n})","version":"1"},"$":{"source":"import * as acm from '@aws-cdk/aws-certificatemanager';\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\n\nconst dn = new apigwv2.DomainName(this, 'DN', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n});\n\ndeclare const handler: lambda.Function;\nconst api = new apigwv2.HttpApi(this, 'HttpProxyProdApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/foo goes to prodApi $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'foo',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.DomainNameProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.HttpLambdaIntegration","@aws-cdk/aws-apigatewayv2.DomainMappingOptions","@aws-cdk/aws-apigatewayv2.DomainName","@aws-cdk/aws-apigatewayv2.DomainNameProps","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-apigatewayv2.IDomainName","@aws-cdk/aws-certificatemanager.Certificate","@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn","@aws-cdk/aws-certificatemanager.ICertificate","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as acm from '@aws-cdk/aws-certificatemanager';\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const handler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\n\nconst dn = new apigwv2.DomainName(this, 'DN', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n});\nconst api = new apigwv2.HttpApi(this, 'HttpProxyProdApi', {\n  defaultIntegration: new HttpLambdaIntegration('DefaultIntegration', handler),\n  // https://${dn.domainName}/foo goes to prodApi $default stage\n  defaultDomainMapping: {\n    domainName: dn,\n    mappingKey: 'foo',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":9,"75":26,"104":3,"130":1,"153":1,"169":1,"193":3,"194":4,"196":1,"197":3,"225":5,"242":5,"243":5,"254":2,"255":2,"256":1,"257":1,"258":1,"281":5,"282":1,"290":1},"fqnsFingerprint":"143691bd4009a6bcf45d19bfb48d560f249214ff83c9b3d277a1e9f8ab793678"},"8742c33abd5190f1a1e2897db75ee918dd4cb9e22d8e4c75989dee5bd09b57a8":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\nimport aws_cdk.aws_certificatemanager as certificatemanager\n\n# certificate: certificatemanager.Certificate\n\nendpoint_options = apigatewayv2.EndpointOptions(\n    certificate=certificate,\n\n    # the properties below are optional\n    certificate_name=\"certificateName\",\n    endpoint_type=apigatewayv2.EndpointType.EDGE,\n    ownership_certificate=certificate,\n    security_policy=apigatewayv2.SecurityPolicy.TLS_1_0\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\nusing Amazon.CDK.AWS.CertificateManager;\n\nCertificate certificate;\n\nvar endpointOptions = new EndpointOptions {\n    Certificate = certificate,\n\n    // the properties below are optional\n    CertificateName = \"certificateName\",\n    EndpointType = EndpointType.EDGE,\n    OwnershipCertificate = certificate,\n    SecurityPolicy = SecurityPolicy.TLS_1_0\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\nimport software.amazon.awscdk.services.certificatemanager.*;\n\nCertificate certificate;\n\nEndpointOptions endpointOptions = EndpointOptions.builder()\n        .certificate(certificate)\n\n        // the properties below are optional\n        .certificateName(\"certificateName\")\n        .endpointType(EndpointType.EDGE)\n        .ownershipCertificate(certificate)\n        .securityPolicy(SecurityPolicy.TLS_1_0)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\nimport certificatemanager \"github.com/aws-samples/dummy/awscdkawscertificatemanager\"\n\nvar certificate certificate\n\nendpointOptions := &EndpointOptions{\n\tCertificate: certificate,\n\n\t// the properties below are optional\n\tCertificateName: jsii.String(\"certificateName\"),\n\tEndpointType: apigatewayv2.EndpointType_EDGE,\n\tOwnershipCertificate: certificate,\n\tSecurityPolicy: apigatewayv2.SecurityPolicy_TLS_1_0,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\n\ndeclare const certificate: certificatemanager.Certificate;\nconst endpointOptions: apigatewayv2.EndpointOptions = {\n  certificate: certificate,\n\n  // the properties below are optional\n  certificateName: 'certificateName',\n  endpointType: apigatewayv2.EndpointType.EDGE,\n  ownershipCertificate: certificate,\n  securityPolicy: apigatewayv2.SecurityPolicy.TLS_1_0,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.EndpointOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.EndpointOptions","@aws-cdk/aws-apigatewayv2.EndpointType","@aws-cdk/aws-apigatewayv2.EndpointType#EDGE","@aws-cdk/aws-apigatewayv2.SecurityPolicy","@aws-cdk/aws-apigatewayv2.SecurityPolicy#TLS_1_0","@aws-cdk/aws-certificatemanager.ICertificate"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as certificatemanager from '@aws-cdk/aws-certificatemanager';\n\ndeclare const certificate: certificatemanager.Certificate;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst endpointOptions: apigatewayv2.EndpointOptions = {\n  certificate: certificate,\n\n  // the properties below are optional\n  certificateName: 'certificateName',\n  endpointType: apigatewayv2.EndpointType.EDGE,\n  ownershipCertificate: certificate,\n  securityPolicy: apigatewayv2.SecurityPolicy.TLS_1_0,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":21,"130":1,"153":2,"169":2,"193":1,"194":4,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":5,"290":1},"fqnsFingerprint":"8037f84691e08a8e919d324e1297d3503581bd6662a3db9962192c95ddbaa157"},"a1f186cb072558831ccfc147d370c400a450fcc7b9c745a2c73ba1777a2a0485":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\ngrant_invoke_options = apigatewayv2.GrantInvokeOptions(\n    http_methods=[apigatewayv2.HttpMethod.ANY]\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar grantInvokeOptions = new GrantInvokeOptions {\n    HttpMethods = new [] { HttpMethod.ANY }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nGrantInvokeOptions grantInvokeOptions = GrantInvokeOptions.builder()\n        .httpMethods(List.of(HttpMethod.ANY))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\ngrantInvokeOptions := &GrantInvokeOptions{\n\tHttpMethods: []httpMethod{\n\t\tapigatewayv2.*httpMethod_ANY,\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst grantInvokeOptions: apigatewayv2.GrantInvokeOptions = {\n  httpMethods: [apigatewayv2.HttpMethod.ANY],\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.GrantInvokeOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.GrantInvokeOptions","@aws-cdk/aws-apigatewayv2.HttpMethod","@aws-cdk/aws-apigatewayv2.HttpMethod#ANY"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst grantInvokeOptions: apigatewayv2.GrantInvokeOptions = {\n  httpMethods: [apigatewayv2.HttpMethod.ANY],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":8,"153":1,"169":1,"192":1,"193":1,"194":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"927f00badbd9caa84cd7b9b065460d8c8675f3dec6f5e9fb400fbf42b1bd62d7"},"7b435ef959740eafb720fe73155b4a3698219c939d2210ba28498fdcafd913a1":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import HttpLambdaIntegration\n\n# books_default_fn: lambda.Function\n\nbooks_integration = HttpLambdaIntegration(\"BooksIntegration\", books_default_fn)\n\nhttp_api = apigwv2.HttpApi(self, \"HttpApi\")\n\nhttp_api.add_routes(\n    path=\"/books\",\n    methods=[apigwv2.HttpMethod.GET],\n    integration=books_integration\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction booksDefaultFn;\n\nvar booksIntegration = new HttpLambdaIntegration(\"BooksIntegration\", booksDefaultFn);\n\nvar httpApi = new HttpApi(this, \"HttpApi\");\n\nhttpApi.AddRoutes(new AddRoutesOptions {\n    Path = \"/books\",\n    Methods = new [] { HttpMethod.GET },\n    Integration = booksIntegration\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.HttpLambdaIntegration;\n\nFunction booksDefaultFn;\n\nHttpLambdaIntegration booksIntegration = new HttpLambdaIntegration(\"BooksIntegration\", booksDefaultFn);\n\nHttpApi httpApi = new HttpApi(this, \"HttpApi\");\n\nhttpApi.addRoutes(AddRoutesOptions.builder()\n        .path(\"/books\")\n        .methods(List.of(HttpMethod.GET))\n        .integration(booksIntegration)\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar booksDefaultFn function\n\nbooksIntegration := awscdkawsapigatewayv2integrations.NewHttpLambdaIntegration(jsii.String(\"BooksIntegration\"), booksDefaultFn)\n\nhttpApi := apigwv2.NewHttpApi(this, jsii.String(\"HttpApi\"))\n\nhttpApi.AddRoutes(&AddRoutesOptions{\n\tPath: jsii.String(\"/books\"),\n\tMethods: []httpMethod{\n\t\tapigwv2.*httpMethod_GET,\n\t},\n\tIntegration: booksIntegration,\n})","version":"1"},"$":{"source":"import { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const booksDefaultFn: lambda.Function;\nconst booksIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: booksIntegration,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpApi"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.HttpLambdaIntegration","@aws-cdk/aws-apigatewayv2.AddRoutesOptions","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApi#addRoutes","@aws-cdk/aws-apigatewayv2.HttpMethod","@aws-cdk/aws-apigatewayv2.HttpMethod#GET","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const booksDefaultFn: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst booksIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: booksIntegration,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":19,"104":1,"130":1,"153":1,"169":1,"192":1,"193":1,"194":4,"196":1,"197":2,"225":3,"226":1,"242":3,"243":3,"254":1,"255":1,"257":1,"258":1,"281":3,"290":1},"fqnsFingerprint":"bc078efad540e3bf6a50aa65883f06412991f4ee13a15b60656dcd7541c8f6c8"},"9e17dece51f711227ef9fbc7842316de56d1256597b345e22d64e7bbbd63ab84":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nhttp_api_attributes = apigatewayv2.HttpApiAttributes(\n    http_api_id=\"httpApiId\",\n\n    # the properties below are optional\n    api_endpoint=\"apiEndpoint\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar httpApiAttributes = new HttpApiAttributes {\n    HttpApiId = \"httpApiId\",\n\n    // the properties below are optional\n    ApiEndpoint = \"apiEndpoint\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nHttpApiAttributes httpApiAttributes = HttpApiAttributes.builder()\n        .httpApiId(\"httpApiId\")\n\n        // the properties below are optional\n        .apiEndpoint(\"apiEndpoint\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nhttpApiAttributes := &HttpApiAttributes{\n\tHttpApiId: jsii.String(\"httpApiId\"),\n\n\t// the properties below are optional\n\tApiEndpoint: jsii.String(\"apiEndpoint\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst httpApiAttributes: apigatewayv2.HttpApiAttributes = {\n  httpApiId: 'httpApiId',\n\n  // the properties below are optional\n  apiEndpoint: 'apiEndpoint',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpApiAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpApiAttributes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpApiAttributes: apigatewayv2.HttpApiAttributes = {\n  httpApiId: 'httpApiId',\n\n  // the properties below are optional\n  apiEndpoint: 'apiEndpoint',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"7678b6a2b9a908725eedbba97cdd40cd6572c639e864db4faf502145d33d7848"},"25981b5a69c1c7b977d06c6f13a63037d137c7dcc8927924f41619719d17f925":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import HttpAlbIntegration\n\n# lb: elbv2.ApplicationLoadBalancer\n\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpAlbIntegration(\"DefaultIntegration\", listener,\n        parameter_mapping=apigwv2.ParameterMapping().custom(\"myKey\", \"myValue\")\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nApplicationLoadBalancer lb;\n\nvar listener = lb.AddListener(\"listener\", new BaseApplicationListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddApplicationTargetsProps {\n    Port = 80\n});\n\nvar httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpAlbIntegration(\"DefaultIntegration\", listener, new HttpAlbIntegrationProps {\n        ParameterMapping = new ParameterMapping().Custom(\"myKey\", \"myValue\")\n    })\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.HttpAlbIntegration;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.addListener(\"listener\", BaseApplicationListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddApplicationTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(HttpAlbIntegration.Builder.create(\"DefaultIntegration\", listener)\n                .parameterMapping(new ParameterMapping().custom(\"myKey\", \"myValue\"))\n                .build())\n        .build();","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar lb applicationLoadBalancer\n\nlistener := lb.AddListener(jsii.String(\"listener\"), &BaseApplicationListenerProps{\n\tPort: jsii.Number(80),\n})\nlistener.AddTargets(jsii.String(\"target\"), &AddApplicationTargetsProps{\n\tPort: jsii.Number(80),\n})\n\nhttpEndpoint := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyPrivateApi\"), &HttpApiProps{\n\tDefaultIntegration: awscdkawsapigatewayv2integrations.NewHttpAlbIntegration(jsii.String(\"DefaultIntegration\"), listener, &HttpAlbIntegrationProps{\n\t\tParameterMapping: apigwv2.NewParameterMapping().Custom(jsii.String(\"myKey\"), jsii.String(\"myValue\")),\n\t}),\n})","version":"1"},"$":{"source":"import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping().custom('myKey', 'myValue'),\n  }),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpApiProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegration","@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegrationProps","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-apigatewayv2.ParameterMapping","@aws-cdk/aws-apigatewayv2.ParameterMapping#custom","@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps","@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener","@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets","@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener","@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps","@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping().custom('myKey', 'myValue'),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":2,"10":7,"75":21,"104":1,"130":1,"153":1,"169":1,"193":4,"194":5,"196":3,"197":3,"225":3,"226":1,"242":3,"243":3,"254":1,"255":1,"257":1,"258":1,"281":4,"290":1},"fqnsFingerprint":"5de4abc06577d51fa8ecc43b20f773fdf309512696963c2fc348a70c4f6b1e95"},"22e00a77bb41ef4955bef5c7066b0f81f5db17d10b54137f459a36ad732bb172":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\nimport aws_cdk.core as cdk\n\n# http_api: apigatewayv2.HttpApi\n\nhttp_authorizer = apigatewayv2.HttpAuthorizer(self, \"MyHttpAuthorizer\",\n    http_api=http_api,\n    identity_source=[\"identitySource\"],\n    type=apigatewayv2.HttpAuthorizerType.IAM,\n\n    # the properties below are optional\n    authorizer_name=\"authorizerName\",\n    authorizer_uri=\"authorizerUri\",\n    enable_simple_responses=False,\n    jwt_audience=[\"jwtAudience\"],\n    jwt_issuer=\"jwtIssuer\",\n    payload_format_version=apigatewayv2.AuthorizerPayloadVersion.VERSION_1_0,\n    results_cache_ttl=cdk.Duration.minutes(30)\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\nusing Amazon.CDK;\n\nHttpApi httpApi;\nvar httpAuthorizer = new HttpAuthorizer(this, \"MyHttpAuthorizer\", new HttpAuthorizerProps {\n    HttpApi = httpApi,\n    IdentitySource = new [] { \"identitySource\" },\n    Type = HttpAuthorizerType.IAM,\n\n    // the properties below are optional\n    AuthorizerName = \"authorizerName\",\n    AuthorizerUri = \"authorizerUri\",\n    EnableSimpleResponses = false,\n    JwtAudience = new [] { \"jwtAudience\" },\n    JwtIssuer = \"jwtIssuer\",\n    PayloadFormatVersion = AuthorizerPayloadVersion.VERSION_1_0,\n    ResultsCacheTtl = Duration.Minutes(30)\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\nimport software.amazon.awscdk.core.*;\n\nHttpApi httpApi;\n\nHttpAuthorizer httpAuthorizer = HttpAuthorizer.Builder.create(this, \"MyHttpAuthorizer\")\n        .httpApi(httpApi)\n        .identitySource(List.of(\"identitySource\"))\n        .type(HttpAuthorizerType.IAM)\n\n        // the properties below are optional\n        .authorizerName(\"authorizerName\")\n        .authorizerUri(\"authorizerUri\")\n        .enableSimpleResponses(false)\n        .jwtAudience(List.of(\"jwtAudience\"))\n        .jwtIssuer(\"jwtIssuer\")\n        .payloadFormatVersion(AuthorizerPayloadVersion.VERSION_1_0)\n        .resultsCacheTtl(Duration.minutes(30))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar httpApi httpApi\n\nhttpAuthorizer := apigatewayv2.NewHttpAuthorizer(this, jsii.String(\"MyHttpAuthorizer\"), &HttpAuthorizerProps{\n\tHttpApi: httpApi,\n\tIdentitySource: []*string{\n\t\tjsii.String(\"identitySource\"),\n\t},\n\tType: apigatewayv2.HttpAuthorizerType_IAM,\n\n\t// the properties below are optional\n\tAuthorizerName: jsii.String(\"authorizerName\"),\n\tAuthorizerUri: jsii.String(\"authorizerUri\"),\n\tEnableSimpleResponses: jsii.Boolean(false),\n\tJwtAudience: []*string{\n\t\tjsii.String(\"jwtAudience\"),\n\t},\n\tJwtIssuer: jsii.String(\"jwtIssuer\"),\n\tPayloadFormatVersion: apigatewayv2.AuthorizerPayloadVersion_VERSION_1_0,\n\tResultsCacheTtl: cdk.Duration_Minutes(jsii.Number(30)),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\nconst httpAuthorizer = new apigatewayv2.HttpAuthorizer(this, 'MyHttpAuthorizer', {\n  httpApi: httpApi,\n  identitySource: ['identitySource'],\n  type: apigatewayv2.HttpAuthorizerType.IAM,\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  authorizerUri: 'authorizerUri',\n  enableSimpleResponses: false,\n  jwtAudience: ['jwtAudience'],\n  jwtIssuer: 'jwtIssuer',\n  payloadFormatVersion: apigatewayv2.AuthorizerPayloadVersion.VERSION_1_0,\n  resultsCacheTtl: cdk.Duration.minutes(30),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpAuthorizer"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.AuthorizerPayloadVersion","@aws-cdk/aws-apigatewayv2.AuthorizerPayloadVersion#VERSION_1_0","@aws-cdk/aws-apigatewayv2.HttpAuthorizer","@aws-cdk/aws-apigatewayv2.HttpAuthorizerProps","@aws-cdk/aws-apigatewayv2.HttpAuthorizerType","@aws-cdk/aws-apigatewayv2.HttpAuthorizerType#IAM","@aws-cdk/aws-apigatewayv2.IHttpApi","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpAuthorizer = new apigatewayv2.HttpAuthorizer(this, 'MyHttpAuthorizer', {\n  httpApi: httpApi,\n  identitySource: ['identitySource'],\n  type: apigatewayv2.HttpAuthorizerType.IAM,\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  authorizerUri: 'authorizerUri',\n  enableSimpleResponses: false,\n  jwtAudience: ['jwtAudience'],\n  jwtIssuer: 'jwtIssuer',\n  payloadFormatVersion: apigatewayv2.AuthorizerPayloadVersion.VERSION_1_0,\n  resultsCacheTtl: cdk.Duration.minutes(30),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":8,"75":28,"91":1,"104":1,"130":1,"153":1,"169":1,"192":2,"193":1,"194":7,"196":1,"197":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":10,"290":1},"fqnsFingerprint":"35c196bc9e08cbaba77c81ee574ce7277c3a7f5298bb5089595857c553ae185c"},"1ad5ae6211fb0e9a0e47c80d2d2ee524d0d6f445ce6101e3fc528115f848d460":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nhttp_authorizer_attributes = apigatewayv2.HttpAuthorizerAttributes(\n    authorizer_id=\"authorizerId\",\n    authorizer_type=\"authorizerType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar httpAuthorizerAttributes = new HttpAuthorizerAttributes {\n    AuthorizerId = \"authorizerId\",\n    AuthorizerType = \"authorizerType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nHttpAuthorizerAttributes httpAuthorizerAttributes = HttpAuthorizerAttributes.builder()\n        .authorizerId(\"authorizerId\")\n        .authorizerType(\"authorizerType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nhttpAuthorizerAttributes := &HttpAuthorizerAttributes{\n\tAuthorizerId: jsii.String(\"authorizerId\"),\n\tAuthorizerType: jsii.String(\"authorizerType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst httpAuthorizerAttributes: apigatewayv2.HttpAuthorizerAttributes = {\n  authorizerId: 'authorizerId',\n  authorizerType: 'authorizerType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpAuthorizerAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpAuthorizerAttributes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpAuthorizerAttributes: apigatewayv2.HttpAuthorizerAttributes = {\n  authorizerId: 'authorizerId',\n  authorizerType: 'authorizerType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"91cc3128b99be5dfd57204924ca9e3ceb2cd43290986e5deee0a7e712bcc8849"},"6209688265d05b1004aeb214cfb5912472dc607089f787410feb8de67150caa8":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\nimport aws_cdk.core as cdk\n\n# http_api: apigatewayv2.HttpApi\n\nhttp_authorizer_props = apigatewayv2.HttpAuthorizerProps(\n    http_api=http_api,\n    identity_source=[\"identitySource\"],\n    type=apigatewayv2.HttpAuthorizerType.IAM,\n\n    # the properties below are optional\n    authorizer_name=\"authorizerName\",\n    authorizer_uri=\"authorizerUri\",\n    enable_simple_responses=False,\n    jwt_audience=[\"jwtAudience\"],\n    jwt_issuer=\"jwtIssuer\",\n    payload_format_version=apigatewayv2.AuthorizerPayloadVersion.VERSION_1_0,\n    results_cache_ttl=cdk.Duration.minutes(30)\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\nusing Amazon.CDK;\n\nHttpApi httpApi;\nvar httpAuthorizerProps = new HttpAuthorizerProps {\n    HttpApi = httpApi,\n    IdentitySource = new [] { \"identitySource\" },\n    Type = HttpAuthorizerType.IAM,\n\n    // the properties below are optional\n    AuthorizerName = \"authorizerName\",\n    AuthorizerUri = \"authorizerUri\",\n    EnableSimpleResponses = false,\n    JwtAudience = new [] { \"jwtAudience\" },\n    JwtIssuer = \"jwtIssuer\",\n    PayloadFormatVersion = AuthorizerPayloadVersion.VERSION_1_0,\n    ResultsCacheTtl = Duration.Minutes(30)\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\nimport software.amazon.awscdk.core.*;\n\nHttpApi httpApi;\n\nHttpAuthorizerProps httpAuthorizerProps = HttpAuthorizerProps.builder()\n        .httpApi(httpApi)\n        .identitySource(List.of(\"identitySource\"))\n        .type(HttpAuthorizerType.IAM)\n\n        // the properties below are optional\n        .authorizerName(\"authorizerName\")\n        .authorizerUri(\"authorizerUri\")\n        .enableSimpleResponses(false)\n        .jwtAudience(List.of(\"jwtAudience\"))\n        .jwtIssuer(\"jwtIssuer\")\n        .payloadFormatVersion(AuthorizerPayloadVersion.VERSION_1_0)\n        .resultsCacheTtl(Duration.minutes(30))\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar httpApi httpApi\n\nhttpAuthorizerProps := &HttpAuthorizerProps{\n\tHttpApi: httpApi,\n\tIdentitySource: []*string{\n\t\tjsii.String(\"identitySource\"),\n\t},\n\tType: apigatewayv2.HttpAuthorizerType_IAM,\n\n\t// the properties below are optional\n\tAuthorizerName: jsii.String(\"authorizerName\"),\n\tAuthorizerUri: jsii.String(\"authorizerUri\"),\n\tEnableSimpleResponses: jsii.Boolean(false),\n\tJwtAudience: []*string{\n\t\tjsii.String(\"jwtAudience\"),\n\t},\n\tJwtIssuer: jsii.String(\"jwtIssuer\"),\n\tPayloadFormatVersion: apigatewayv2.AuthorizerPayloadVersion_VERSION_1_0,\n\tResultsCacheTtl: cdk.Duration_Minutes(jsii.Number(30)),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\nconst httpAuthorizerProps: apigatewayv2.HttpAuthorizerProps = {\n  httpApi: httpApi,\n  identitySource: ['identitySource'],\n  type: apigatewayv2.HttpAuthorizerType.IAM,\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  authorizerUri: 'authorizerUri',\n  enableSimpleResponses: false,\n  jwtAudience: ['jwtAudience'],\n  jwtIssuer: 'jwtIssuer',\n  payloadFormatVersion: apigatewayv2.AuthorizerPayloadVersion.VERSION_1_0,\n  resultsCacheTtl: cdk.Duration.minutes(30),\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpAuthorizerProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.AuthorizerPayloadVersion","@aws-cdk/aws-apigatewayv2.AuthorizerPayloadVersion#VERSION_1_0","@aws-cdk/aws-apigatewayv2.HttpAuthorizerProps","@aws-cdk/aws-apigatewayv2.HttpAuthorizerType","@aws-cdk/aws-apigatewayv2.HttpAuthorizerType#IAM","@aws-cdk/aws-apigatewayv2.IHttpApi","@aws-cdk/core.Duration","@aws-cdk/core.Duration#minutes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpAuthorizerProps: apigatewayv2.HttpAuthorizerProps = {\n  httpApi: httpApi,\n  identitySource: ['identitySource'],\n  type: apigatewayv2.HttpAuthorizerType.IAM,\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  authorizerUri: 'authorizerUri',\n  enableSimpleResponses: false,\n  jwtAudience: ['jwtAudience'],\n  jwtIssuer: 'jwtIssuer',\n  payloadFormatVersion: apigatewayv2.AuthorizerPayloadVersion.VERSION_1_0,\n  resultsCacheTtl: cdk.Duration.minutes(30),\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":1,"10":7,"75":28,"91":1,"130":1,"153":2,"169":2,"192":2,"193":1,"194":6,"196":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"281":10,"290":1},"fqnsFingerprint":"3f52a5b94e0a920b5957da3f5ce3902c069741c1f2ba35abf904b0a39960fdd9"},"24447ad1960116bdc287c3551f130ecb192f44a696c6db1ab76c2411c4b44f99":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# http_api: apigatewayv2.HttpApi\n# integration_credentials: apigatewayv2.IntegrationCredentials\n# parameter_mapping: apigatewayv2.ParameterMapping\n# payload_format_version: apigatewayv2.PayloadFormatVersion\n\nhttp_integration = apigatewayv2.HttpIntegration(self, \"MyHttpIntegration\",\n    http_api=http_api,\n    integration_type=apigatewayv2.HttpIntegrationType.HTTP_PROXY,\n\n    # the properties below are optional\n    connection_id=\"connectionId\",\n    connection_type=apigatewayv2.HttpConnectionType.VPC_LINK,\n    credentials=integration_credentials,\n    integration_subtype=apigatewayv2.HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n    integration_uri=\"integrationUri\",\n    method=apigatewayv2.HttpMethod.ANY,\n    parameter_mapping=parameter_mapping,\n    payload_format_version=payload_format_version,\n    secure_server_name=\"secureServerName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nHttpApi httpApi;\nIntegrationCredentials integrationCredentials;\nParameterMapping parameterMapping;\nPayloadFormatVersion payloadFormatVersion;\n\nvar httpIntegration = new HttpIntegration(this, \"MyHttpIntegration\", new HttpIntegrationProps {\n    HttpApi = httpApi,\n    IntegrationType = HttpIntegrationType.HTTP_PROXY,\n\n    // the properties below are optional\n    ConnectionId = \"connectionId\",\n    ConnectionType = HttpConnectionType.VPC_LINK,\n    Credentials = integrationCredentials,\n    IntegrationSubtype = HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n    IntegrationUri = \"integrationUri\",\n    Method = HttpMethod.ANY,\n    ParameterMapping = parameterMapping,\n    PayloadFormatVersion = payloadFormatVersion,\n    SecureServerName = \"secureServerName\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nHttpApi httpApi;\nIntegrationCredentials integrationCredentials;\nParameterMapping parameterMapping;\nPayloadFormatVersion payloadFormatVersion;\n\nHttpIntegration httpIntegration = HttpIntegration.Builder.create(this, \"MyHttpIntegration\")\n        .httpApi(httpApi)\n        .integrationType(HttpIntegrationType.HTTP_PROXY)\n\n        // the properties below are optional\n        .connectionId(\"connectionId\")\n        .connectionType(HttpConnectionType.VPC_LINK)\n        .credentials(integrationCredentials)\n        .integrationSubtype(HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS)\n        .integrationUri(\"integrationUri\")\n        .method(HttpMethod.ANY)\n        .parameterMapping(parameterMapping)\n        .payloadFormatVersion(payloadFormatVersion)\n        .secureServerName(\"secureServerName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar httpApi httpApi\nvar integrationCredentials integrationCredentials\nvar parameterMapping parameterMapping\nvar payloadFormatVersion payloadFormatVersion\n\nhttpIntegration := apigatewayv2.NewHttpIntegration(this, jsii.String(\"MyHttpIntegration\"), &HttpIntegrationProps{\n\tHttpApi: httpApi,\n\tIntegrationType: apigatewayv2.HttpIntegrationType_HTTP_PROXY,\n\n\t// the properties below are optional\n\tConnectionId: jsii.String(\"connectionId\"),\n\tConnectionType: apigatewayv2.HttpConnectionType_VPC_LINK,\n\tCredentials: integrationCredentials,\n\tIntegrationSubtype: apigatewayv2.HttpIntegrationSubtype_EVENTBRIDGE_PUT_EVENTS,\n\tIntegrationUri: jsii.String(\"integrationUri\"),\n\tMethod: apigatewayv2.HttpMethod_ANY,\n\tParameterMapping: parameterMapping,\n\tPayloadFormatVersion: payloadFormatVersion,\n\tSecureServerName: jsii.String(\"secureServerName\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\ndeclare const integrationCredentials: apigatewayv2.IntegrationCredentials;\ndeclare const parameterMapping: apigatewayv2.ParameterMapping;\ndeclare const payloadFormatVersion: apigatewayv2.PayloadFormatVersion;\nconst httpIntegration = new apigatewayv2.HttpIntegration(this, 'MyHttpIntegration', {\n  httpApi: httpApi,\n  integrationType: apigatewayv2.HttpIntegrationType.HTTP_PROXY,\n\n  // the properties below are optional\n  connectionId: 'connectionId',\n  connectionType: apigatewayv2.HttpConnectionType.VPC_LINK,\n  credentials: integrationCredentials,\n  integrationSubtype: apigatewayv2.HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n  integrationUri: 'integrationUri',\n  method: apigatewayv2.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  payloadFormatVersion: payloadFormatVersion,\n  secureServerName: 'secureServerName',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpIntegration"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpConnectionType","@aws-cdk/aws-apigatewayv2.HttpConnectionType#VPC_LINK","@aws-cdk/aws-apigatewayv2.HttpIntegration","@aws-cdk/aws-apigatewayv2.HttpIntegrationProps","@aws-cdk/aws-apigatewayv2.HttpIntegrationSubtype","@aws-cdk/aws-apigatewayv2.HttpIntegrationSubtype#EVENTBRIDGE_PUT_EVENTS","@aws-cdk/aws-apigatewayv2.HttpIntegrationType","@aws-cdk/aws-apigatewayv2.HttpIntegrationType#HTTP_PROXY","@aws-cdk/aws-apigatewayv2.HttpMethod","@aws-cdk/aws-apigatewayv2.HttpMethod#ANY","@aws-cdk/aws-apigatewayv2.IHttpApi","@aws-cdk/aws-apigatewayv2.IntegrationCredentials","@aws-cdk/aws-apigatewayv2.ParameterMapping","@aws-cdk/aws-apigatewayv2.PayloadFormatVersion","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\ndeclare const integrationCredentials: apigatewayv2.IntegrationCredentials;\ndeclare const parameterMapping: apigatewayv2.ParameterMapping;\ndeclare const payloadFormatVersion: apigatewayv2.PayloadFormatVersion;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpIntegration = new apigatewayv2.HttpIntegration(this, 'MyHttpIntegration', {\n  httpApi: httpApi,\n  integrationType: apigatewayv2.HttpIntegrationType.HTTP_PROXY,\n\n  // the properties below are optional\n  connectionId: 'connectionId',\n  connectionType: apigatewayv2.HttpConnectionType.VPC_LINK,\n  credentials: integrationCredentials,\n  integrationSubtype: apigatewayv2.HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n  integrationUri: 'integrationUri',\n  method: apigatewayv2.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  payloadFormatVersion: payloadFormatVersion,\n  secureServerName: 'secureServerName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":43,"104":1,"130":4,"153":4,"169":4,"193":1,"194":9,"197":1,"225":5,"242":5,"243":5,"254":1,"255":1,"256":1,"281":11,"290":1},"fqnsFingerprint":"fe0d1a5b27a242c16820de648a83f22d3aacd9a52de2f7945a4e183783c4a808"},"765b827e9ac82a4b86698dbc16eb51859f609c82ce3ab285665d1fb1496f48cf":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# http_api: apigatewayv2.HttpApi\n# integration_credentials: apigatewayv2.IntegrationCredentials\n# parameter_mapping: apigatewayv2.ParameterMapping\n# payload_format_version: apigatewayv2.PayloadFormatVersion\n\nhttp_integration_props = apigatewayv2.HttpIntegrationProps(\n    http_api=http_api,\n    integration_type=apigatewayv2.HttpIntegrationType.HTTP_PROXY,\n\n    # the properties below are optional\n    connection_id=\"connectionId\",\n    connection_type=apigatewayv2.HttpConnectionType.VPC_LINK,\n    credentials=integration_credentials,\n    integration_subtype=apigatewayv2.HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n    integration_uri=\"integrationUri\",\n    method=apigatewayv2.HttpMethod.ANY,\n    parameter_mapping=parameter_mapping,\n    payload_format_version=payload_format_version,\n    secure_server_name=\"secureServerName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nHttpApi httpApi;\nIntegrationCredentials integrationCredentials;\nParameterMapping parameterMapping;\nPayloadFormatVersion payloadFormatVersion;\n\nvar httpIntegrationProps = new HttpIntegrationProps {\n    HttpApi = httpApi,\n    IntegrationType = HttpIntegrationType.HTTP_PROXY,\n\n    // the properties below are optional\n    ConnectionId = \"connectionId\",\n    ConnectionType = HttpConnectionType.VPC_LINK,\n    Credentials = integrationCredentials,\n    IntegrationSubtype = HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n    IntegrationUri = \"integrationUri\",\n    Method = HttpMethod.ANY,\n    ParameterMapping = parameterMapping,\n    PayloadFormatVersion = payloadFormatVersion,\n    SecureServerName = \"secureServerName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nHttpApi httpApi;\nIntegrationCredentials integrationCredentials;\nParameterMapping parameterMapping;\nPayloadFormatVersion payloadFormatVersion;\n\nHttpIntegrationProps httpIntegrationProps = HttpIntegrationProps.builder()\n        .httpApi(httpApi)\n        .integrationType(HttpIntegrationType.HTTP_PROXY)\n\n        // the properties below are optional\n        .connectionId(\"connectionId\")\n        .connectionType(HttpConnectionType.VPC_LINK)\n        .credentials(integrationCredentials)\n        .integrationSubtype(HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS)\n        .integrationUri(\"integrationUri\")\n        .method(HttpMethod.ANY)\n        .parameterMapping(parameterMapping)\n        .payloadFormatVersion(payloadFormatVersion)\n        .secureServerName(\"secureServerName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar httpApi httpApi\nvar integrationCredentials integrationCredentials\nvar parameterMapping parameterMapping\nvar payloadFormatVersion payloadFormatVersion\n\nhttpIntegrationProps := &HttpIntegrationProps{\n\tHttpApi: httpApi,\n\tIntegrationType: apigatewayv2.HttpIntegrationType_HTTP_PROXY,\n\n\t// the properties below are optional\n\tConnectionId: jsii.String(\"connectionId\"),\n\tConnectionType: apigatewayv2.HttpConnectionType_VPC_LINK,\n\tCredentials: integrationCredentials,\n\tIntegrationSubtype: apigatewayv2.HttpIntegrationSubtype_EVENTBRIDGE_PUT_EVENTS,\n\tIntegrationUri: jsii.String(\"integrationUri\"),\n\tMethod: apigatewayv2.HttpMethod_ANY,\n\tParameterMapping: parameterMapping,\n\tPayloadFormatVersion: payloadFormatVersion,\n\tSecureServerName: jsii.String(\"secureServerName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\ndeclare const integrationCredentials: apigatewayv2.IntegrationCredentials;\ndeclare const parameterMapping: apigatewayv2.ParameterMapping;\ndeclare const payloadFormatVersion: apigatewayv2.PayloadFormatVersion;\nconst httpIntegrationProps: apigatewayv2.HttpIntegrationProps = {\n  httpApi: httpApi,\n  integrationType: apigatewayv2.HttpIntegrationType.HTTP_PROXY,\n\n  // the properties below are optional\n  connectionId: 'connectionId',\n  connectionType: apigatewayv2.HttpConnectionType.VPC_LINK,\n  credentials: integrationCredentials,\n  integrationSubtype: apigatewayv2.HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n  integrationUri: 'integrationUri',\n  method: apigatewayv2.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  payloadFormatVersion: payloadFormatVersion,\n  secureServerName: 'secureServerName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpIntegrationProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpConnectionType","@aws-cdk/aws-apigatewayv2.HttpConnectionType#VPC_LINK","@aws-cdk/aws-apigatewayv2.HttpIntegrationProps","@aws-cdk/aws-apigatewayv2.HttpIntegrationSubtype","@aws-cdk/aws-apigatewayv2.HttpIntegrationSubtype#EVENTBRIDGE_PUT_EVENTS","@aws-cdk/aws-apigatewayv2.HttpIntegrationType","@aws-cdk/aws-apigatewayv2.HttpIntegrationType#HTTP_PROXY","@aws-cdk/aws-apigatewayv2.HttpMethod","@aws-cdk/aws-apigatewayv2.HttpMethod#ANY","@aws-cdk/aws-apigatewayv2.IHttpApi","@aws-cdk/aws-apigatewayv2.IntegrationCredentials","@aws-cdk/aws-apigatewayv2.ParameterMapping","@aws-cdk/aws-apigatewayv2.PayloadFormatVersion"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\ndeclare const integrationCredentials: apigatewayv2.IntegrationCredentials;\ndeclare const parameterMapping: apigatewayv2.ParameterMapping;\ndeclare const payloadFormatVersion: apigatewayv2.PayloadFormatVersion;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpIntegrationProps: apigatewayv2.HttpIntegrationProps = {\n  httpApi: httpApi,\n  integrationType: apigatewayv2.HttpIntegrationType.HTTP_PROXY,\n\n  // the properties below are optional\n  connectionId: 'connectionId',\n  connectionType: apigatewayv2.HttpConnectionType.VPC_LINK,\n  credentials: integrationCredentials,\n  integrationSubtype: apigatewayv2.HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n  integrationUri: 'integrationUri',\n  method: apigatewayv2.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  payloadFormatVersion: payloadFormatVersion,\n  secureServerName: 'secureServerName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":43,"130":4,"153":5,"169":5,"193":1,"194":8,"225":5,"242":5,"243":5,"254":1,"255":1,"256":1,"281":11,"290":1},"fqnsFingerprint":"69f4fa4d3c28774b5ccf176ea3ba41c005483ac0f0844121cd82dfb810689549"},"a95f43f61d903d37d9d245e0237dc180dcb243da0ed1d67a6fac35aab638d4ee":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import HttpUrlIntegration, HttpLambdaIntegration\n\n# books_default_fn: lambda.Function\n\n\nget_books_integration = HttpUrlIntegration(\"GetBooksIntegration\", \"https://get-books-proxy.myproxy.internal\")\nbooks_default_integration = HttpLambdaIntegration(\"BooksIntegration\", books_default_fn)\n\nhttp_api = apigwv2.HttpApi(self, \"HttpApi\")\n\nhttp_api.add_routes(\n    path=\"/books\",\n    methods=[apigwv2.HttpMethod.GET],\n    integration=get_books_integration\n)\nhttp_api.add_routes(\n    path=\"/books\",\n    methods=[apigwv2.HttpMethod.ANY],\n    integration=books_default_integration\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction booksDefaultFn;\n\n\nvar getBooksIntegration = new HttpUrlIntegration(\"GetBooksIntegration\", \"https://get-books-proxy.myproxy.internal\");\nvar booksDefaultIntegration = new HttpLambdaIntegration(\"BooksIntegration\", booksDefaultFn);\n\nvar httpApi = new HttpApi(this, \"HttpApi\");\n\nhttpApi.AddRoutes(new AddRoutesOptions {\n    Path = \"/books\",\n    Methods = new [] { HttpMethod.GET },\n    Integration = getBooksIntegration\n});\nhttpApi.AddRoutes(new AddRoutesOptions {\n    Path = \"/books\",\n    Methods = new [] { HttpMethod.ANY },\n    Integration = booksDefaultIntegration\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.HttpUrlIntegration;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.HttpLambdaIntegration;\n\nFunction booksDefaultFn;\n\n\nHttpUrlIntegration getBooksIntegration = new HttpUrlIntegration(\"GetBooksIntegration\", \"https://get-books-proxy.myproxy.internal\");\nHttpLambdaIntegration booksDefaultIntegration = new HttpLambdaIntegration(\"BooksIntegration\", booksDefaultFn);\n\nHttpApi httpApi = new HttpApi(this, \"HttpApi\");\n\nhttpApi.addRoutes(AddRoutesOptions.builder()\n        .path(\"/books\")\n        .methods(List.of(HttpMethod.GET))\n        .integration(getBooksIntegration)\n        .build());\nhttpApi.addRoutes(AddRoutesOptions.builder()\n        .path(\"/books\")\n        .methods(List.of(HttpMethod.ANY))\n        .integration(booksDefaultIntegration)\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar booksDefaultFn function\n\n\ngetBooksIntegration := awscdkawsapigatewayv2integrations.NewHttpUrlIntegration(jsii.String(\"GetBooksIntegration\"), jsii.String(\"https://get-books-proxy.myproxy.internal\"))\nbooksDefaultIntegration := awscdkawsapigatewayv2integrations.NewHttpLambdaIntegration(jsii.String(\"BooksIntegration\"), booksDefaultFn)\n\nhttpApi := apigwv2.NewHttpApi(this, jsii.String(\"HttpApi\"))\n\nhttpApi.AddRoutes(&AddRoutesOptions{\n\tPath: jsii.String(\"/books\"),\n\tMethods: []httpMethod{\n\t\tapigwv2.*httpMethod_GET,\n\t},\n\tIntegration: getBooksIntegration,\n})\nhttpApi.AddRoutes(&AddRoutesOptions{\n\tPath: jsii.String(\"/books\"),\n\tMethods: []*httpMethod{\n\t\tapigwv2.*httpMethod_ANY,\n\t},\n\tIntegration: booksDefaultIntegration,\n})","version":"1"},"$":{"source":"import { HttpUrlIntegration, HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst getBooksIntegration = new HttpUrlIntegration('GetBooksIntegration', 'https://get-books-proxy.myproxy.internal');\n\ndeclare const booksDefaultFn: lambda.Function;\nconst booksDefaultIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: getBooksIntegration,\n});\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.ANY ],\n  integration: booksDefaultIntegration,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpMethod"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.HttpLambdaIntegration","@aws-cdk/aws-apigatewayv2-integrations.HttpUrlIntegration","@aws-cdk/aws-apigatewayv2.AddRoutesOptions","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApi#addRoutes","@aws-cdk/aws-apigatewayv2.HttpMethod","@aws-cdk/aws-apigatewayv2.HttpMethod#ANY","@aws-cdk/aws-apigatewayv2.HttpMethod#GET","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpUrlIntegration, HttpLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const booksDefaultFn: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst getBooksIntegration = new HttpUrlIntegration('GetBooksIntegration', 'https://get-books-proxy.myproxy.internal');\nconst booksDefaultIntegration = new HttpLambdaIntegration('BooksIntegration', booksDefaultFn);\n\nconst httpApi = new apigwv2.HttpApi(this, 'HttpApi');\n\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.GET ],\n  integration: getBooksIntegration,\n});\nhttpApi.addRoutes({\n  path: '/books',\n  methods: [ apigwv2.HttpMethod.ANY ],\n  integration: booksDefaultIntegration,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":7,"75":31,"104":1,"130":1,"153":1,"169":1,"192":2,"193":2,"194":7,"196":2,"197":3,"225":4,"226":2,"242":4,"243":4,"254":1,"255":1,"257":1,"258":2,"281":6,"290":1},"fqnsFingerprint":"f2a9afe521d99b96f9c734d81075f37a1ea2f1832580124480bdd8f475be4f19"},"84d34dfa21fe6871c4eb0e7e16009df2365c509e9ff036c4ed06c8df5183952f":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_authorizers import HttpJwtAuthorizer\nfrom aws_cdk.aws_apigatewayv2_integrations import HttpUrlIntegration\n\n\nissuer = \"https://test.us.auth0.com\"\nauthorizer = HttpJwtAuthorizer(\"DefaultAuthorizer\", issuer,\n    jwt_audience=[\"3131231\"]\n)\n\napi = apigwv2.HttpApi(self, \"HttpApi\",\n    default_authorizer=authorizer,\n    default_authorization_scopes=[\"read:books\"]\n)\n\napi.add_routes(\n    integration=HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\"),\n    path=\"/books\",\n    methods=[apigwv2.HttpMethod.GET]\n)\n\napi.add_routes(\n    integration=HttpUrlIntegration(\"BooksIdIntegration\", \"https://get-books-proxy.myproxy.internal\"),\n    path=\"/books/{id}\",\n    methods=[apigwv2.HttpMethod.GET]\n)\n\napi.add_routes(\n    integration=HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\"),\n    path=\"/books\",\n    methods=[apigwv2.HttpMethod.POST],\n    authorization_scopes=[\"write:books\"]\n)\n\napi.add_routes(\n    integration=HttpUrlIntegration(\"LoginIntegration\", \"https://get-books-proxy.myproxy.internal\"),\n    path=\"/login\",\n    methods=[apigwv2.HttpMethod.POST],\n    authorizer=apigwv2.HttpNoneAuthorizer()\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Authorizers;\nusing Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\n\nvar issuer = \"https://test.us.auth0.com\";\nvar authorizer = new HttpJwtAuthorizer(\"DefaultAuthorizer\", issuer, new HttpJwtAuthorizerProps {\n    JwtAudience = new [] { \"3131231\" }\n});\n\nvar api = new HttpApi(this, \"HttpApi\", new HttpApiProps {\n    DefaultAuthorizer = authorizer,\n    DefaultAuthorizationScopes = new [] { \"read:books\" }\n});\n\napi.AddRoutes(new AddRoutesOptions {\n    Integration = new HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\"),\n    Path = \"/books\",\n    Methods = new [] { HttpMethod.GET }\n});\n\napi.AddRoutes(new AddRoutesOptions {\n    Integration = new HttpUrlIntegration(\"BooksIdIntegration\", \"https://get-books-proxy.myproxy.internal\"),\n    Path = \"/books/{id}\",\n    Methods = new [] { HttpMethod.GET }\n});\n\napi.AddRoutes(new AddRoutesOptions {\n    Integration = new HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\"),\n    Path = \"/books\",\n    Methods = new [] { HttpMethod.POST },\n    AuthorizationScopes = new [] { \"write:books\" }\n});\n\napi.AddRoutes(new AddRoutesOptions {\n    Integration = new HttpUrlIntegration(\"LoginIntegration\", \"https://get-books-proxy.myproxy.internal\"),\n    Path = \"/login\",\n    Methods = new [] { HttpMethod.POST },\n    Authorizer = new HttpNoneAuthorizer()\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.authorizers.HttpJwtAuthorizer;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.HttpUrlIntegration;\n\n\nString issuer = \"https://test.us.auth0.com\";\nHttpJwtAuthorizer authorizer = HttpJwtAuthorizer.Builder.create(\"DefaultAuthorizer\", issuer)\n        .jwtAudience(List.of(\"3131231\"))\n        .build();\n\nHttpApi api = HttpApi.Builder.create(this, \"HttpApi\")\n        .defaultAuthorizer(authorizer)\n        .defaultAuthorizationScopes(List.of(\"read:books\"))\n        .build();\n\napi.addRoutes(AddRoutesOptions.builder()\n        .integration(new HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\"))\n        .path(\"/books\")\n        .methods(List.of(HttpMethod.GET))\n        .build());\n\napi.addRoutes(AddRoutesOptions.builder()\n        .integration(new HttpUrlIntegration(\"BooksIdIntegration\", \"https://get-books-proxy.myproxy.internal\"))\n        .path(\"/books/{id}\")\n        .methods(List.of(HttpMethod.GET))\n        .build());\n\napi.addRoutes(AddRoutesOptions.builder()\n        .integration(new HttpUrlIntegration(\"BooksIntegration\", \"https://get-books-proxy.myproxy.internal\"))\n        .path(\"/books\")\n        .methods(List.of(HttpMethod.POST))\n        .authorizationScopes(List.of(\"write:books\"))\n        .build());\n\napi.addRoutes(AddRoutesOptions.builder()\n        .integration(new HttpUrlIntegration(\"LoginIntegration\", \"https://get-books-proxy.myproxy.internal\"))\n        .path(\"/login\")\n        .methods(List.of(HttpMethod.POST))\n        .authorizer(new HttpNoneAuthorizer())\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2authorizers\"\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\n\nissuer := \"https://test.us.auth0.com\"\nauthorizer := awscdkawsapigatewayv2authorizers.NewHttpJwtAuthorizer(jsii.String(\"DefaultAuthorizer\"), issuer, &HttpJwtAuthorizerProps{\n\tJwtAudience: []*string{\n\t\tjsii.String(\"3131231\"),\n\t},\n})\n\napi := apigwv2.NewHttpApi(this, jsii.String(\"HttpApi\"), &HttpApiProps{\n\tDefaultAuthorizer: authorizer,\n\tDefaultAuthorizationScopes: []*string{\n\t\tjsii.String(\"read:books\"),\n\t},\n})\n\napi.AddRoutes(&AddRoutesOptions{\n\tIntegration: awscdkawsapigatewayv2integrations.NewHttpUrlIntegration(jsii.String(\"BooksIntegration\"), jsii.String(\"https://get-books-proxy.myproxy.internal\")),\n\tPath: jsii.String(\"/books\"),\n\tMethods: []httpMethod{\n\t\tapigwv2.*httpMethod_GET,\n\t},\n})\n\napi.AddRoutes(&AddRoutesOptions{\n\tIntegration: *awscdkawsapigatewayv2integrations.NewHttpUrlIntegration(jsii.String(\"BooksIdIntegration\"), jsii.String(\"https://get-books-proxy.myproxy.internal\")),\n\tPath: jsii.String(\"/books/{id}\"),\n\tMethods: []*httpMethod{\n\t\tapigwv2.*httpMethod_GET,\n\t},\n})\n\napi.AddRoutes(&AddRoutesOptions{\n\tIntegration: *awscdkawsapigatewayv2integrations.NewHttpUrlIntegration(jsii.String(\"BooksIntegration\"), jsii.String(\"https://get-books-proxy.myproxy.internal\")),\n\tPath: jsii.String(\"/books\"),\n\tMethods: []*httpMethod{\n\t\tapigwv2.*httpMethod_POST,\n\t},\n\tAuthorizationScopes: []*string{\n\t\tjsii.String(\"write:books\"),\n\t},\n})\n\napi.AddRoutes(&AddRoutesOptions{\n\tIntegration: *awscdkawsapigatewayv2integrations.NewHttpUrlIntegration(jsii.String(\"LoginIntegration\"), jsii.String(\"https://get-books-proxy.myproxy.internal\")),\n\tPath: jsii.String(\"/login\"),\n\tMethods: []*httpMethod{\n\t\tapigwv2.*httpMethod_POST,\n\t},\n\tAuthorizer: apigwv2.NewHttpNoneAuthorizer(),\n})","version":"1"},"$":{"source":"import { HttpJwtAuthorizer } from '@aws-cdk/aws-apigatewayv2-authorizers';\nimport { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst issuer = 'https://test.us.auth0.com';\nconst authorizer = new HttpJwtAuthorizer('DefaultAuthorizer', issuer, {\n  jwtAudience: ['3131231'],\n});\n\nconst api = new apigwv2.HttpApi(this, 'HttpApi', {\n  defaultAuthorizer: authorizer,\n  defaultAuthorizationScopes: ['read:books'],\n});\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books',\n  methods: [apigwv2.HttpMethod.GET],\n});\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIdIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books/{id}',\n  methods: [apigwv2.HttpMethod.GET],\n});\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books',\n  methods: [apigwv2.HttpMethod.POST],\n  authorizationScopes: ['write:books']\n});\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('LoginIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/login',\n  methods: [apigwv2.HttpMethod.POST],\n  authorizer: new apigwv2.HttpNoneAuthorizer(),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpNoneAuthorizer"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-authorizers.HttpJwtAuthorizer","@aws-cdk/aws-apigatewayv2-authorizers.HttpJwtAuthorizerProps","@aws-cdk/aws-apigatewayv2-integrations.HttpUrlIntegration","@aws-cdk/aws-apigatewayv2.AddRoutesOptions","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApi#addRoutes","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/aws-apigatewayv2.HttpMethod","@aws-cdk/aws-apigatewayv2.HttpMethod#GET","@aws-cdk/aws-apigatewayv2.HttpMethod#POST","@aws-cdk/aws-apigatewayv2.HttpNoneAuthorizer","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-apigatewayv2.IHttpRouteAuthorizer","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpJwtAuthorizer } from '@aws-cdk/aws-apigatewayv2-authorizers';\nimport { HttpUrlIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst issuer = 'https://test.us.auth0.com';\nconst authorizer = new HttpJwtAuthorizer('DefaultAuthorizer', issuer, {\n  jwtAudience: ['3131231'],\n});\n\nconst api = new apigwv2.HttpApi(this, 'HttpApi', {\n  defaultAuthorizer: authorizer,\n  defaultAuthorizationScopes: ['read:books'],\n});\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books',\n  methods: [apigwv2.HttpMethod.GET],\n});\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIdIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books/{id}',\n  methods: [apigwv2.HttpMethod.GET],\n});\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('BooksIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/books',\n  methods: [apigwv2.HttpMethod.POST],\n  authorizationScopes: ['write:books']\n});\n\napi.addRoutes({\n  integration: new HttpUrlIntegration('LoginIntegration', 'https://get-books-proxy.myproxy.internal'),\n  path: '/login',\n  methods: [apigwv2.HttpMethod.POST],\n  authorizer: new apigwv2.HttpNoneAuthorizer(),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":20,"75":53,"104":1,"192":7,"193":6,"194":14,"196":4,"197":7,"225":3,"226":4,"242":3,"243":3,"254":2,"255":2,"257":2,"258":2,"281":17,"290":1},"fqnsFingerprint":"d6d6e1d2ff87100697cd56be24e6c71d43ca1f03a2e07d052f2edc5b2da37bef"},"6d841adc82a06e876913c6339c85ca403d0089dbac4f2f8d224b1202d18ca9f7":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# http_api: apigatewayv2.HttpApi\n# http_route_authorizer: apigatewayv2.IHttpRouteAuthorizer\n# http_route_integration: apigatewayv2.HttpRouteIntegration\n# http_route_key: apigatewayv2.HttpRouteKey\n\nhttp_route = apigatewayv2.HttpRoute(self, \"MyHttpRoute\",\n    http_api=http_api,\n    integration=http_route_integration,\n    route_key=http_route_key,\n\n    # the properties below are optional\n    authorization_scopes=[\"authorizationScopes\"],\n    authorizer=http_route_authorizer\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nHttpApi httpApi;\nIHttpRouteAuthorizer httpRouteAuthorizer;\nHttpRouteIntegration httpRouteIntegration;\nHttpRouteKey httpRouteKey;\n\nvar httpRoute = new HttpRoute(this, \"MyHttpRoute\", new HttpRouteProps {\n    HttpApi = httpApi,\n    Integration = httpRouteIntegration,\n    RouteKey = httpRouteKey,\n\n    // the properties below are optional\n    AuthorizationScopes = new [] { \"authorizationScopes\" },\n    Authorizer = httpRouteAuthorizer\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nHttpApi httpApi;\nIHttpRouteAuthorizer httpRouteAuthorizer;\nHttpRouteIntegration httpRouteIntegration;\nHttpRouteKey httpRouteKey;\n\nHttpRoute httpRoute = HttpRoute.Builder.create(this, \"MyHttpRoute\")\n        .httpApi(httpApi)\n        .integration(httpRouteIntegration)\n        .routeKey(httpRouteKey)\n\n        // the properties below are optional\n        .authorizationScopes(List.of(\"authorizationScopes\"))\n        .authorizer(httpRouteAuthorizer)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar httpApi httpApi\nvar httpRouteAuthorizer iHttpRouteAuthorizer\nvar httpRouteIntegration httpRouteIntegration\nvar httpRouteKey httpRouteKey\n\nhttpRoute := apigatewayv2.NewHttpRoute(this, jsii.String(\"MyHttpRoute\"), &HttpRouteProps{\n\tHttpApi: httpApi,\n\tIntegration: httpRouteIntegration,\n\tRouteKey: httpRouteKey,\n\n\t// the properties below are optional\n\tAuthorizationScopes: []*string{\n\t\tjsii.String(\"authorizationScopes\"),\n\t},\n\tAuthorizer: httpRouteAuthorizer,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\ndeclare const httpRouteAuthorizer: apigatewayv2.IHttpRouteAuthorizer;\ndeclare const httpRouteIntegration: apigatewayv2.HttpRouteIntegration;\ndeclare const httpRouteKey: apigatewayv2.HttpRouteKey;\nconst httpRoute = new apigatewayv2.HttpRoute(this, 'MyHttpRoute', {\n  httpApi: httpApi,\n  integration: httpRouteIntegration,\n  routeKey: httpRouteKey,\n\n  // the properties below are optional\n  authorizationScopes: ['authorizationScopes'],\n  authorizer: httpRouteAuthorizer,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpRoute"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpRoute","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-apigatewayv2.HttpRouteKey","@aws-cdk/aws-apigatewayv2.HttpRouteProps","@aws-cdk/aws-apigatewayv2.IHttpApi","@aws-cdk/aws-apigatewayv2.IHttpRouteAuthorizer","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\ndeclare const httpRouteAuthorizer: apigatewayv2.IHttpRouteAuthorizer;\ndeclare const httpRouteIntegration: apigatewayv2.HttpRouteIntegration;\ndeclare const httpRouteKey: apigatewayv2.HttpRouteKey;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpRoute = new apigatewayv2.HttpRoute(this, 'MyHttpRoute', {\n  httpApi: httpApi,\n  integration: httpRouteIntegration,\n  routeKey: httpRouteKey,\n\n  // the properties below are optional\n  authorizationScopes: ['authorizationScopes'],\n  authorizer: httpRouteAuthorizer,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":25,"104":1,"130":4,"153":4,"169":4,"192":1,"193":1,"194":1,"197":1,"225":5,"242":5,"243":5,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"cb2f920933a41eb577ecf7cc06fe84cd0ecdfb8b7d818fec86715128afd684a6"},"923919ec49c9c76f4309a9c5a4c8a58688275692d8c00dc632d0fc14d089e977":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\nimport constructs as constructs\n\n# construct: constructs.Construct\n# http_route: apigatewayv2.HttpRoute\n\nhttp_route_authorizer_bind_options = apigatewayv2.HttpRouteAuthorizerBindOptions(\n    route=http_route,\n    scope=construct\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\nusing Constructs;\n\nConstruct construct;\nHttpRoute httpRoute;\n\nvar httpRouteAuthorizerBindOptions = new HttpRouteAuthorizerBindOptions {\n    Route = httpRoute,\n    Scope = construct\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\nimport software.constructs.*;\n\nConstruct construct;\nHttpRoute httpRoute;\n\nHttpRouteAuthorizerBindOptions httpRouteAuthorizerBindOptions = HttpRouteAuthorizerBindOptions.builder()\n        .route(httpRoute)\n        .scope(construct)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\nimport constructs \"github.com/aws/constructs-go/constructs\"\n\nvar construct construct\nvar httpRoute httpRoute\n\nhttpRouteAuthorizerBindOptions := &HttpRouteAuthorizerBindOptions{\n\tRoute: httpRoute,\n\tScope: construct,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as constructs from 'constructs';\n\ndeclare const construct: constructs.Construct;\ndeclare const httpRoute: apigatewayv2.HttpRoute;\nconst httpRouteAuthorizerBindOptions: apigatewayv2.HttpRouteAuthorizerBindOptions = {\n  route: httpRoute,\n  scope: construct,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpRouteAuthorizerBindOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpRouteAuthorizerBindOptions","@aws-cdk/aws-apigatewayv2.IHttpRoute","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as constructs from 'constructs';\n\ndeclare const construct: constructs.Construct;\ndeclare const httpRoute: apigatewayv2.HttpRoute;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpRouteAuthorizerBindOptions: apigatewayv2.HttpRouteAuthorizerBindOptions = {\n  route: httpRoute,\n  scope: construct,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":15,"130":2,"153":3,"169":3,"193":1,"225":3,"242":3,"243":3,"254":2,"255":2,"256":2,"281":2,"290":1},"fqnsFingerprint":"fad802d8d4975edd0a83e0d33c991a7b70dcec06602c2789e6374cadd39edeef"},"e9923190d5154e3dbab7e4c3ea8a58471cf8c2a9e803d753f11f4cc099ba1e78":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nhttp_route_authorizer_config = apigatewayv2.HttpRouteAuthorizerConfig(\n    authorization_type=\"authorizationType\",\n\n    # the properties below are optional\n    authorization_scopes=[\"authorizationScopes\"],\n    authorizer_id=\"authorizerId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar httpRouteAuthorizerConfig = new HttpRouteAuthorizerConfig {\n    AuthorizationType = \"authorizationType\",\n\n    // the properties below are optional\n    AuthorizationScopes = new [] { \"authorizationScopes\" },\n    AuthorizerId = \"authorizerId\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nHttpRouteAuthorizerConfig httpRouteAuthorizerConfig = HttpRouteAuthorizerConfig.builder()\n        .authorizationType(\"authorizationType\")\n\n        // the properties below are optional\n        .authorizationScopes(List.of(\"authorizationScopes\"))\n        .authorizerId(\"authorizerId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nhttpRouteAuthorizerConfig := &HttpRouteAuthorizerConfig{\n\tAuthorizationType: jsii.String(\"authorizationType\"),\n\n\t// the properties below are optional\n\tAuthorizationScopes: []*string{\n\t\tjsii.String(\"authorizationScopes\"),\n\t},\n\tAuthorizerId: jsii.String(\"authorizerId\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst httpRouteAuthorizerConfig: apigatewayv2.HttpRouteAuthorizerConfig = {\n  authorizationType: 'authorizationType',\n\n  // the properties below are optional\n  authorizationScopes: ['authorizationScopes'],\n  authorizerId: 'authorizerId',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpRouteAuthorizerConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpRouteAuthorizerConfig"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpRouteAuthorizerConfig: apigatewayv2.HttpRouteAuthorizerConfig = {\n  authorizationType: 'authorizationType',\n\n  // the properties below are optional\n  authorizationScopes: ['authorizationScopes'],\n  authorizerId: 'authorizerId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":7,"153":1,"169":1,"192":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"e8dad8452a630cefe2f70b36f90c170b3f3c77d3ba352d84de593440d609b0de"},"46e206b7c3db947eaa44f75021eb23f68478b3dc368ce1b2e90726d1175c7831":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import HttpAlbIntegration\n\n# lb: elbv2.ApplicationLoadBalancer\n\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpAlbIntegration(\"DefaultIntegration\", listener,\n        parameter_mapping=apigwv2.ParameterMapping().custom(\"myKey\", \"myValue\")\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nApplicationLoadBalancer lb;\n\nvar listener = lb.AddListener(\"listener\", new BaseApplicationListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddApplicationTargetsProps {\n    Port = 80\n});\n\nvar httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpAlbIntegration(\"DefaultIntegration\", listener, new HttpAlbIntegrationProps {\n        ParameterMapping = new ParameterMapping().Custom(\"myKey\", \"myValue\")\n    })\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.HttpAlbIntegration;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.addListener(\"listener\", BaseApplicationListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddApplicationTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(HttpAlbIntegration.Builder.create(\"DefaultIntegration\", listener)\n                .parameterMapping(new ParameterMapping().custom(\"myKey\", \"myValue\"))\n                .build())\n        .build();","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar lb applicationLoadBalancer\n\nlistener := lb.AddListener(jsii.String(\"listener\"), &BaseApplicationListenerProps{\n\tPort: jsii.Number(80),\n})\nlistener.AddTargets(jsii.String(\"target\"), &AddApplicationTargetsProps{\n\tPort: jsii.Number(80),\n})\n\nhttpEndpoint := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyPrivateApi\"), &HttpApiProps{\n\tDefaultIntegration: awscdkawsapigatewayv2integrations.NewHttpAlbIntegration(jsii.String(\"DefaultIntegration\"), listener, &HttpAlbIntegrationProps{\n\t\tParameterMapping: apigwv2.NewParameterMapping().Custom(jsii.String(\"myKey\"), jsii.String(\"myValue\")),\n\t}),\n})","version":"1"},"$":{"source":"import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping().custom('myKey', 'myValue'),\n  }),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpRouteIntegration"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegration","@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegrationProps","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-apigatewayv2.ParameterMapping","@aws-cdk/aws-apigatewayv2.ParameterMapping#custom","@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps","@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener","@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets","@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener","@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps","@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping().custom('myKey', 'myValue'),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":2,"10":7,"75":21,"104":1,"130":1,"153":1,"169":1,"193":4,"194":5,"196":3,"197":3,"225":3,"226":1,"242":3,"243":3,"254":1,"255":1,"257":1,"258":1,"281":4,"290":1},"fqnsFingerprint":"5de4abc06577d51fa8ecc43b20f773fdf309512696963c2fc348a70c4f6b1e95"},"814a744be3dbe5d9760e99e884efc0e92828284eb4c0dd760c182d10e9925c48":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\nimport aws_cdk.core as cdk\n\n# construct: cdk.Construct\n# http_route: apigatewayv2.HttpRoute\n\nhttp_route_integration_bind_options = apigatewayv2.HttpRouteIntegrationBindOptions(\n    route=http_route,\n    scope=construct\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\nusing Amazon.CDK;\n\nConstruct construct;\nHttpRoute httpRoute;\nvar httpRouteIntegrationBindOptions = new HttpRouteIntegrationBindOptions {\n    Route = httpRoute,\n    Scope = construct\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\nimport software.amazon.awscdk.core.*;\n\nConstruct construct;\nHttpRoute httpRoute;\n\nHttpRouteIntegrationBindOptions httpRouteIntegrationBindOptions = HttpRouteIntegrationBindOptions.builder()\n        .route(httpRoute)\n        .scope(construct)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar construct construct\nvar httpRoute httpRoute\n\nhttpRouteIntegrationBindOptions := &HttpRouteIntegrationBindOptions{\n\tRoute: httpRoute,\n\tScope: construct,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const construct: cdk.Construct;\ndeclare const httpRoute: apigatewayv2.HttpRoute;\nconst httpRouteIntegrationBindOptions: apigatewayv2.HttpRouteIntegrationBindOptions = {\n  route: httpRoute,\n  scope: construct,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationBindOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationBindOptions","@aws-cdk/aws-apigatewayv2.IHttpRoute","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const construct: cdk.Construct;\ndeclare const httpRoute: apigatewayv2.HttpRoute;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpRouteIntegrationBindOptions: apigatewayv2.HttpRouteIntegrationBindOptions = {\n  route: httpRoute,\n  scope: construct,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":15,"130":2,"153":3,"169":3,"193":1,"225":3,"242":3,"243":3,"254":2,"255":2,"256":2,"281":2,"290":1},"fqnsFingerprint":"e4f585041f7c65bcbc8d2138db13736efe0b554fb6428a34aedbdc0c040dac4f"},"d4d49dfe6af88d2bb4cdc8874cf9a0ca16a7ab31cf9c651ff573106d44c26ace":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# integration_credentials: apigatewayv2.IntegrationCredentials\n# parameter_mapping: apigatewayv2.ParameterMapping\n# payload_format_version: apigatewayv2.PayloadFormatVersion\n\nhttp_route_integration_config = apigatewayv2.HttpRouteIntegrationConfig(\n    payload_format_version=payload_format_version,\n    type=apigatewayv2.HttpIntegrationType.HTTP_PROXY,\n\n    # the properties below are optional\n    connection_id=\"connectionId\",\n    connection_type=apigatewayv2.HttpConnectionType.VPC_LINK,\n    credentials=integration_credentials,\n    method=apigatewayv2.HttpMethod.ANY,\n    parameter_mapping=parameter_mapping,\n    secure_server_name=\"secureServerName\",\n    subtype=apigatewayv2.HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n    uri=\"uri\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nIntegrationCredentials integrationCredentials;\nParameterMapping parameterMapping;\nPayloadFormatVersion payloadFormatVersion;\n\nvar httpRouteIntegrationConfig = new HttpRouteIntegrationConfig {\n    PayloadFormatVersion = payloadFormatVersion,\n    Type = HttpIntegrationType.HTTP_PROXY,\n\n    // the properties below are optional\n    ConnectionId = \"connectionId\",\n    ConnectionType = HttpConnectionType.VPC_LINK,\n    Credentials = integrationCredentials,\n    Method = HttpMethod.ANY,\n    ParameterMapping = parameterMapping,\n    SecureServerName = \"secureServerName\",\n    Subtype = HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n    Uri = \"uri\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nIntegrationCredentials integrationCredentials;\nParameterMapping parameterMapping;\nPayloadFormatVersion payloadFormatVersion;\n\nHttpRouteIntegrationConfig httpRouteIntegrationConfig = HttpRouteIntegrationConfig.builder()\n        .payloadFormatVersion(payloadFormatVersion)\n        .type(HttpIntegrationType.HTTP_PROXY)\n\n        // the properties below are optional\n        .connectionId(\"connectionId\")\n        .connectionType(HttpConnectionType.VPC_LINK)\n        .credentials(integrationCredentials)\n        .method(HttpMethod.ANY)\n        .parameterMapping(parameterMapping)\n        .secureServerName(\"secureServerName\")\n        .subtype(HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS)\n        .uri(\"uri\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar integrationCredentials integrationCredentials\nvar parameterMapping parameterMapping\nvar payloadFormatVersion payloadFormatVersion\n\nhttpRouteIntegrationConfig := &HttpRouteIntegrationConfig{\n\tPayloadFormatVersion: payloadFormatVersion,\n\tType: apigatewayv2.HttpIntegrationType_HTTP_PROXY,\n\n\t// the properties below are optional\n\tConnectionId: jsii.String(\"connectionId\"),\n\tConnectionType: apigatewayv2.HttpConnectionType_VPC_LINK,\n\tCredentials: integrationCredentials,\n\tMethod: apigatewayv2.HttpMethod_ANY,\n\tParameterMapping: parameterMapping,\n\tSecureServerName: jsii.String(\"secureServerName\"),\n\tSubtype: apigatewayv2.HttpIntegrationSubtype_EVENTBRIDGE_PUT_EVENTS,\n\tUri: jsii.String(\"uri\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const integrationCredentials: apigatewayv2.IntegrationCredentials;\ndeclare const parameterMapping: apigatewayv2.ParameterMapping;\ndeclare const payloadFormatVersion: apigatewayv2.PayloadFormatVersion;\nconst httpRouteIntegrationConfig: apigatewayv2.HttpRouteIntegrationConfig = {\n  payloadFormatVersion: payloadFormatVersion,\n  type: apigatewayv2.HttpIntegrationType.HTTP_PROXY,\n\n  // the properties below are optional\n  connectionId: 'connectionId',\n  connectionType: apigatewayv2.HttpConnectionType.VPC_LINK,\n  credentials: integrationCredentials,\n  method: apigatewayv2.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  secureServerName: 'secureServerName',\n  subtype: apigatewayv2.HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n  uri: 'uri',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpConnectionType","@aws-cdk/aws-apigatewayv2.HttpConnectionType#VPC_LINK","@aws-cdk/aws-apigatewayv2.HttpIntegrationSubtype","@aws-cdk/aws-apigatewayv2.HttpIntegrationSubtype#EVENTBRIDGE_PUT_EVENTS","@aws-cdk/aws-apigatewayv2.HttpIntegrationType","@aws-cdk/aws-apigatewayv2.HttpIntegrationType#HTTP_PROXY","@aws-cdk/aws-apigatewayv2.HttpMethod","@aws-cdk/aws-apigatewayv2.HttpMethod#ANY","@aws-cdk/aws-apigatewayv2.HttpRouteIntegrationConfig","@aws-cdk/aws-apigatewayv2.IntegrationCredentials","@aws-cdk/aws-apigatewayv2.ParameterMapping","@aws-cdk/aws-apigatewayv2.PayloadFormatVersion"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const integrationCredentials: apigatewayv2.IntegrationCredentials;\ndeclare const parameterMapping: apigatewayv2.ParameterMapping;\ndeclare const payloadFormatVersion: apigatewayv2.PayloadFormatVersion;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpRouteIntegrationConfig: apigatewayv2.HttpRouteIntegrationConfig = {\n  payloadFormatVersion: payloadFormatVersion,\n  type: apigatewayv2.HttpIntegrationType.HTTP_PROXY,\n\n  // the properties below are optional\n  connectionId: 'connectionId',\n  connectionType: apigatewayv2.HttpConnectionType.VPC_LINK,\n  credentials: integrationCredentials,\n  method: apigatewayv2.HttpMethod.ANY,\n  parameterMapping: parameterMapping,\n  secureServerName: 'secureServerName',\n  subtype: apigatewayv2.HttpIntegrationSubtype.EVENTBRIDGE_PUT_EVENTS,\n  uri: 'uri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":38,"130":3,"153":4,"169":4,"193":1,"194":8,"225":4,"242":4,"243":4,"254":1,"255":1,"256":1,"281":10,"290":1},"fqnsFingerprint":"687693612b224c6b8324f475f7d4a5dc169d07297d76474bf7271ecaa4d58c7a"},"34a52246cc8e910481cf4b18ae58f645d745d5a0791141dd641db36ef890c4d1":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nhttp_route_key = apigatewayv2.HttpRouteKey.with(\"path\", apigatewayv2.HttpMethod.ANY)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar httpRouteKey = HttpRouteKey.With(\"path\", HttpMethod.ANY);","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nHttpRouteKey httpRouteKey = HttpRouteKey.with(\"path\", HttpMethod.ANY);","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nhttpRouteKey := apigatewayv2.HttpRouteKey_With(jsii.String(\"path\"), apigatewayv2.HttpMethod_ANY)","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst httpRouteKey = apigatewayv2.HttpRouteKey.with('path', /* all optional props */ apigatewayv2.HttpMethod.ANY);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpRouteKey"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpMethod","@aws-cdk/aws-apigatewayv2.HttpMethod#ANY","@aws-cdk/aws-apigatewayv2.HttpRouteKey","@aws-cdk/aws-apigatewayv2.HttpRouteKey#with"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpRouteKey = apigatewayv2.HttpRouteKey.with('path', /* all optional props */ apigatewayv2.HttpMethod.ANY);\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":8,"194":4,"196":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"290":1},"fqnsFingerprint":"d069c67742df774a6b2e8d2af0afecbf693c8fd7cb3d86e2a6a4eaa2ebba4753"},"3877dc6089dd6f798716280109c3eb34ff94d208728a1d44f72a64722bf2582f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# http_api: apigatewayv2.HttpApi\n# http_route_authorizer: apigatewayv2.IHttpRouteAuthorizer\n# http_route_integration: apigatewayv2.HttpRouteIntegration\n# http_route_key: apigatewayv2.HttpRouteKey\n\nhttp_route_props = apigatewayv2.HttpRouteProps(\n    http_api=http_api,\n    integration=http_route_integration,\n    route_key=http_route_key,\n\n    # the properties below are optional\n    authorization_scopes=[\"authorizationScopes\"],\n    authorizer=http_route_authorizer\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nHttpApi httpApi;\nIHttpRouteAuthorizer httpRouteAuthorizer;\nHttpRouteIntegration httpRouteIntegration;\nHttpRouteKey httpRouteKey;\n\nvar httpRouteProps = new HttpRouteProps {\n    HttpApi = httpApi,\n    Integration = httpRouteIntegration,\n    RouteKey = httpRouteKey,\n\n    // the properties below are optional\n    AuthorizationScopes = new [] { \"authorizationScopes\" },\n    Authorizer = httpRouteAuthorizer\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nHttpApi httpApi;\nIHttpRouteAuthorizer httpRouteAuthorizer;\nHttpRouteIntegration httpRouteIntegration;\nHttpRouteKey httpRouteKey;\n\nHttpRouteProps httpRouteProps = HttpRouteProps.builder()\n        .httpApi(httpApi)\n        .integration(httpRouteIntegration)\n        .routeKey(httpRouteKey)\n\n        // the properties below are optional\n        .authorizationScopes(List.of(\"authorizationScopes\"))\n        .authorizer(httpRouteAuthorizer)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar httpApi httpApi\nvar httpRouteAuthorizer iHttpRouteAuthorizer\nvar httpRouteIntegration httpRouteIntegration\nvar httpRouteKey httpRouteKey\n\nhttpRouteProps := &HttpRouteProps{\n\tHttpApi: httpApi,\n\tIntegration: httpRouteIntegration,\n\tRouteKey: httpRouteKey,\n\n\t// the properties below are optional\n\tAuthorizationScopes: []*string{\n\t\tjsii.String(\"authorizationScopes\"),\n\t},\n\tAuthorizer: httpRouteAuthorizer,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\ndeclare const httpRouteAuthorizer: apigatewayv2.IHttpRouteAuthorizer;\ndeclare const httpRouteIntegration: apigatewayv2.HttpRouteIntegration;\ndeclare const httpRouteKey: apigatewayv2.HttpRouteKey;\nconst httpRouteProps: apigatewayv2.HttpRouteProps = {\n  httpApi: httpApi,\n  integration: httpRouteIntegration,\n  routeKey: httpRouteKey,\n\n  // the properties below are optional\n  authorizationScopes: ['authorizationScopes'],\n  authorizer: httpRouteAuthorizer,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpRouteProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-apigatewayv2.HttpRouteKey","@aws-cdk/aws-apigatewayv2.HttpRouteProps","@aws-cdk/aws-apigatewayv2.IHttpApi","@aws-cdk/aws-apigatewayv2.IHttpRouteAuthorizer"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\ndeclare const httpRouteAuthorizer: apigatewayv2.IHttpRouteAuthorizer;\ndeclare const httpRouteIntegration: apigatewayv2.HttpRouteIntegration;\ndeclare const httpRouteKey: apigatewayv2.HttpRouteKey;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpRouteProps: apigatewayv2.HttpRouteProps = {\n  httpApi: httpApi,\n  integration: httpRouteIntegration,\n  routeKey: httpRouteKey,\n\n  // the properties below are optional\n  authorizationScopes: ['authorizationScopes'],\n  authorizer: httpRouteAuthorizer,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":25,"130":4,"153":5,"169":5,"192":1,"193":1,"225":5,"242":5,"243":5,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"aff2a4c39782d43b9a702a5197c3e0d3f53c9cf8e89beada5ccbbd5478079539"},"9f62c2cc083466c6f14c862fc501ae4ed9b6c0019e25b3bd3bd9fbf9d5162096":{"translations":{"python":{"source":"# api: apigwv2.HttpApi\n\n\napigwv2.HttpStage(self, \"Stage\",\n    http_api=api,\n    stage_name=\"beta\"\n)","version":"2"},"csharp":{"source":"HttpApi api;\n\n\nnew HttpStage(this, \"Stage\", new HttpStageProps {\n    HttpApi = api,\n    StageName = \"beta\"\n});","version":"1"},"java":{"source":"HttpApi api;\n\n\nHttpStage.Builder.create(this, \"Stage\")\n        .httpApi(api)\n        .stageName(\"beta\")\n        .build();","version":"1"},"go":{"source":"var api httpApi\n\n\napigwv2.NewHttpStage(this, jsii.String(\"Stage\"), &HttpStageProps{\n\tHttpApi: api,\n\tStageName: jsii.String(\"beta\"),\n})","version":"1"},"$":{"source":"declare const api: apigwv2.HttpApi;\n\nnew apigwv2.HttpStage(this, 'Stage', {\n  httpApi: api,\n  stageName: 'beta',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpStage"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpStage","@aws-cdk/aws-apigatewayv2.HttpStageProps","@aws-cdk/aws-apigatewayv2.IHttpApi","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const api: apigwv2.HttpApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew apigwv2.HttpStage(this, 'Stage', {\n  httpApi: api,\n  stageName: 'beta',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":8,"104":1,"130":1,"153":1,"169":1,"193":1,"194":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":2,"290":1},"fqnsFingerprint":"6b4cf318ac5f30e22fb6ec95af129012aef0f144494809096dcd1863c2408bdb"},"74e8e0edcce6f468a571d8e72ed24b4ca44ab2ab5823b5d9a54ba4e35d622e7e":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# http_api: apigatewayv2.HttpApi\n\nhttp_stage_attributes = apigatewayv2.HttpStageAttributes(\n    api=http_api,\n    stage_name=\"stageName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nHttpApi httpApi;\n\nvar httpStageAttributes = new HttpStageAttributes {\n    Api = httpApi,\n    StageName = \"stageName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nHttpApi httpApi;\n\nHttpStageAttributes httpStageAttributes = HttpStageAttributes.builder()\n        .api(httpApi)\n        .stageName(\"stageName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar httpApi httpApi\n\nhttpStageAttributes := &HttpStageAttributes{\n\tApi: httpApi,\n\tStageName: jsii.String(\"stageName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\nconst httpStageAttributes: apigatewayv2.HttpStageAttributes = {\n  api: httpApi,\n  stageName: 'stageName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpStageAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpStageAttributes","@aws-cdk/aws-apigatewayv2.IHttpApi"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const httpApi: apigatewayv2.HttpApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst httpStageAttributes: apigatewayv2.HttpStageAttributes = {\n  api: httpApi,\n  stageName: 'stageName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":10,"130":1,"153":2,"169":2,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"f975ccefee97e5dcfcf476f569312633a313197cc5f5eacab33c9848954f9d04"},"ad1bf3c7051fe3b61d1a2625ebcec9ff306fa508a75e8955b67a4fb3b346a733":{"translations":{"python":{"source":"# api: apigwv2.HttpApi\n# dn: apigwv2.DomainName\n\n\napi.add_stage(\"beta\",\n    stage_name=\"beta\",\n    auto_deploy=True,\n    # https://${dn.domainName}/bar goes to the beta stage\n    domain_mapping=apigwv2.DomainMappingOptions(\n        domain_name=dn,\n        mapping_key=\"bar\"\n    )\n)","version":"2"},"csharp":{"source":"HttpApi api;\nDomainName dn;\n\n\napi.AddStage(\"beta\", new HttpStageOptions {\n    StageName = \"beta\",\n    AutoDeploy = true,\n    // https://${dn.domainName}/bar goes to the beta stage\n    DomainMapping = new DomainMappingOptions {\n        DomainName = dn,\n        MappingKey = \"bar\"\n    }\n});","version":"1"},"java":{"source":"HttpApi api;\nDomainName dn;\n\n\napi.addStage(\"beta\", HttpStageOptions.builder()\n        .stageName(\"beta\")\n        .autoDeploy(true)\n        // https://${dn.domainName}/bar goes to the beta stage\n        .domainMapping(DomainMappingOptions.builder()\n                .domainName(dn)\n                .mappingKey(\"bar\")\n                .build())\n        .build());","version":"1"},"go":{"source":"var api httpApi\nvar dn domainName\n\n\napi.AddStage(jsii.String(\"beta\"), &HttpStageOptions{\n\tStageName: jsii.String(\"beta\"),\n\tAutoDeploy: jsii.Boolean(true),\n\t// https://${dn.domainName}/bar goes to the beta stage\n\tDomainMapping: &DomainMappingOptions{\n\t\tDomainName: dn,\n\t\tMappingKey: jsii.String(\"bar\"),\n\t},\n})","version":"1"},"$":{"source":"declare const api: apigwv2.HttpApi;\ndeclare const dn: apigwv2.DomainName;\n\napi.addStage('beta', {\n  stageName: 'beta',\n  autoDeploy: true,\n  // https://${dn.domainName}/bar goes to the beta stage\n  domainMapping: {\n    domainName: dn,\n    mappingKey: 'bar',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpStageOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.DomainMappingOptions","@aws-cdk/aws-apigatewayv2.HttpApi#addStage","@aws-cdk/aws-apigatewayv2.HttpStageOptions","@aws-cdk/aws-apigatewayv2.IDomainName"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const api: apigwv2.HttpApi;\ndeclare const dn: apigwv2.DomainName;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\napi.addStage('beta', {\n  stageName: 'beta',\n  autoDeploy: true,\n  // https://${dn.domainName}/bar goes to the beta stage\n  domainMapping: {\n    domainName: dn,\n    mappingKey: 'bar',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":14,"106":1,"130":2,"153":2,"169":2,"193":2,"194":1,"196":1,"225":2,"226":1,"242":2,"243":2,"281":5,"290":1},"fqnsFingerprint":"ea39e3ab648ac6eb7261a4b56208b3293d3d3129cf901abd57de4a044cc38c85"},"dc90ca2984a2e9f34f0ce6a7f0bb87a8f2c96ce426fce2a274121eb6e5fe4163":{"translations":{"python":{"source":"# api: apigwv2.HttpApi\n\n\napigwv2.HttpStage(self, \"Stage\",\n    http_api=api,\n    stage_name=\"beta\"\n)","version":"2"},"csharp":{"source":"HttpApi api;\n\n\nnew HttpStage(this, \"Stage\", new HttpStageProps {\n    HttpApi = api,\n    StageName = \"beta\"\n});","version":"1"},"java":{"source":"HttpApi api;\n\n\nHttpStage.Builder.create(this, \"Stage\")\n        .httpApi(api)\n        .stageName(\"beta\")\n        .build();","version":"1"},"go":{"source":"var api httpApi\n\n\napigwv2.NewHttpStage(this, jsii.String(\"Stage\"), &HttpStageProps{\n\tHttpApi: api,\n\tStageName: jsii.String(\"beta\"),\n})","version":"1"},"$":{"source":"declare const api: apigwv2.HttpApi;\n\nnew apigwv2.HttpStage(this, 'Stage', {\n  httpApi: api,\n  stageName: 'beta',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.HttpStageProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.HttpStage","@aws-cdk/aws-apigatewayv2.HttpStageProps","@aws-cdk/aws-apigatewayv2.IHttpApi","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const api: apigwv2.HttpApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nnew apigwv2.HttpStage(this, 'Stage', {\n  httpApi: api,\n  stageName: 'beta',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":8,"104":1,"130":1,"153":1,"169":1,"193":1,"194":1,"197":1,"225":1,"226":1,"242":1,"243":1,"281":2,"290":1},"fqnsFingerprint":"6b4cf318ac5f30e22fb6ec95af129012aef0f144494809096dcd1863c2408bdb"},"a48b4bea63eb451f1c68ac49f01f27b253dea73c95290b775922596a171c91fe":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\nimport aws_cdk.aws_iam as iam\n\n# role: iam.Role\n\nintegration_credentials = apigatewayv2.IntegrationCredentials.from_role(role)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\nusing Amazon.CDK.AWS.IAM;\n\nRole role;\n\nvar integrationCredentials = IntegrationCredentials.FromRole(role);","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\nimport software.amazon.awscdk.services.iam.*;\n\nRole role;\n\nIntegrationCredentials integrationCredentials = IntegrationCredentials.fromRole(role);","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\nimport iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar role role\n\nintegrationCredentials := apigatewayv2.IntegrationCredentials_FromRole(role)","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\nconst integrationCredentials = apigatewayv2.IntegrationCredentials.fromRole(role);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.IntegrationCredentials"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IntegrationCredentials","@aws-cdk/aws-apigatewayv2.IntegrationCredentials#fromRole","@aws-cdk/aws-iam.IRole"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst integrationCredentials = apigatewayv2.IntegrationCredentials.fromRole(role);\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":10,"130":1,"153":1,"169":1,"194":2,"196":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"290":1},"fqnsFingerprint":"43da6b4c770d75bf287da6e93e16413e431096b20aacbab81296c320bced310d"},"ad951488c49b5c368aaffe57a243150fffe6466bc0f5ad8499533d4e2a41982f":{"translations":{"python":{"source":"import aws_cdk.aws_s3 as s3\nimport aws_cdk.aws_certificatemanager as acm\n# bucket: s3.Bucket\n\n\ncert_arn = \"arn:aws:acm:us-east-1:111111111111:certificate\"\ndomain_name = \"example.com\"\n\napigwv2.DomainName(self, \"DomainName\",\n    domain_name=domain_name,\n    certificate=acm.Certificate.from_certificate_arn(self, \"cert\", cert_arn),\n    mtls=apigwv2.MTLSConfig(\n        bucket=bucket,\n        key=\"someca.pem\",\n        version=\"version\"\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.S3;\nusing Amazon.CDK.AWS.CertificateManager;\nBucket bucket;\n\n\nvar certArn = \"arn:aws:acm:us-east-1:111111111111:certificate\";\nvar domainName = \"example.com\";\n\nnew DomainName(this, \"DomainName\", new DomainNameProps {\n    DomainName = domainName,\n    Certificate = Certificate.FromCertificateArn(this, \"cert\", certArn),\n    Mtls = new MTLSConfig {\n        Bucket = bucket,\n        Key = \"someca.pem\",\n        Version = \"version\"\n    }\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.s3.*;\nimport software.amazon.awscdk.services.certificatemanager.*;\nBucket bucket;\n\n\nString certArn = \"arn:aws:acm:us-east-1:111111111111:certificate\";\nString domainName = \"example.com\";\n\nDomainName.Builder.create(this, \"DomainName\")\n        .domainName(domainName)\n        .certificate(Certificate.fromCertificateArn(this, \"cert\", certArn))\n        .mtls(MTLSConfig.builder()\n                .bucket(bucket)\n                .key(\"someca.pem\")\n                .version(\"version\")\n                .build())\n        .build();","version":"1"},"go":{"source":"import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\nimport acm \"github.com/aws-samples/dummy/awscdkawscertificatemanager\"\nvar bucket bucket\n\n\ncertArn := \"arn:aws:acm:us-east-1:111111111111:certificate\"\ndomainName := \"example.com\"\n\napigwv2.NewDomainName(this, jsii.String(\"DomainName\"), &DomainNameProps{\n\tDomainName: jsii.String(DomainName),\n\tCertificate: acm.Certificate_FromCertificateArn(this, jsii.String(\"cert\"), certArn),\n\tMtls: &MTLSConfig{\n\t\tBucket: *Bucket,\n\t\tKey: jsii.String(\"someca.pem\"),\n\t\tVersion: jsii.String(\"version\"),\n\t},\n})","version":"1"},"$":{"source":"import * as s3 from '@aws-cdk/aws-s3';\nimport * as acm from '@aws-cdk/aws-certificatemanager';\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\ndeclare const bucket: s3.Bucket;\n\nnew apigwv2.DomainName(this, 'DomainName', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n  mtls: {\n    bucket,\n    key: 'someca.pem',\n    version: 'version',\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.MTLSConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.DomainName","@aws-cdk/aws-apigatewayv2.DomainNameProps","@aws-cdk/aws-apigatewayv2.MTLSConfig","@aws-cdk/aws-certificatemanager.Certificate","@aws-cdk/aws-certificatemanager.Certificate#fromCertificateArn","@aws-cdk/aws-certificatemanager.ICertificate","@aws-cdk/aws-s3.IBucket","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as acm from '@aws-cdk/aws-certificatemanager';\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst certArn = 'arn:aws:acm:us-east-1:111111111111:certificate';\nconst domainName = 'example.com';\n\nnew apigwv2.DomainName(this, 'DomainName', {\n  domainName,\n  certificate: acm.Certificate.fromCertificateArn(this, 'cert', certArn),\n  mtls: {\n    bucket,\n    key: 'someca.pem',\n    version: 'version',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":8,"75":19,"104":2,"130":1,"153":1,"169":1,"193":2,"194":3,"196":1,"197":1,"225":3,"226":1,"242":3,"243":3,"254":2,"255":2,"256":2,"281":4,"282":2,"290":1},"fqnsFingerprint":"61475d73359090306d69882cf9a399f8495d3059a1663ac1dc3755779e70e4f0"},"896ebe6200cf308cce75995f423a37db7b815e9b2a21e87068b7701171da0044":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import HttpAlbIntegration\n\n# lb: elbv2.ApplicationLoadBalancer\n\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpAlbIntegration(\"DefaultIntegration\", listener,\n        parameter_mapping=apigwv2.ParameterMapping().append_header(\"header2\", apigwv2.MappingValue.request_header(\"header1\")).remove_header(\"header1\")\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nApplicationLoadBalancer lb;\n\nvar listener = lb.AddListener(\"listener\", new BaseApplicationListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddApplicationTargetsProps {\n    Port = 80\n});\n\nvar httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpAlbIntegration(\"DefaultIntegration\", listener, new HttpAlbIntegrationProps {\n        ParameterMapping = new ParameterMapping().AppendHeader(\"header2\", MappingValue.RequestHeader(\"header1\")).RemoveHeader(\"header1\")\n    })\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.HttpAlbIntegration;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.addListener(\"listener\", BaseApplicationListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddApplicationTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(HttpAlbIntegration.Builder.create(\"DefaultIntegration\", listener)\n                .parameterMapping(new ParameterMapping().appendHeader(\"header2\", MappingValue.requestHeader(\"header1\")).removeHeader(\"header1\"))\n                .build())\n        .build();","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar lb applicationLoadBalancer\n\nlistener := lb.AddListener(jsii.String(\"listener\"), &BaseApplicationListenerProps{\n\tPort: jsii.Number(80),\n})\nlistener.AddTargets(jsii.String(\"target\"), &AddApplicationTargetsProps{\n\tPort: jsii.Number(80),\n})\n\nhttpEndpoint := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyPrivateApi\"), &HttpApiProps{\n\tDefaultIntegration: awscdkawsapigatewayv2integrations.NewHttpAlbIntegration(jsii.String(\"DefaultIntegration\"), listener, &HttpAlbIntegrationProps{\n\t\tParameterMapping: apigwv2.NewParameterMapping().AppendHeader(jsii.String(\"header2\"), apigwv2.MappingValue_RequestHeader(jsii.String(\"header1\"))).RemoveHeader(jsii.String(\"header1\")),\n\t}),\n})","version":"1"},"$":{"source":"import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.MappingValue"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegration","@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegrationProps","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-apigatewayv2.MappingValue","@aws-cdk/aws-apigatewayv2.MappingValue#requestHeader","@aws-cdk/aws-apigatewayv2.ParameterMapping","@aws-cdk/aws-apigatewayv2.ParameterMapping#appendHeader","@aws-cdk/aws-apigatewayv2.ParameterMapping#removeHeader","@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps","@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener","@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets","@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener","@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps","@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":2,"10":8,"75":25,"104":1,"130":1,"153":1,"169":1,"193":4,"194":8,"196":5,"197":3,"225":3,"226":1,"242":3,"243":3,"254":1,"255":1,"257":1,"258":1,"281":4,"290":1},"fqnsFingerprint":"1cdb441c265e871b271278ac7ec4d01c3e257e06189016472106aaaa37b0e4f1"},"f8e8544f6d910682ba1f6613906dea6c247779be7341516b157eada93f7a0111":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import HttpAlbIntegration\n\n# lb: elbv2.ApplicationLoadBalancer\n\nlistener = lb.add_listener(\"listener\", port=80)\nlistener.add_targets(\"target\",\n    port=80\n)\n\nhttp_endpoint = apigwv2.HttpApi(self, \"HttpProxyPrivateApi\",\n    default_integration=HttpAlbIntegration(\"DefaultIntegration\", listener,\n        parameter_mapping=apigwv2.ParameterMapping().append_header(\"header2\", apigwv2.MappingValue.request_header(\"header1\")).remove_header(\"header1\")\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nApplicationLoadBalancer lb;\n\nvar listener = lb.AddListener(\"listener\", new BaseApplicationListenerProps { Port = 80 });\nlistener.AddTargets(\"target\", new AddApplicationTargetsProps {\n    Port = 80\n});\n\nvar httpEndpoint = new HttpApi(this, \"HttpProxyPrivateApi\", new HttpApiProps {\n    DefaultIntegration = new HttpAlbIntegration(\"DefaultIntegration\", listener, new HttpAlbIntegrationProps {\n        ParameterMapping = new ParameterMapping().AppendHeader(\"header2\", MappingValue.RequestHeader(\"header1\")).RemoveHeader(\"header1\")\n    })\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.HttpAlbIntegration;\n\nApplicationLoadBalancer lb;\n\nApplicationListener listener = lb.addListener(\"listener\", BaseApplicationListenerProps.builder().port(80).build());\nlistener.addTargets(\"target\", AddApplicationTargetsProps.builder()\n        .port(80)\n        .build());\n\nHttpApi httpEndpoint = HttpApi.Builder.create(this, \"HttpProxyPrivateApi\")\n        .defaultIntegration(HttpAlbIntegration.Builder.create(\"DefaultIntegration\", listener)\n                .parameterMapping(new ParameterMapping().appendHeader(\"header2\", MappingValue.requestHeader(\"header1\")).removeHeader(\"header1\"))\n                .build())\n        .build();","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar lb applicationLoadBalancer\n\nlistener := lb.AddListener(jsii.String(\"listener\"), &BaseApplicationListenerProps{\n\tPort: jsii.Number(80),\n})\nlistener.AddTargets(jsii.String(\"target\"), &AddApplicationTargetsProps{\n\tPort: jsii.Number(80),\n})\n\nhttpEndpoint := apigwv2.NewHttpApi(this, jsii.String(\"HttpProxyPrivateApi\"), &HttpApiProps{\n\tDefaultIntegration: awscdkawsapigatewayv2integrations.NewHttpAlbIntegration(jsii.String(\"DefaultIntegration\"), listener, &HttpAlbIntegrationProps{\n\t\tParameterMapping: apigwv2.NewParameterMapping().AppendHeader(jsii.String(\"header2\"), apigwv2.MappingValue_RequestHeader(jsii.String(\"header1\"))).RemoveHeader(jsii.String(\"header1\")),\n\t}),\n})","version":"1"},"$":{"source":"import { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.ParameterMapping"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegration","@aws-cdk/aws-apigatewayv2-integrations.HttpAlbIntegrationProps","@aws-cdk/aws-apigatewayv2.HttpApi","@aws-cdk/aws-apigatewayv2.HttpApiProps","@aws-cdk/aws-apigatewayv2.HttpRouteIntegration","@aws-cdk/aws-apigatewayv2.MappingValue","@aws-cdk/aws-apigatewayv2.MappingValue#requestHeader","@aws-cdk/aws-apigatewayv2.ParameterMapping","@aws-cdk/aws-apigatewayv2.ParameterMapping#appendHeader","@aws-cdk/aws-apigatewayv2.ParameterMapping#removeHeader","@aws-cdk/aws-elasticloadbalancingv2.AddApplicationTargetsProps","@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener","@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener#addTargets","@aws-cdk/aws-elasticloadbalancingv2.ApplicationLoadBalancer#addListener","@aws-cdk/aws-elasticloadbalancingv2.BaseApplicationListenerProps","@aws-cdk/aws-elasticloadbalancingv2.IApplicationListener","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { HttpAlbIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const lb: elbv2.ApplicationLoadBalancer;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst listener = lb.addListener('listener', { port: 80 });\nlistener.addTargets('target', {\n  port: 80,\n});\n\nconst httpEndpoint = new apigwv2.HttpApi(this, 'HttpProxyPrivateApi', {\n  defaultIntegration: new HttpAlbIntegration('DefaultIntegration', listener, {\n    parameterMapping: new apigwv2.ParameterMapping()\n      .appendHeader('header2', apigwv2.MappingValue.requestHeader('header1'))\n      .removeHeader('header1'),\n  }),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"8":2,"10":8,"75":25,"104":1,"130":1,"153":1,"169":1,"193":4,"194":8,"196":5,"197":3,"225":3,"226":1,"242":3,"243":3,"254":1,"255":1,"257":1,"258":1,"281":4,"290":1},"fqnsFingerprint":"1cdb441c265e871b271278ac7ec4d01c3e257e06189016472106aaaa37b0e4f1"},"150182373bb766388a1c55a797693c1a234520e0cab1fa848e7869739226037f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\npayload_format_version = apigatewayv2.PayloadFormatVersion.custom(\"version\")","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar payloadFormatVersion = PayloadFormatVersion.Custom(\"version\");","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nPayloadFormatVersion payloadFormatVersion = PayloadFormatVersion.custom(\"version\");","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\npayloadFormatVersion := apigatewayv2.PayloadFormatVersion_Custom(jsii.String(\"version\"))","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst payloadFormatVersion = apigatewayv2.PayloadFormatVersion.custom('version');","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.PayloadFormatVersion"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.PayloadFormatVersion","@aws-cdk/aws-apigatewayv2.PayloadFormatVersion#custom"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst payloadFormatVersion = apigatewayv2.PayloadFormatVersion.custom('version');\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":5,"194":2,"196":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"290":1},"fqnsFingerprint":"d4497eb1f652bb4c5358864e5b64a33627c167aaf192065025a04dafc9edb9ac"},"f8efbec3197f7ef734e2bd3130d4a3feafbc6425707a596841f510ba371d471f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nstage_attributes = apigatewayv2.StageAttributes(\n    stage_name=\"stageName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar stageAttributes = new StageAttributes {\n    StageName = \"stageName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nStageAttributes stageAttributes = StageAttributes.builder()\n        .stageName(\"stageName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nstageAttributes := &StageAttributes{\n\tStageName: jsii.String(\"stageName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst stageAttributes: apigatewayv2.StageAttributes = {\n  stageName: 'stageName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.StageAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.StageAttributes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stageAttributes: apigatewayv2.StageAttributes = {\n  stageName: 'stageName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":5,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":1,"290":1},"fqnsFingerprint":"c6fbd518811fe134ab3279ff328aac7f62abfbbe7799275df8f51f042dca72a1"},"4c151f7a839aaf2b27f74b158627eda3f5da0015626989d8e0060cfe568da6b3":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# domain_name: apigatewayv2.DomainName\n\nstage_options = apigatewayv2.StageOptions(\n    auto_deploy=False,\n    domain_mapping=apigatewayv2.DomainMappingOptions(\n        domain_name=domain_name,\n\n        # the properties below are optional\n        mapping_key=\"mappingKey\"\n    ),\n    throttle=apigatewayv2.ThrottleSettings(\n        burst_limit=123,\n        rate_limit=123\n    )\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nDomainName domainName;\n\nvar stageOptions = new StageOptions {\n    AutoDeploy = false,\n    DomainMapping = new DomainMappingOptions {\n        DomainName = domainName,\n\n        // the properties below are optional\n        MappingKey = \"mappingKey\"\n    },\n    Throttle = new ThrottleSettings {\n        BurstLimit = 123,\n        RateLimit = 123\n    }\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nDomainName domainName;\n\nStageOptions stageOptions = StageOptions.builder()\n        .autoDeploy(false)\n        .domainMapping(DomainMappingOptions.builder()\n                .domainName(domainName)\n\n                // the properties below are optional\n                .mappingKey(\"mappingKey\")\n                .build())\n        .throttle(ThrottleSettings.builder()\n                .burstLimit(123)\n                .rateLimit(123)\n                .build())\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar domainName domainName\n\nstageOptions := &StageOptions{\n\tAutoDeploy: jsii.Boolean(false),\n\tDomainMapping: &DomainMappingOptions{\n\t\tDomainName: domainName,\n\n\t\t// the properties below are optional\n\t\tMappingKey: jsii.String(\"mappingKey\"),\n\t},\n\tThrottle: &ThrottleSettings{\n\t\tBurstLimit: jsii.Number(123),\n\t\tRateLimit: jsii.Number(123),\n\t},\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const domainName: apigatewayv2.DomainName;\nconst stageOptions: apigatewayv2.StageOptions = {\n  autoDeploy: false,\n  domainMapping: {\n    domainName: domainName,\n\n    // the properties below are optional\n    mappingKey: 'mappingKey',\n  },\n  throttle: {\n    burstLimit: 123,\n    rateLimit: 123,\n  },\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.StageOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.DomainMappingOptions","@aws-cdk/aws-apigatewayv2.IDomainName","@aws-cdk/aws-apigatewayv2.StageOptions","@aws-cdk/aws-apigatewayv2.ThrottleSettings"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const domainName: apigatewayv2.DomainName;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst stageOptions: apigatewayv2.StageOptions = {\n  autoDeploy: false,\n  domainMapping: {\n    domainName: domainName,\n\n    // the properties below are optional\n    mappingKey: 'mappingKey',\n  },\n  throttle: {\n    burstLimit: 123,\n    rateLimit: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":2,"75":15,"91":1,"130":1,"153":2,"169":2,"193":3,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":7,"290":1},"fqnsFingerprint":"7443b71903cd09528d5d2a2c328e40ab8142452830740d77cedcdab9e145a191"},"96f38e731305e585437ea1450f3c0441bfefe3620ca2eb3e486b774e98bdf450":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nthrottle_settings = apigatewayv2.ThrottleSettings(\n    burst_limit=123,\n    rate_limit=123\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar throttleSettings = new ThrottleSettings {\n    BurstLimit = 123,\n    RateLimit = 123\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nThrottleSettings throttleSettings = ThrottleSettings.builder()\n        .burstLimit(123)\n        .rateLimit(123)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nthrottleSettings := &ThrottleSettings{\n\tBurstLimit: jsii.Number(123),\n\tRateLimit: jsii.Number(123),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst throttleSettings: apigatewayv2.ThrottleSettings = {\n  burstLimit: 123,\n  rateLimit: 123,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.ThrottleSettings"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.ThrottleSettings"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst throttleSettings: apigatewayv2.ThrottleSettings = {\n  burstLimit: 123,\n  rateLimit: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"8":2,"10":1,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"ea74374ae803c80344ff2254fe456f99074c14bb421a08681111efb3149712d8"},"d5c654cd9d50fa2c67caec904a3758294dfa85e899db90dd1310d72ecc57d69b":{"translations":{"python":{"source":"import aws_cdk.aws_ec2 as ec2\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nvpc_link = apigwv2.VpcLink(self, \"VpcLink\", vpc=vpc)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.EC2;\n\n\nvar vpc = new Vpc(this, \"VPC\");\nvar vpcLink = new VpcLink(this, \"VpcLink\", new VpcLinkProps { Vpc = vpc });","version":"1"},"java":{"source":"import software.amazon.awscdk.services.ec2.*;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nVpcLink vpcLink = VpcLink.Builder.create(this, \"VpcLink\").vpc(vpc).build();","version":"1"},"go":{"source":"import ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\n\n\nvpc := ec2.NewVpc(this, jsii.String(\"VPC\"))\nvpcLink := apigwv2.NewVpcLink(this, jsii.String(\"VpcLink\"), &VpcLinkProps{\n\tVpc: Vpc,\n})","version":"1"},"$":{"source":"import * as ec2 from '@aws-cdk/aws-ec2';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.VpcLink"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.VpcLink","@aws-cdk/aws-apigatewayv2.VpcLinkProps","@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-ec2.Vpc","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as ec2 from '@aws-cdk/aws-ec2';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":8,"104":2,"193":1,"194":2,"197":2,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"282":1,"290":1},"fqnsFingerprint":"90bd661982fb2fa537ba015ae8eaf8448a01ae8ad3d5ebe648bef3d437cf3f5a"},"ddc38ba84c4c6b1456928121d14c5eb3a36bff999068d51862d318cbf63fc224":{"translations":{"python":{"source":"import aws_cdk.aws_ec2 as ec2\n\n# vpc: ec2.Vpc\n\nawesome_link = apigwv2.VpcLink.from_vpc_link_attributes(self, \"awesome-vpc-link\",\n    vpc_link_id=\"us-east-1_oiuR12Abd\",\n    vpc=vpc\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.EC2;\n\nVpc vpc;\n\nvar awesomeLink = VpcLink.FromVpcLinkAttributes(this, \"awesome-vpc-link\", new VpcLinkAttributes {\n    VpcLinkId = \"us-east-1_oiuR12Abd\",\n    Vpc = vpc\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.ec2.*;\n\nVpc vpc;\n\nIVpcLink awesomeLink = VpcLink.fromVpcLinkAttributes(this, \"awesome-vpc-link\", VpcLinkAttributes.builder()\n        .vpcLinkId(\"us-east-1_oiuR12Abd\")\n        .vpc(vpc)\n        .build());","version":"1"},"go":{"source":"import ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\n\nvar vpc vpc\n\nawesomeLink := apigwv2.VpcLink_FromVpcLinkAttributes(this, jsii.String(\"awesome-vpc-link\"), &VpcLinkAttributes{\n\tVpcLinkId: jsii.String(\"us-east-1_oiuR12Abd\"),\n\tVpc: Vpc,\n})","version":"1"},"$":{"source":"import * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const vpc: ec2.Vpc;\nconst awesomeLink = apigwv2.VpcLink.fromVpcLinkAttributes(this, 'awesome-vpc-link', {\n  vpcLinkId: 'us-east-1_oiuR12Abd',\n  vpc,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.VpcLinkAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IVpcLink","@aws-cdk/aws-apigatewayv2.VpcLink","@aws-cdk/aws-apigatewayv2.VpcLink#fromVpcLinkAttributes","@aws-cdk/aws-apigatewayv2.VpcLinkAttributes","@aws-cdk/aws-ec2.IVpc","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as ec2 from '@aws-cdk/aws-ec2';\n\ndeclare const vpc: ec2.Vpc;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst awesomeLink = apigwv2.VpcLink.fromVpcLinkAttributes(this, 'awesome-vpc-link', {\n  vpcLinkId: 'us-east-1_oiuR12Abd',\n  vpc,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":10,"104":1,"130":1,"153":1,"169":1,"193":1,"194":2,"196":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":1,"282":1,"290":1},"fqnsFingerprint":"4c82c8adf286211a594c854503c00c6e4c4f625f33efc4cd707709aa263acdd1"},"9c13dbdb7e8ad23f863766a107b02528d3f30c88781d070add9308ea1e806afa":{"translations":{"python":{"source":"import aws_cdk.aws_ec2 as ec2\n\n\nvpc = ec2.Vpc(self, \"VPC\")\nvpc_link = apigwv2.VpcLink(self, \"VpcLink\", vpc=vpc)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.EC2;\n\n\nvar vpc = new Vpc(this, \"VPC\");\nvar vpcLink = new VpcLink(this, \"VpcLink\", new VpcLinkProps { Vpc = vpc });","version":"1"},"java":{"source":"import software.amazon.awscdk.services.ec2.*;\n\n\nVpc vpc = new Vpc(this, \"VPC\");\nVpcLink vpcLink = VpcLink.Builder.create(this, \"VpcLink\").vpc(vpc).build();","version":"1"},"go":{"source":"import ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"\n\n\nvpc := ec2.NewVpc(this, jsii.String(\"VPC\"))\nvpcLink := apigwv2.NewVpcLink(this, jsii.String(\"VpcLink\"), &VpcLinkProps{\n\tVpc: Vpc,\n})","version":"1"},"$":{"source":"import * as ec2 from '@aws-cdk/aws-ec2';\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.VpcLinkProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.VpcLink","@aws-cdk/aws-apigatewayv2.VpcLinkProps","@aws-cdk/aws-ec2.IVpc","@aws-cdk/aws-ec2.Vpc","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as ec2 from '@aws-cdk/aws-ec2';\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst vpc = new ec2.Vpc(this, 'VPC');\nconst vpcLink = new apigwv2.VpcLink(this, 'VpcLink', { vpc });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":3,"75":8,"104":2,"193":1,"194":2,"197":2,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"282":1,"290":1},"fqnsFingerprint":"90bd661982fb2fa537ba015ae8eaf8448a01ae8ad3d5ebe648bef3d437cf3f5a"},"572459cad16a9f684c4c90c68a53717623f6854c13a68b50cb4b79334f661e84":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import WebSocketLambdaIntegration\n\n# message_handler: lambda.Function\n\nweb_socket_api = apigwv2.WebSocketApi(self, \"mywsapi\")\nweb_socket_api.add_route(\"sendmessage\",\n    integration=WebSocketLambdaIntegration(\"SendMessageIntegration\", message_handler)\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction messageHandler;\n\nvar webSocketApi = new WebSocketApi(this, \"mywsapi\");\nwebSocketApi.AddRoute(\"sendmessage\", new WebSocketRouteOptions {\n    Integration = new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler)\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.WebSocketLambdaIntegration;\n\nFunction messageHandler;\n\nWebSocketApi webSocketApi = new WebSocketApi(this, \"mywsapi\");\nwebSocketApi.addRoute(\"sendmessage\", WebSocketRouteOptions.builder()\n        .integration(new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler))\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar messageHandler function\n\nwebSocketApi := apigwv2.NewWebSocketApi(this, jsii.String(\"mywsapi\"))\nwebSocketApi.AddRoute(jsii.String(\"sendmessage\"), &WebSocketRouteOptions{\n\tIntegration: awscdkawsapigatewayv2integrations.NewWebSocketLambdaIntegration(jsii.String(\"SendMessageIntegration\"), messageHandler),\n})","version":"1"},"$":{"source":"import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const messageHandler: lambda.Function;\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketApi"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.WebSocketLambdaIntegration","@aws-cdk/aws-apigatewayv2.WebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi#addRoute","@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration","@aws-cdk/aws-apigatewayv2.WebSocketRouteOptions","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const messageHandler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":4,"75":12,"104":1,"130":1,"153":1,"169":1,"193":1,"194":2,"196":1,"197":2,"225":2,"226":1,"242":2,"243":2,"254":1,"255":1,"257":1,"258":1,"281":1,"290":1},"fqnsFingerprint":"aacf6de0c8c54a091f8d30c2df50b625f5d9d78934801a96695d8ecbed51a92d"},"cb36649c8233310f4c6d40e538d2a58711d41470477e45661d3ba51cfb4fd621":{"translations":{"python":{"source":"web_socket_api = apigwv2.WebSocketApi.from_web_socket_api_attributes(self, \"mywsapi\", web_socket_id=\"api-1234\")","version":"2"},"csharp":{"source":"var webSocketApi = WebSocketApi.FromWebSocketApiAttributes(this, \"mywsapi\", new WebSocketApiAttributes { WebSocketId = \"api-1234\" });","version":"1"},"java":{"source":"IWebSocketApi webSocketApi = WebSocketApi.fromWebSocketApiAttributes(this, \"mywsapi\", WebSocketApiAttributes.builder().webSocketId(\"api-1234\").build());","version":"1"},"go":{"source":"webSocketApi := apigwv2.WebSocketApi_FromWebSocketApiAttributes(this, jsii.String(\"mywsapi\"), &WebSocketApiAttributes{\n\tWebSocketId: jsii.String(\"api-1234\"),\n})","version":"1"},"$":{"source":"const webSocketApi = apigwv2.WebSocketApi.fromWebSocketApiAttributes(this, 'mywsapi', { webSocketId: 'api-1234' });","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketApiAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi#fromWebSocketApiAttributes","@aws-cdk/aws-apigatewayv2.WebSocketApiAttributes","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst webSocketApi = apigwv2.WebSocketApi.fromWebSocketApiAttributes(this, 'mywsapi', { webSocketId: 'api-1234' });\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":2,"75":5,"104":1,"193":1,"194":2,"196":1,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"31354f6edac0d17b921bcad196835d21004e89eb76008f58e4428fb11e1f1033"},"bb53e127c0ce5f21d289d8d06695244e3b76951ebf0f1a19387af96d44dba553":{"translations":{"python":{"source":"web_socket_api = apigwv2.WebSocketApi(self, \"mywsapi\",\n    api_key_selection_expression=apigwv2.WebSocketApiKeySelectionExpression.HEADER_X_API_KEY\n)","version":"2"},"csharp":{"source":"var webSocketApi = new WebSocketApi(this, \"mywsapi\", new WebSocketApiProps {\n    ApiKeySelectionExpression = WebSocketApiKeySelectionExpression.HEADER_X_API_KEY\n});","version":"1"},"java":{"source":"WebSocketApi webSocketApi = WebSocketApi.Builder.create(this, \"mywsapi\")\n        .apiKeySelectionExpression(WebSocketApiKeySelectionExpression.HEADER_X_API_KEY)\n        .build();","version":"1"},"go":{"source":"webSocketApi := apigwv2.NewWebSocketApi(this, jsii.String(\"mywsapi\"), &WebSocketApiProps{\n\tApiKeySelectionExpression: apigwv2.WebSocketApiKeySelectionExpression_HEADER_X_API_KEY(),\n})","version":"1"},"$":{"source":"const webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi',{\n  apiKeySelectionExpression: apigwv2.WebSocketApiKeySelectionExpression.HEADER_X_API_KEY,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketApiKeySelectionExpression"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.WebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApiKeySelectionExpression","@aws-cdk/aws-apigatewayv2.WebSocketApiKeySelectionExpression#HEADER_X_API_KEY","@aws-cdk/aws-apigatewayv2.WebSocketApiProps","constructs.Construct"],"fullSource":"// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi',{\n  apiKeySelectionExpression: apigwv2.WebSocketApiKeySelectionExpression.HEADER_X_API_KEY,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":1,"75":7,"104":1,"193":1,"194":3,"197":1,"225":1,"242":1,"243":1,"281":1},"fqnsFingerprint":"4490854a102ce7c23448f2f0fd2b7434d776fb78e0fb9217960b32236bc57d35"},"ae0b6a9f5dde200476dbf89ca95b1e9d724582320d8866372455e627f88e5f33":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_authorizers import WebSocketLambdaAuthorizer\nfrom aws_cdk.aws_apigatewayv2_integrations import WebSocketLambdaIntegration\n\n# This function handles your auth logic\n# auth_handler: lambda.Function\n\n# This function handles your WebSocket requests\n# handler: lambda.Function\n\n\nauthorizer = WebSocketLambdaAuthorizer(\"Authorizer\", auth_handler)\n\nintegration = WebSocketLambdaIntegration(\"Integration\", handler)\n\napigwv2.WebSocketApi(self, \"WebSocketApi\",\n    connect_route_options=apigwv2.WebSocketRouteOptions(\n        integration=integration,\n        authorizer=authorizer\n    )\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Authorizers;\nusing Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\n// This function handles your auth logic\nFunction authHandler;\n\n// This function handles your WebSocket requests\nFunction handler;\n\n\nvar authorizer = new WebSocketLambdaAuthorizer(\"Authorizer\", authHandler);\n\nvar integration = new WebSocketLambdaIntegration(\"Integration\", handler);\n\nnew WebSocketApi(this, \"WebSocketApi\", new WebSocketApiProps {\n    ConnectRouteOptions = new WebSocketRouteOptions {\n        Integration = integration,\n        Authorizer = authorizer\n    }\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.authorizers.WebSocketLambdaAuthorizer;\nimport software.amazon.awscdk.services.apigatewayv2.integrations.WebSocketLambdaIntegration;\n\n// This function handles your auth logic\nFunction authHandler;\n\n// This function handles your WebSocket requests\nFunction handler;\n\n\nWebSocketLambdaAuthorizer authorizer = new WebSocketLambdaAuthorizer(\"Authorizer\", authHandler);\n\nWebSocketLambdaIntegration integration = new WebSocketLambdaIntegration(\"Integration\", handler);\n\nWebSocketApi.Builder.create(this, \"WebSocketApi\")\n        .connectRouteOptions(WebSocketRouteOptions.builder()\n                .integration(integration)\n                .authorizer(authorizer)\n                .build())\n        .build();","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2authorizers\"\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\n// This function handles your auth logic\nvar authHandler function\n\n// This function handles your WebSocket requests\nvar handler function\n\n\nauthorizer := awscdkawsapigatewayv2authorizers.NewWebSocketLambdaAuthorizer(jsii.String(\"Authorizer\"), authHandler)\n\nintegration := awscdkawsapigatewayv2integrations.NewWebSocketLambdaIntegration(jsii.String(\"Integration\"), handler)\n\napigwv2.NewWebSocketApi(this, jsii.String(\"WebSocketApi\"), &WebSocketApiProps{\n\tConnectRouteOptions: &WebSocketRouteOptions{\n\t\tIntegration: *Integration,\n\t\tAuthorizer: *Authorizer,\n\t},\n})","version":"1"},"$":{"source":"import { WebSocketLambdaAuthorizer } from '@aws-cdk/aws-apigatewayv2-authorizers';\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\n// This function handles your auth logic\ndeclare const authHandler: lambda.Function;\n\n// This function handles your WebSocket requests\ndeclare const handler: lambda.Function;\n\nconst authorizer = new WebSocketLambdaAuthorizer('Authorizer', authHandler);\n\nconst integration = new WebSocketLambdaIntegration(\n  'Integration',\n  handler,\n);\n\nnew apigwv2.WebSocketApi(this, 'WebSocketApi', {\n  connectRouteOptions: {\n    integration,\n    authorizer,\n  },\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketApiProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-authorizers.WebSocketLambdaAuthorizer","@aws-cdk/aws-apigatewayv2-integrations.WebSocketLambdaIntegration","@aws-cdk/aws-apigatewayv2.IWebSocketRouteAuthorizer","@aws-cdk/aws-apigatewayv2.WebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApiProps","@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration","@aws-cdk/aws-apigatewayv2.WebSocketRouteOptions","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { WebSocketLambdaAuthorizer } from '@aws-cdk/aws-apigatewayv2-authorizers';\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\n// This function handles your auth logic\ndeclare const authHandler: lambda.Function;\n\n// This function handles your WebSocket requests\ndeclare const handler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst authorizer = new WebSocketLambdaAuthorizer('Authorizer', authHandler);\n\nconst integration = new WebSocketLambdaIntegration(\n  'Integration',\n  handler,\n);\n\nnew apigwv2.WebSocketApi(this, 'WebSocketApi', {\n  connectRouteOptions: {\n    integration,\n    authorizer,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":5,"75":19,"104":1,"130":2,"153":2,"169":2,"193":2,"194":1,"197":3,"225":4,"226":1,"242":4,"243":4,"254":2,"255":2,"257":2,"258":2,"281":1,"282":2,"290":1},"fqnsFingerprint":"c19dc9b7433549bbf4868fa583cd7234c820c0f7607e809281fe3831e98ea0e0"},"df895a7eb0331aac866000172f43687845bdec94ea83c84303e28fef058cdfe5":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# web_socket_api: apigatewayv2.WebSocketApi\n\nweb_socket_authorizer = apigatewayv2.WebSocketAuthorizer(self, \"MyWebSocketAuthorizer\",\n    identity_source=[\"identitySource\"],\n    type=apigatewayv2.WebSocketAuthorizerType.LAMBDA,\n    web_socket_api=web_socket_api,\n\n    # the properties below are optional\n    authorizer_name=\"authorizerName\",\n    authorizer_uri=\"authorizerUri\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nWebSocketApi webSocketApi;\n\nvar webSocketAuthorizer = new WebSocketAuthorizer(this, \"MyWebSocketAuthorizer\", new WebSocketAuthorizerProps {\n    IdentitySource = new [] { \"identitySource\" },\n    Type = WebSocketAuthorizerType.LAMBDA,\n    WebSocketApi = webSocketApi,\n\n    // the properties below are optional\n    AuthorizerName = \"authorizerName\",\n    AuthorizerUri = \"authorizerUri\"\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nWebSocketApi webSocketApi;\n\nWebSocketAuthorizer webSocketAuthorizer = WebSocketAuthorizer.Builder.create(this, \"MyWebSocketAuthorizer\")\n        .identitySource(List.of(\"identitySource\"))\n        .type(WebSocketAuthorizerType.LAMBDA)\n        .webSocketApi(webSocketApi)\n\n        // the properties below are optional\n        .authorizerName(\"authorizerName\")\n        .authorizerUri(\"authorizerUri\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar webSocketApi webSocketApi\n\nwebSocketAuthorizer := apigatewayv2.NewWebSocketAuthorizer(this, jsii.String(\"MyWebSocketAuthorizer\"), &WebSocketAuthorizerProps{\n\tIdentitySource: []*string{\n\t\tjsii.String(\"identitySource\"),\n\t},\n\tType: apigatewayv2.WebSocketAuthorizerType_LAMBDA,\n\tWebSocketApi: webSocketApi,\n\n\t// the properties below are optional\n\tAuthorizerName: jsii.String(\"authorizerName\"),\n\tAuthorizerUri: jsii.String(\"authorizerUri\"),\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\nconst webSocketAuthorizer = new apigatewayv2.WebSocketAuthorizer(this, 'MyWebSocketAuthorizer', {\n  identitySource: ['identitySource'],\n  type: apigatewayv2.WebSocketAuthorizerType.LAMBDA,\n  webSocketApi: webSocketApi,\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  authorizerUri: 'authorizerUri',\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketAuthorizer"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketAuthorizer","@aws-cdk/aws-apigatewayv2.WebSocketAuthorizerProps","@aws-cdk/aws-apigatewayv2.WebSocketAuthorizerType","@aws-cdk/aws-apigatewayv2.WebSocketAuthorizerType#LAMBDA","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webSocketAuthorizer = new apigatewayv2.WebSocketAuthorizer(this, 'MyWebSocketAuthorizer', {\n  identitySource: ['identitySource'],\n  type: apigatewayv2.WebSocketAuthorizerType.LAMBDA,\n  webSocketApi: webSocketApi,\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  authorizerUri: 'authorizerUri',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":5,"75":16,"104":1,"130":1,"153":1,"169":1,"192":1,"193":1,"194":3,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"ddf0df0c63162f59577b1b6002e869df4b733700f6e57cee93d14922cac67c0d"},"c45aa363924a0d446bb413194673468ae91de7cf381efdc04a59949173702c5f":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nweb_socket_authorizer_attributes = apigatewayv2.WebSocketAuthorizerAttributes(\n    authorizer_id=\"authorizerId\",\n    authorizer_type=\"authorizerType\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar webSocketAuthorizerAttributes = new WebSocketAuthorizerAttributes {\n    AuthorizerId = \"authorizerId\",\n    AuthorizerType = \"authorizerType\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nWebSocketAuthorizerAttributes webSocketAuthorizerAttributes = WebSocketAuthorizerAttributes.builder()\n        .authorizerId(\"authorizerId\")\n        .authorizerType(\"authorizerType\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nwebSocketAuthorizerAttributes := &WebSocketAuthorizerAttributes{\n\tAuthorizerId: jsii.String(\"authorizerId\"),\n\tAuthorizerType: jsii.String(\"authorizerType\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst webSocketAuthorizerAttributes: apigatewayv2.WebSocketAuthorizerAttributes = {\n  authorizerId: 'authorizerId',\n  authorizerType: 'authorizerType',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketAuthorizerAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.WebSocketAuthorizerAttributes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webSocketAuthorizerAttributes: apigatewayv2.WebSocketAuthorizerAttributes = {\n  authorizerId: 'authorizerId',\n  authorizerType: 'authorizerType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"ca019351738d67a4fdf115f380c914cf440c24a128462d243fe6702c95d047ac"},"f4ad3e5fa52567f6b57aa376ba1afb11f377cb8f4d27a598c179e2f50011f3e4":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# web_socket_api: apigatewayv2.WebSocketApi\n\nweb_socket_authorizer_props = apigatewayv2.WebSocketAuthorizerProps(\n    identity_source=[\"identitySource\"],\n    type=apigatewayv2.WebSocketAuthorizerType.LAMBDA,\n    web_socket_api=web_socket_api,\n\n    # the properties below are optional\n    authorizer_name=\"authorizerName\",\n    authorizer_uri=\"authorizerUri\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nWebSocketApi webSocketApi;\n\nvar webSocketAuthorizerProps = new WebSocketAuthorizerProps {\n    IdentitySource = new [] { \"identitySource\" },\n    Type = WebSocketAuthorizerType.LAMBDA,\n    WebSocketApi = webSocketApi,\n\n    // the properties below are optional\n    AuthorizerName = \"authorizerName\",\n    AuthorizerUri = \"authorizerUri\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nWebSocketApi webSocketApi;\n\nWebSocketAuthorizerProps webSocketAuthorizerProps = WebSocketAuthorizerProps.builder()\n        .identitySource(List.of(\"identitySource\"))\n        .type(WebSocketAuthorizerType.LAMBDA)\n        .webSocketApi(webSocketApi)\n\n        // the properties below are optional\n        .authorizerName(\"authorizerName\")\n        .authorizerUri(\"authorizerUri\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar webSocketApi webSocketApi\n\nwebSocketAuthorizerProps := &WebSocketAuthorizerProps{\n\tIdentitySource: []*string{\n\t\tjsii.String(\"identitySource\"),\n\t},\n\tType: apigatewayv2.WebSocketAuthorizerType_LAMBDA,\n\tWebSocketApi: webSocketApi,\n\n\t// the properties below are optional\n\tAuthorizerName: jsii.String(\"authorizerName\"),\n\tAuthorizerUri: jsii.String(\"authorizerUri\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\nconst webSocketAuthorizerProps: apigatewayv2.WebSocketAuthorizerProps = {\n  identitySource: ['identitySource'],\n  type: apigatewayv2.WebSocketAuthorizerType.LAMBDA,\n  webSocketApi: webSocketApi,\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  authorizerUri: 'authorizerUri',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketAuthorizerProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketAuthorizerProps","@aws-cdk/aws-apigatewayv2.WebSocketAuthorizerType","@aws-cdk/aws-apigatewayv2.WebSocketAuthorizerType#LAMBDA"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webSocketAuthorizerProps: apigatewayv2.WebSocketAuthorizerProps = {\n  identitySource: ['identitySource'],\n  type: apigatewayv2.WebSocketAuthorizerType.LAMBDA,\n  webSocketApi: webSocketApi,\n\n  // the properties below are optional\n  authorizerName: 'authorizerName',\n  authorizerUri: 'authorizerUri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":4,"75":16,"130":1,"153":2,"169":2,"192":1,"193":1,"194":2,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"8a8f965c2e8120a798d35f680fb9ad0b9c74d1d6ba5ca2d26ff90558fc41b142"},"8770a43b88a3c0df99b35a9dad1f12a99ad159ebff70ff3714ded45e50cc2072":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# web_socket_api: apigatewayv2.WebSocketApi\n\nweb_socket_integration = apigatewayv2.WebSocketIntegration(self, \"MyWebSocketIntegration\",\n    integration_type=apigatewayv2.WebSocketIntegrationType.AWS_PROXY,\n    integration_uri=\"integrationUri\",\n    web_socket_api=web_socket_api\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nWebSocketApi webSocketApi;\n\nvar webSocketIntegration = new WebSocketIntegration(this, \"MyWebSocketIntegration\", new WebSocketIntegrationProps {\n    IntegrationType = WebSocketIntegrationType.AWS_PROXY,\n    IntegrationUri = \"integrationUri\",\n    WebSocketApi = webSocketApi\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nWebSocketApi webSocketApi;\n\nWebSocketIntegration webSocketIntegration = WebSocketIntegration.Builder.create(this, \"MyWebSocketIntegration\")\n        .integrationType(WebSocketIntegrationType.AWS_PROXY)\n        .integrationUri(\"integrationUri\")\n        .webSocketApi(webSocketApi)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar webSocketApi webSocketApi\n\nwebSocketIntegration := apigatewayv2.NewWebSocketIntegration(this, jsii.String(\"MyWebSocketIntegration\"), &WebSocketIntegrationProps{\n\tIntegrationType: apigatewayv2.WebSocketIntegrationType_AWS_PROXY,\n\tIntegrationUri: jsii.String(\"integrationUri\"),\n\tWebSocketApi: webSocketApi,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\nconst webSocketIntegration = new apigatewayv2.WebSocketIntegration(this, 'MyWebSocketIntegration', {\n  integrationType: apigatewayv2.WebSocketIntegrationType.AWS_PROXY,\n  integrationUri: 'integrationUri',\n  webSocketApi: webSocketApi,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketIntegration"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketIntegration","@aws-cdk/aws-apigatewayv2.WebSocketIntegrationProps","@aws-cdk/aws-apigatewayv2.WebSocketIntegrationType","@aws-cdk/aws-apigatewayv2.WebSocketIntegrationType#AWS_PROXY","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webSocketIntegration = new apigatewayv2.WebSocketIntegration(this, 'MyWebSocketIntegration', {\n  integrationType: apigatewayv2.WebSocketIntegrationType.AWS_PROXY,\n  integrationUri: 'integrationUri',\n  webSocketApi: webSocketApi,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":14,"104":1,"130":1,"153":1,"169":1,"193":1,"194":3,"197":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"f73bd3183f6458f254fa622dfef8757c23fa7e3624d64bd9a9616d02b0a4a71d"},"658c18940d643dac403ea635642802a6578c0666376b637b4a97773e54ad23ae":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# web_socket_api: apigatewayv2.WebSocketApi\n\nweb_socket_integration_props = apigatewayv2.WebSocketIntegrationProps(\n    integration_type=apigatewayv2.WebSocketIntegrationType.AWS_PROXY,\n    integration_uri=\"integrationUri\",\n    web_socket_api=web_socket_api\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nWebSocketApi webSocketApi;\n\nvar webSocketIntegrationProps = new WebSocketIntegrationProps {\n    IntegrationType = WebSocketIntegrationType.AWS_PROXY,\n    IntegrationUri = \"integrationUri\",\n    WebSocketApi = webSocketApi\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nWebSocketApi webSocketApi;\n\nWebSocketIntegrationProps webSocketIntegrationProps = WebSocketIntegrationProps.builder()\n        .integrationType(WebSocketIntegrationType.AWS_PROXY)\n        .integrationUri(\"integrationUri\")\n        .webSocketApi(webSocketApi)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar webSocketApi webSocketApi\n\nwebSocketIntegrationProps := &WebSocketIntegrationProps{\n\tIntegrationType: apigatewayv2.WebSocketIntegrationType_AWS_PROXY,\n\tIntegrationUri: jsii.String(\"integrationUri\"),\n\tWebSocketApi: webSocketApi,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\nconst webSocketIntegrationProps: apigatewayv2.WebSocketIntegrationProps = {\n  integrationType: apigatewayv2.WebSocketIntegrationType.AWS_PROXY,\n  integrationUri: 'integrationUri',\n  webSocketApi: webSocketApi,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketIntegrationProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketIntegrationProps","@aws-cdk/aws-apigatewayv2.WebSocketIntegrationType","@aws-cdk/aws-apigatewayv2.WebSocketIntegrationType#AWS_PROXY"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webSocketIntegrationProps: apigatewayv2.WebSocketIntegrationProps = {\n  integrationType: apigatewayv2.WebSocketIntegrationType.AWS_PROXY,\n  integrationUri: 'integrationUri',\n  webSocketApi: webSocketApi,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":14,"130":1,"153":2,"169":2,"193":1,"194":2,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":3,"290":1},"fqnsFingerprint":"6fac595cd2ab3bdb0e6a74bae5cc4011645613d3c017342f2211c9662bd88129"},"2f4d5c6b2c14330c5b87fb473eb68fe966870fe740ec26ba006983b385d9342c":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nweb_socket_none_authorizer = apigatewayv2.WebSocketNoneAuthorizer()","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar webSocketNoneAuthorizer = new WebSocketNoneAuthorizer();","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nWebSocketNoneAuthorizer webSocketNoneAuthorizer = new WebSocketNoneAuthorizer();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nwebSocketNoneAuthorizer := apigatewayv2.NewWebSocketNoneAuthorizer()","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst webSocketNoneAuthorizer = new apigatewayv2.WebSocketNoneAuthorizer();","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketNoneAuthorizer"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.WebSocketNoneAuthorizer"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webSocketNoneAuthorizer = new apigatewayv2.WebSocketNoneAuthorizer();\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":1,"75":4,"194":1,"197":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"290":1},"fqnsFingerprint":"307fb76fbd6d86832cd9d7a14cd744e2e10cd55d91dc6fce17bf96f15f4de925"},"c390d18bc86aa21f53820bf643ea65cc6d33f5164cf87bbbf347c0ff5d438be2":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# web_socket_api: apigatewayv2.WebSocketApi\n# web_socket_route_authorizer: apigatewayv2.IWebSocketRouteAuthorizer\n# web_socket_route_integration: apigatewayv2.WebSocketRouteIntegration\n\nweb_socket_route = apigatewayv2.WebSocketRoute(self, \"MyWebSocketRoute\",\n    integration=web_socket_route_integration,\n    route_key=\"routeKey\",\n    web_socket_api=web_socket_api,\n\n    # the properties below are optional\n    api_key_required=False,\n    authorizer=web_socket_route_authorizer\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nWebSocketApi webSocketApi;\nIWebSocketRouteAuthorizer webSocketRouteAuthorizer;\nWebSocketRouteIntegration webSocketRouteIntegration;\n\nvar webSocketRoute = new WebSocketRoute(this, \"MyWebSocketRoute\", new WebSocketRouteProps {\n    Integration = webSocketRouteIntegration,\n    RouteKey = \"routeKey\",\n    WebSocketApi = webSocketApi,\n\n    // the properties below are optional\n    ApiKeyRequired = false,\n    Authorizer = webSocketRouteAuthorizer\n});","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nWebSocketApi webSocketApi;\nIWebSocketRouteAuthorizer webSocketRouteAuthorizer;\nWebSocketRouteIntegration webSocketRouteIntegration;\n\nWebSocketRoute webSocketRoute = WebSocketRoute.Builder.create(this, \"MyWebSocketRoute\")\n        .integration(webSocketRouteIntegration)\n        .routeKey(\"routeKey\")\n        .webSocketApi(webSocketApi)\n\n        // the properties below are optional\n        .apiKeyRequired(false)\n        .authorizer(webSocketRouteAuthorizer)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar webSocketApi webSocketApi\nvar webSocketRouteAuthorizer iWebSocketRouteAuthorizer\nvar webSocketRouteIntegration webSocketRouteIntegration\n\nwebSocketRoute := apigatewayv2.NewWebSocketRoute(this, jsii.String(\"MyWebSocketRoute\"), &WebSocketRouteProps{\n\tIntegration: webSocketRouteIntegration,\n\tRouteKey: jsii.String(\"routeKey\"),\n\tWebSocketApi: webSocketApi,\n\n\t// the properties below are optional\n\tApiKeyRequired: jsii.Boolean(false),\n\tAuthorizer: webSocketRouteAuthorizer,\n})","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\ndeclare const webSocketRouteAuthorizer: apigatewayv2.IWebSocketRouteAuthorizer;\ndeclare const webSocketRouteIntegration: apigatewayv2.WebSocketRouteIntegration;\nconst webSocketRoute = new apigatewayv2.WebSocketRoute(this, 'MyWebSocketRoute', {\n  integration: webSocketRouteIntegration,\n  routeKey: 'routeKey',\n  webSocketApi: webSocketApi,\n\n  // the properties below are optional\n  apiKeyRequired: false,\n  authorizer: webSocketRouteAuthorizer,\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketRoute"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.IWebSocketRouteAuthorizer","@aws-cdk/aws-apigatewayv2.WebSocketRoute","@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration","@aws-cdk/aws-apigatewayv2.WebSocketRouteProps","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\ndeclare const webSocketRouteAuthorizer: apigatewayv2.IWebSocketRouteAuthorizer;\ndeclare const webSocketRouteIntegration: apigatewayv2.WebSocketRouteIntegration;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webSocketRoute = new apigatewayv2.WebSocketRoute(this, 'MyWebSocketRoute', {\n  integration: webSocketRouteIntegration,\n  routeKey: 'routeKey',\n  webSocketApi: webSocketApi,\n\n  // the properties below are optional\n  apiKeyRequired: false,\n  authorizer: webSocketRouteAuthorizer,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":21,"91":1,"104":1,"130":3,"153":3,"169":3,"193":1,"194":1,"197":1,"225":4,"242":4,"243":4,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"d35610ac0a16d2a2120448911e350bb816ae9ed77e27d6367bc0bfbd4e1c9e14"},"ea5bb89ba23472dc1764563db6e2aa16b033cc684d42393698fdc976d0cad841":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\nimport constructs as constructs\n\n# construct: constructs.Construct\n# web_socket_route: apigatewayv2.WebSocketRoute\n\nweb_socket_route_authorizer_bind_options = apigatewayv2.WebSocketRouteAuthorizerBindOptions(\n    route=web_socket_route,\n    scope=construct\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\nusing Constructs;\n\nConstruct construct;\nWebSocketRoute webSocketRoute;\n\nvar webSocketRouteAuthorizerBindOptions = new WebSocketRouteAuthorizerBindOptions {\n    Route = webSocketRoute,\n    Scope = construct\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\nimport software.constructs.*;\n\nConstruct construct;\nWebSocketRoute webSocketRoute;\n\nWebSocketRouteAuthorizerBindOptions webSocketRouteAuthorizerBindOptions = WebSocketRouteAuthorizerBindOptions.builder()\n        .route(webSocketRoute)\n        .scope(construct)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\nimport constructs \"github.com/aws/constructs-go/constructs\"\n\nvar construct construct\nvar webSocketRoute webSocketRoute\n\nwebSocketRouteAuthorizerBindOptions := &WebSocketRouteAuthorizerBindOptions{\n\tRoute: webSocketRoute,\n\tScope: construct,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as constructs from 'constructs';\n\ndeclare const construct: constructs.Construct;\ndeclare const webSocketRoute: apigatewayv2.WebSocketRoute;\nconst webSocketRouteAuthorizerBindOptions: apigatewayv2.WebSocketRouteAuthorizerBindOptions = {\n  route: webSocketRoute,\n  scope: construct,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketRouteAuthorizerBindOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IWebSocketRoute","@aws-cdk/aws-apigatewayv2.WebSocketRouteAuthorizerBindOptions","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as constructs from 'constructs';\n\ndeclare const construct: constructs.Construct;\ndeclare const webSocketRoute: apigatewayv2.WebSocketRoute;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webSocketRouteAuthorizerBindOptions: apigatewayv2.WebSocketRouteAuthorizerBindOptions = {\n  route: webSocketRoute,\n  scope: construct,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":15,"130":2,"153":3,"169":3,"193":1,"225":3,"242":3,"243":3,"254":2,"255":2,"256":2,"281":2,"290":1},"fqnsFingerprint":"fc1307e1a3abb252e96c51316738636c12549b83e23d78ba6560be3283ad0e6a"},"4dcd23a17ea0883c27025794b4ac8fc1b37f532019c908ff2d2013f203031b6a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nweb_socket_route_authorizer_config = apigatewayv2.WebSocketRouteAuthorizerConfig(\n    authorization_type=\"authorizationType\",\n\n    # the properties below are optional\n    authorizer_id=\"authorizerId\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar webSocketRouteAuthorizerConfig = new WebSocketRouteAuthorizerConfig {\n    AuthorizationType = \"authorizationType\",\n\n    // the properties below are optional\n    AuthorizerId = \"authorizerId\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nWebSocketRouteAuthorizerConfig webSocketRouteAuthorizerConfig = WebSocketRouteAuthorizerConfig.builder()\n        .authorizationType(\"authorizationType\")\n\n        // the properties below are optional\n        .authorizerId(\"authorizerId\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nwebSocketRouteAuthorizerConfig := &WebSocketRouteAuthorizerConfig{\n\tAuthorizationType: jsii.String(\"authorizationType\"),\n\n\t// the properties below are optional\n\tAuthorizerId: jsii.String(\"authorizerId\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst webSocketRouteAuthorizerConfig: apigatewayv2.WebSocketRouteAuthorizerConfig = {\n  authorizationType: 'authorizationType',\n\n  // the properties below are optional\n  authorizerId: 'authorizerId',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketRouteAuthorizerConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.WebSocketRouteAuthorizerConfig"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webSocketRouteAuthorizerConfig: apigatewayv2.WebSocketRouteAuthorizerConfig = {\n  authorizationType: 'authorizationType',\n\n  // the properties below are optional\n  authorizerId: 'authorizerId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":3,"75":6,"153":1,"169":1,"193":1,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"4dd2607482787f67be4d929b0444d4ca07f860d8187f0642253894d02a9c2b5b"},"423abeb5e88c48c0b565b87f3050ea7c2020f94c04a65c6ca8683bb3db492299":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import WebSocketLambdaIntegration\n\n# message_handler: lambda.Function\n\n\nweb_socket_api = apigwv2.WebSocketApi(self, \"mywsapi\")\napigwv2.WebSocketStage(self, \"mystage\",\n    web_socket_api=web_socket_api,\n    stage_name=\"dev\",\n    auto_deploy=True\n)\nweb_socket_api.add_route(\"sendmessage\",\n    integration=WebSocketLambdaIntegration(\"SendMessageIntegration\", message_handler)\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction messageHandler;\n\n\nvar webSocketApi = new WebSocketApi(this, \"mywsapi\");\nnew WebSocketStage(this, \"mystage\", new WebSocketStageProps {\n    WebSocketApi = webSocketApi,\n    StageName = \"dev\",\n    AutoDeploy = true\n});\nwebSocketApi.AddRoute(\"sendmessage\", new WebSocketRouteOptions {\n    Integration = new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler)\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.WebSocketLambdaIntegration;\n\nFunction messageHandler;\n\n\nWebSocketApi webSocketApi = new WebSocketApi(this, \"mywsapi\");\nWebSocketStage.Builder.create(this, \"mystage\")\n        .webSocketApi(webSocketApi)\n        .stageName(\"dev\")\n        .autoDeploy(true)\n        .build();\nwebSocketApi.addRoute(\"sendmessage\", WebSocketRouteOptions.builder()\n        .integration(new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler))\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar messageHandler function\n\n\nwebSocketApi := apigwv2.NewWebSocketApi(this, jsii.String(\"mywsapi\"))\napigwv2.NewWebSocketStage(this, jsii.String(\"mystage\"), &WebSocketStageProps{\n\tWebSocketApi: WebSocketApi,\n\tStageName: jsii.String(\"dev\"),\n\tAutoDeploy: jsii.Boolean(true),\n})\nwebSocketApi.AddRoute(jsii.String(\"sendmessage\"), &WebSocketRouteOptions{\n\tIntegration: awscdkawsapigatewayv2integrations.NewWebSocketLambdaIntegration(jsii.String(\"SendMessageIntegration\"), messageHandler),\n})","version":"1"},"$":{"source":"import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n\ndeclare const messageHandler: lambda.Function;\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.WebSocketLambdaIntegration","@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi#addRoute","@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration","@aws-cdk/aws-apigatewayv2.WebSocketRouteOptions","@aws-cdk/aws-apigatewayv2.WebSocketStage","@aws-cdk/aws-apigatewayv2.WebSocketStageProps","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const messageHandler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":6,"75":17,"104":2,"106":1,"130":1,"153":1,"169":1,"193":2,"194":3,"196":1,"197":3,"225":2,"226":2,"242":2,"243":2,"254":1,"255":1,"257":1,"258":1,"281":3,"282":1,"290":1},"fqnsFingerprint":"67cc9d4a9b2e105209e54ff025f2a08ded28129910410b15ef6f3c2d030e0c74"},"74ec271b8b3f341989c8038a6295174babfd070a9721b6ae18f3fdffb5f783bd":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\nimport aws_cdk.core as cdk\n\n# construct: cdk.Construct\n# web_socket_route: apigatewayv2.WebSocketRoute\n\nweb_socket_route_integration_bind_options = apigatewayv2.WebSocketRouteIntegrationBindOptions(\n    route=web_socket_route,\n    scope=construct\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\nusing Amazon.CDK;\n\nConstruct construct;\nWebSocketRoute webSocketRoute;\nvar webSocketRouteIntegrationBindOptions = new WebSocketRouteIntegrationBindOptions {\n    Route = webSocketRoute,\n    Scope = construct\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\nimport software.amazon.awscdk.core.*;\n\nConstruct construct;\nWebSocketRoute webSocketRoute;\n\nWebSocketRouteIntegrationBindOptions webSocketRouteIntegrationBindOptions = WebSocketRouteIntegrationBindOptions.builder()\n        .route(webSocketRoute)\n        .scope(construct)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\nimport cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar construct construct\nvar webSocketRoute webSocketRoute\n\nwebSocketRouteIntegrationBindOptions := &WebSocketRouteIntegrationBindOptions{\n\tRoute: webSocketRoute,\n\tScope: construct,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const construct: cdk.Construct;\ndeclare const webSocketRoute: apigatewayv2.WebSocketRoute;\nconst webSocketRouteIntegrationBindOptions: apigatewayv2.WebSocketRouteIntegrationBindOptions = {\n  route: webSocketRoute,\n  scope: construct,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegrationBindOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IWebSocketRoute","@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegrationBindOptions","@aws-cdk/core.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const construct: cdk.Construct;\ndeclare const webSocketRoute: apigatewayv2.WebSocketRoute;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webSocketRouteIntegrationBindOptions: apigatewayv2.WebSocketRouteIntegrationBindOptions = {\n  route: webSocketRoute,\n  scope: construct,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":15,"130":2,"153":3,"169":3,"193":1,"225":3,"242":3,"243":3,"254":2,"255":2,"256":2,"281":2,"290":1},"fqnsFingerprint":"014e774b79132c196296c404a9226a9e3e5d23cb5fecaf17d40fe757449a8307"},"d08493fb518754deb7c240a70b0391132d21b2b1109fcf16276b112da256919a":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\nweb_socket_route_integration_config = apigatewayv2.WebSocketRouteIntegrationConfig(\n    type=apigatewayv2.WebSocketIntegrationType.AWS_PROXY,\n    uri=\"uri\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nvar webSocketRouteIntegrationConfig = new WebSocketRouteIntegrationConfig {\n    Type = WebSocketIntegrationType.AWS_PROXY,\n    Uri = \"uri\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nWebSocketRouteIntegrationConfig webSocketRouteIntegrationConfig = WebSocketRouteIntegrationConfig.builder()\n        .type(WebSocketIntegrationType.AWS_PROXY)\n        .uri(\"uri\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nwebSocketRouteIntegrationConfig := &WebSocketRouteIntegrationConfig{\n\tType: apigatewayv2.WebSocketIntegrationType_AWS_PROXY,\n\tUri: jsii.String(\"uri\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst webSocketRouteIntegrationConfig: apigatewayv2.WebSocketRouteIntegrationConfig = {\n  type: apigatewayv2.WebSocketIntegrationType.AWS_PROXY,\n  uri: 'uri',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegrationConfig"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.WebSocketIntegrationType","@aws-cdk/aws-apigatewayv2.WebSocketIntegrationType#AWS_PROXY","@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegrationConfig"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webSocketRouteIntegrationConfig: apigatewayv2.WebSocketRouteIntegrationConfig = {\n  type: apigatewayv2.WebSocketIntegrationType.AWS_PROXY,\n  uri: 'uri',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":9,"153":1,"169":1,"193":1,"194":2,"225":1,"242":1,"243":1,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"cf5720e67d2eb9e164851bb0afafb85303edccd8fea996a53f4c5db5603d1140"},"d9bfcb7a828d550ae04518dac97c653cc5f07678bcbb79a1c7e88cc765852d81":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import WebSocketLambdaIntegration\n\n# message_handler: lambda.Function\n\n\nweb_socket_api = apigwv2.WebSocketApi(self, \"mywsapi\")\napigwv2.WebSocketStage(self, \"mystage\",\n    web_socket_api=web_socket_api,\n    stage_name=\"dev\",\n    auto_deploy=True\n)\nweb_socket_api.add_route(\"sendmessage\",\n    integration=WebSocketLambdaIntegration(\"SendMessageIntegration\", message_handler)\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction messageHandler;\n\n\nvar webSocketApi = new WebSocketApi(this, \"mywsapi\");\nnew WebSocketStage(this, \"mystage\", new WebSocketStageProps {\n    WebSocketApi = webSocketApi,\n    StageName = \"dev\",\n    AutoDeploy = true\n});\nwebSocketApi.AddRoute(\"sendmessage\", new WebSocketRouteOptions {\n    Integration = new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler)\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.WebSocketLambdaIntegration;\n\nFunction messageHandler;\n\n\nWebSocketApi webSocketApi = new WebSocketApi(this, \"mywsapi\");\nWebSocketStage.Builder.create(this, \"mystage\")\n        .webSocketApi(webSocketApi)\n        .stageName(\"dev\")\n        .autoDeploy(true)\n        .build();\nwebSocketApi.addRoute(\"sendmessage\", WebSocketRouteOptions.builder()\n        .integration(new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler))\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar messageHandler function\n\n\nwebSocketApi := apigwv2.NewWebSocketApi(this, jsii.String(\"mywsapi\"))\napigwv2.NewWebSocketStage(this, jsii.String(\"mystage\"), &WebSocketStageProps{\n\tWebSocketApi: WebSocketApi,\n\tStageName: jsii.String(\"dev\"),\n\tAutoDeploy: jsii.Boolean(true),\n})\nwebSocketApi.AddRoute(jsii.String(\"sendmessage\"), &WebSocketRouteOptions{\n\tIntegration: awscdkawsapigatewayv2integrations.NewWebSocketLambdaIntegration(jsii.String(\"SendMessageIntegration\"), messageHandler),\n})","version":"1"},"$":{"source":"import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n\ndeclare const messageHandler: lambda.Function;\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketRouteOptions"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.WebSocketLambdaIntegration","@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi#addRoute","@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration","@aws-cdk/aws-apigatewayv2.WebSocketRouteOptions","@aws-cdk/aws-apigatewayv2.WebSocketStage","@aws-cdk/aws-apigatewayv2.WebSocketStageProps","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const messageHandler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":6,"75":17,"104":2,"106":1,"130":1,"153":1,"169":1,"193":2,"194":3,"196":1,"197":3,"225":2,"226":2,"242":2,"243":2,"254":1,"255":1,"257":1,"258":1,"281":3,"282":1,"290":1},"fqnsFingerprint":"67cc9d4a9b2e105209e54ff025f2a08ded28129910410b15ef6f3c2d030e0c74"},"81f0e35557fefa345c76fa8a5c2ba062833af64cdf7034d9fe6cf49969b7f3f1":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# web_socket_api: apigatewayv2.WebSocketApi\n# web_socket_route_authorizer: apigatewayv2.IWebSocketRouteAuthorizer\n# web_socket_route_integration: apigatewayv2.WebSocketRouteIntegration\n\nweb_socket_route_props = apigatewayv2.WebSocketRouteProps(\n    integration=web_socket_route_integration,\n    route_key=\"routeKey\",\n    web_socket_api=web_socket_api,\n\n    # the properties below are optional\n    api_key_required=False,\n    authorizer=web_socket_route_authorizer\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nWebSocketApi webSocketApi;\nIWebSocketRouteAuthorizer webSocketRouteAuthorizer;\nWebSocketRouteIntegration webSocketRouteIntegration;\n\nvar webSocketRouteProps = new WebSocketRouteProps {\n    Integration = webSocketRouteIntegration,\n    RouteKey = \"routeKey\",\n    WebSocketApi = webSocketApi,\n\n    // the properties below are optional\n    ApiKeyRequired = false,\n    Authorizer = webSocketRouteAuthorizer\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nWebSocketApi webSocketApi;\nIWebSocketRouteAuthorizer webSocketRouteAuthorizer;\nWebSocketRouteIntegration webSocketRouteIntegration;\n\nWebSocketRouteProps webSocketRouteProps = WebSocketRouteProps.builder()\n        .integration(webSocketRouteIntegration)\n        .routeKey(\"routeKey\")\n        .webSocketApi(webSocketApi)\n\n        // the properties below are optional\n        .apiKeyRequired(false)\n        .authorizer(webSocketRouteAuthorizer)\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar webSocketApi webSocketApi\nvar webSocketRouteAuthorizer iWebSocketRouteAuthorizer\nvar webSocketRouteIntegration webSocketRouteIntegration\n\nwebSocketRouteProps := &WebSocketRouteProps{\n\tIntegration: webSocketRouteIntegration,\n\tRouteKey: jsii.String(\"routeKey\"),\n\tWebSocketApi: webSocketApi,\n\n\t// the properties below are optional\n\tApiKeyRequired: jsii.Boolean(false),\n\tAuthorizer: webSocketRouteAuthorizer,\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\ndeclare const webSocketRouteAuthorizer: apigatewayv2.IWebSocketRouteAuthorizer;\ndeclare const webSocketRouteIntegration: apigatewayv2.WebSocketRouteIntegration;\nconst webSocketRouteProps: apigatewayv2.WebSocketRouteProps = {\n  integration: webSocketRouteIntegration,\n  routeKey: 'routeKey',\n  webSocketApi: webSocketApi,\n\n  // the properties below are optional\n  apiKeyRequired: false,\n  authorizer: webSocketRouteAuthorizer,\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketRouteProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.IWebSocketRouteAuthorizer","@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration","@aws-cdk/aws-apigatewayv2.WebSocketRouteProps"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\ndeclare const webSocketRouteAuthorizer: apigatewayv2.IWebSocketRouteAuthorizer;\ndeclare const webSocketRouteIntegration: apigatewayv2.WebSocketRouteIntegration;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webSocketRouteProps: apigatewayv2.WebSocketRouteProps = {\n  integration: webSocketRouteIntegration,\n  routeKey: 'routeKey',\n  webSocketApi: webSocketApi,\n\n  // the properties below are optional\n  apiKeyRequired: false,\n  authorizer: webSocketRouteAuthorizer,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":21,"91":1,"130":3,"153":4,"169":4,"193":1,"225":4,"242":4,"243":4,"254":1,"255":1,"256":1,"281":5,"290":1},"fqnsFingerprint":"98feaa5f1dd5c81da6374e4dc6aeb71c0a04d6fc97592a094ff31c87902314da"},"d301464107394fe2f9d63946beb2b1a1b46be8dad17e610b808c659a70c02c9a":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import WebSocketLambdaIntegration\n\n# message_handler: lambda.Function\n\n\nweb_socket_api = apigwv2.WebSocketApi(self, \"mywsapi\")\napigwv2.WebSocketStage(self, \"mystage\",\n    web_socket_api=web_socket_api,\n    stage_name=\"dev\",\n    auto_deploy=True\n)\nweb_socket_api.add_route(\"sendmessage\",\n    integration=WebSocketLambdaIntegration(\"SendMessageIntegration\", message_handler)\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction messageHandler;\n\n\nvar webSocketApi = new WebSocketApi(this, \"mywsapi\");\nnew WebSocketStage(this, \"mystage\", new WebSocketStageProps {\n    WebSocketApi = webSocketApi,\n    StageName = \"dev\",\n    AutoDeploy = true\n});\nwebSocketApi.AddRoute(\"sendmessage\", new WebSocketRouteOptions {\n    Integration = new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler)\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.WebSocketLambdaIntegration;\n\nFunction messageHandler;\n\n\nWebSocketApi webSocketApi = new WebSocketApi(this, \"mywsapi\");\nWebSocketStage.Builder.create(this, \"mystage\")\n        .webSocketApi(webSocketApi)\n        .stageName(\"dev\")\n        .autoDeploy(true)\n        .build();\nwebSocketApi.addRoute(\"sendmessage\", WebSocketRouteOptions.builder()\n        .integration(new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler))\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar messageHandler function\n\n\nwebSocketApi := apigwv2.NewWebSocketApi(this, jsii.String(\"mywsapi\"))\napigwv2.NewWebSocketStage(this, jsii.String(\"mystage\"), &WebSocketStageProps{\n\tWebSocketApi: WebSocketApi,\n\tStageName: jsii.String(\"dev\"),\n\tAutoDeploy: jsii.Boolean(true),\n})\nwebSocketApi.AddRoute(jsii.String(\"sendmessage\"), &WebSocketRouteOptions{\n\tIntegration: awscdkawsapigatewayv2integrations.NewWebSocketLambdaIntegration(jsii.String(\"SendMessageIntegration\"), messageHandler),\n})","version":"1"},"$":{"source":"import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n\ndeclare const messageHandler: lambda.Function;\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketStage"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.WebSocketLambdaIntegration","@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi#addRoute","@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration","@aws-cdk/aws-apigatewayv2.WebSocketRouteOptions","@aws-cdk/aws-apigatewayv2.WebSocketStage","@aws-cdk/aws-apigatewayv2.WebSocketStageProps","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const messageHandler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":6,"75":17,"104":2,"106":1,"130":1,"153":1,"169":1,"193":2,"194":3,"196":1,"197":3,"225":2,"226":2,"242":2,"243":2,"254":1,"255":1,"257":1,"258":1,"281":3,"282":1,"290":1},"fqnsFingerprint":"67cc9d4a9b2e105209e54ff025f2a08ded28129910410b15ef6f3c2d030e0c74"},"18cc27a0c72935cc4a41c82501385b9f89402a4fd0fc5fbc3e1dfb33a252fa61":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_apigatewayv2 as apigatewayv2\n\n# web_socket_api: apigatewayv2.WebSocketApi\n\nweb_socket_stage_attributes = apigatewayv2.WebSocketStageAttributes(\n    api=web_socket_api,\n    stage_name=\"stageName\"\n)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.APIGatewayv2;\n\nWebSocketApi webSocketApi;\n\nvar webSocketStageAttributes = new WebSocketStageAttributes {\n    Api = webSocketApi,\n    StageName = \"stageName\"\n};","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.apigatewayv2.*;\n\nWebSocketApi webSocketApi;\n\nWebSocketStageAttributes webSocketStageAttributes = WebSocketStageAttributes.builder()\n        .api(webSocketApi)\n        .stageName(\"stageName\")\n        .build();","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport apigatewayv2 \"github.com/aws-samples/dummy/awscdkawsapigatewayv2\"\n\nvar webSocketApi webSocketApi\n\nwebSocketStageAttributes := &WebSocketStageAttributes{\n\tApi: webSocketApi,\n\tStageName: jsii.String(\"stageName\"),\n}","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\nconst webSocketStageAttributes: apigatewayv2.WebSocketStageAttributes = {\n  api: webSocketApi,\n  stageName: 'stageName',\n};","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketStageAttributes"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketStageAttributes"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\n\ndeclare const webSocketApi: apigatewayv2.WebSocketApi;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst webSocketStageAttributes: apigatewayv2.WebSocketStageAttributes = {\n  api: webSocketApi,\n  stageName: 'stageName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":10,"130":1,"153":2,"169":2,"193":1,"225":2,"242":2,"243":2,"254":1,"255":1,"256":1,"281":2,"290":1},"fqnsFingerprint":"82fcb9031cdf8e8fd9f6533246041c1109a9b7c3694f7b68cf97fa44799dec89"},"1ab1aa0d1c3caf263587f99af6a5423d4794f506c6796fa29b59deae49c07068":{"translations":{"python":{"source":"from aws_cdk.aws_apigatewayv2_integrations import WebSocketLambdaIntegration\n\n# message_handler: lambda.Function\n\n\nweb_socket_api = apigwv2.WebSocketApi(self, \"mywsapi\")\napigwv2.WebSocketStage(self, \"mystage\",\n    web_socket_api=web_socket_api,\n    stage_name=\"dev\",\n    auto_deploy=True\n)\nweb_socket_api.add_route(\"sendmessage\",\n    integration=WebSocketLambdaIntegration(\"SendMessageIntegration\", message_handler)\n)","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.APIGatewayv2.Integrations;\n\nFunction messageHandler;\n\n\nvar webSocketApi = new WebSocketApi(this, \"mywsapi\");\nnew WebSocketStage(this, \"mystage\", new WebSocketStageProps {\n    WebSocketApi = webSocketApi,\n    StageName = \"dev\",\n    AutoDeploy = true\n});\nwebSocketApi.AddRoute(\"sendmessage\", new WebSocketRouteOptions {\n    Integration = new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler)\n});","version":"1"},"java":{"source":"import software.amazon.awscdk.services.apigatewayv2.integrations.WebSocketLambdaIntegration;\n\nFunction messageHandler;\n\n\nWebSocketApi webSocketApi = new WebSocketApi(this, \"mywsapi\");\nWebSocketStage.Builder.create(this, \"mystage\")\n        .webSocketApi(webSocketApi)\n        .stageName(\"dev\")\n        .autoDeploy(true)\n        .build();\nwebSocketApi.addRoute(\"sendmessage\", WebSocketRouteOptions.builder()\n        .integration(new WebSocketLambdaIntegration(\"SendMessageIntegration\", messageHandler))\n        .build());","version":"1"},"go":{"source":"import \"github.com/aws-samples/dummy/awscdkawsapigatewayv2integrations\"\n\nvar messageHandler function\n\n\nwebSocketApi := apigwv2.NewWebSocketApi(this, jsii.String(\"mywsapi\"))\napigwv2.NewWebSocketStage(this, jsii.String(\"mystage\"), &WebSocketStageProps{\n\tWebSocketApi: WebSocketApi,\n\tStageName: jsii.String(\"dev\"),\n\tAutoDeploy: jsii.Boolean(true),\n})\nwebSocketApi.AddRoute(jsii.String(\"sendmessage\"), &WebSocketRouteOptions{\n\tIntegration: awscdkawsapigatewayv2integrations.NewWebSocketLambdaIntegration(jsii.String(\"SendMessageIntegration\"), messageHandler),\n})","version":"1"},"$":{"source":"import { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\n\ndeclare const messageHandler: lambda.Function;\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-apigatewayv2.WebSocketStageProps"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-apigatewayv2-integrations.WebSocketLambdaIntegration","@aws-cdk/aws-apigatewayv2.IWebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi","@aws-cdk/aws-apigatewayv2.WebSocketApi#addRoute","@aws-cdk/aws-apigatewayv2.WebSocketRouteIntegration","@aws-cdk/aws-apigatewayv2.WebSocketRouteOptions","@aws-cdk/aws-apigatewayv2.WebSocketStage","@aws-cdk/aws-apigatewayv2.WebSocketStageProps","@aws-cdk/aws-lambda.IFunction","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport { WebSocketLambdaIntegration } from '@aws-cdk/aws-apigatewayv2-integrations';\n\ndeclare const messageHandler: lambda.Function;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Duration, Stack } from '@aws-cdk/core';\nimport * as apigwv2 from '@aws-cdk/aws-apigatewayv2';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as elbv2 from '@aws-cdk/aws-elasticloadbalancingv2';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst webSocketApi = new apigwv2.WebSocketApi(this, 'mywsapi');\nnew apigwv2.WebSocketStage(this, 'mystage', {\n  webSocketApi,\n  stageName: 'dev',\n  autoDeploy: true,\n});\nwebSocketApi.addRoute('sendmessage', {\n  integration: new WebSocketLambdaIntegration('SendMessageIntegration', messageHandler),\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n","syntaxKindCounter":{"10":6,"75":17,"104":2,"106":1,"130":1,"153":1,"169":1,"193":2,"194":3,"196":1,"197":3,"225":2,"226":2,"242":2,"243":2,"254":1,"255":1,"257":1,"258":1,"281":3,"282":1,"290":1},"fqnsFingerprint":"67cc9d4a9b2e105209e54ff025f2a08ded28129910410b15ef6f3c2d030e0c74"}}}