{
 "Resources": {
  "S3UploadBucketEF2ED902": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "testing-bhs",
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "PUT",
        "HEAD"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "YourStackName/S3UploadBucket/Resource"
   }
  },
  "UploadRequestFunctionServiceRoleC2FB4912": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "YourStackName/UploadRequestFunction/ServiceRole/Resource"
   }
  },
  "UploadRequestFunctionServiceRoleDefaultPolicy69DE0DCC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:PutObject*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "S3UploadBucketEF2ED902",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "S3UploadBucketEF2ED902",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UploadRequestFunctionServiceRoleDefaultPolicy69DE0DCC",
    "Roles": [
     {
      "Ref": "UploadRequestFunctionServiceRoleC2FB4912"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "YourStackName/UploadRequestFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "UploadRequestFunction823068EA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Ref": "AssetParameters3ec17a613dca5e835d63b43788f92d91073bc5bc20d54f0a322b4040175971f6S3BucketD2694671"
     },
     "S3Key": {
      "Fn::Join": [
       "",
       [
        {
         "Fn::Select": [
          0,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParameters3ec17a613dca5e835d63b43788f92d91073bc5bc20d54f0a322b4040175971f6S3VersionKeyE37ADAD7"
            }
           ]
          }
         ]
        },
        {
         "Fn::Select": [
          1,
          {
           "Fn::Split": [
            "||",
            {
             "Ref": "AssetParameters3ec17a613dca5e835d63b43788f92d91073bc5bc20d54f0a322b4040175971f6S3VersionKeyE37ADAD7"
            }
           ]
          }
         ]
        }
       ]
      ]
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "UploadRequestFunctionServiceRoleC2FB4912",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "UploadBucket": {
       "Ref": "S3UploadBucketEF2ED902"
      }
     }
    },
    "FunctionName": "bhstest",
    "Handler": "GetUrlLambda.handler",
    "MemorySize": 128,
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "UploadRequestFunctionServiceRoleDefaultPolicy69DE0DCC",
    "UploadRequestFunctionServiceRoleC2FB4912"
   ],
   "Metadata": {
    "aws:cdk:path": "YourStackName/UploadRequestFunction/Resource",
    "aws:asset:path": "asset.3ec17a613dca5e835d63b43788f92d91073bc5bc20d54f0a322b4040175971f6",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "MyApi49610EDF": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "CorsConfiguration": {
     "AllowHeaders": [
      "*"
     ],
     "AllowMethods": [
      "GET",
      "POST",
      "DELETE",
      "OPTIONS"
     ],
     "AllowOrigins": [
      "*"
     ]
    },
    "Name": "MyApi",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "YourStackName/MyApi/Resource"
   }
  },
  "MyApiDefaultStageB2EF93C6": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "MyApi49610EDF"
    },
    "StageName": "$default",
    "AutoDeploy": true
   },
   "Metadata": {
    "aws:cdk:path": "YourStackName/MyApi/DefaultStage/Resource"
   }
  },
  "MyApiGETuploadsUploadAssetAPIIntegrationEA07A548": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "MyApi49610EDF"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "UploadRequestFunction823068EA",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "YourStackName/MyApi/GET--uploads/UploadAssetAPIIntegration/Resource"
   }
  },
  "MyApiGETuploadsUploadAssetAPIIntegrationPermission0E6F84A6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UploadRequestFunction823068EA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "MyApi49610EDF"
       },
       "/*/*/uploads"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "YourStackName/MyApi/GET--uploads/UploadAssetAPIIntegration-Permission"
   }
  },
  "MyApiGETuploadsAEEC1078": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "MyApi49610EDF"
    },
    "RouteKey": "GET /uploads",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "MyApiGETuploadsUploadAssetAPIIntegrationEA07A548"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "YourStackName/MyApi/GET--uploads/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12PUWrDMBBEz5J/ZWM7PUATQ0m/apwTbOWtUWxLRrtKCEJ3L5JbKP2aN8vsSlNDU71AtXvFB+/1MB2idp4gXgX1pE7MJFfB0dhRtc6y+KBFtV+2Q48LCflsPoKsoYx7Yhe8psyts4MR42xS+XjkI8Rz0BOV5A9tckampGZcPgeE+Baszns59pc78othLhcNLhB7N5eXinZuNvpZcoWS4uMecwGG0kPhakYUeuDz3kC8iKyn1eSFLNnmpuXgBnnUuyAbvVuh0ePvZ/7ZkkspKesGghsf7k0FdQ317sbG7H2wYhaCftNvw6+Bk3YBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "YourStackName/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "AssetParameters3ec17a613dca5e835d63b43788f92d91073bc5bc20d54f0a322b4040175971f6S3BucketD2694671": {
   "Type": "String",
   "Description": "S3 bucket for asset \"3ec17a613dca5e835d63b43788f92d91073bc5bc20d54f0a322b4040175971f6\""
  },
  "AssetParameters3ec17a613dca5e835d63b43788f92d91073bc5bc20d54f0a322b4040175971f6S3VersionKeyE37ADAD7": {
   "Type": "String",
   "Description": "S3 key for asset version \"3ec17a613dca5e835d63b43788f92d91073bc5bc20d54f0a322b4040175971f6\""
  },
  "AssetParameters3ec17a613dca5e835d63b43788f92d91073bc5bc20d54f0a322b4040175971f6ArtifactHash4E87AE6E": {
   "Type": "String",
   "Description": "Artifact hash for asset \"3ec17a613dca5e835d63b43788f92d91073bc5bc20d54f0a322b4040175971f6\""
  }
 },
 "Outputs": {
  "APIendpoint": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "MyApi49610EDF"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/"
     ]
    ]
   }
  },
  "S3UploadBucketName": {
   "Value": {
    "Ref": "S3UploadBucketEF2ED902"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 }
}